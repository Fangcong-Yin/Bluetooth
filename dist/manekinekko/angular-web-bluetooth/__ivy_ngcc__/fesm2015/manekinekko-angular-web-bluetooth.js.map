{"version":3,"file":"manekinekko-angular-web-bluetooth.js","sources":["../../../../projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts","../../../../projects/manekinekko/angular-web-bluetooth/src/lib/platform/server.ts","../../../../projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts","../../../../projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.service.ts","../../../../projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts","../../../../projects/manekinekko/angular-web-bluetooth/src/lib/lang/uuids/ti-sensortag2.ts","../../../../projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts","../../../../projects/manekinekko/angular-web-bluetooth/src/public_api.ts","../../../../projects/manekinekko/angular-web-bluetooth/src/manekinekko-angular-web-bluetooth.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class BrowserWebBluetooth {\r\n  private ble;\r\n\r\n  constructor() {\r\n    this.ble = navigator.bluetooth;\r\n    if (!this.ble) {\r\n      throw new Error('Your browser does not support Smart Bluetooth. See http://caniuse.com/#search=Bluetooth for more details.');\r\n    }\r\n  }\r\n\r\n  requestDevice(options: RequestDeviceOptions): Promise<BluetoothDevice> {\r\n    return this.ble.requestDevice(options);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ServerWebBluetooth {\r\n  static instance() {\r\n    // mocked object for now\r\n    return {};\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface Logger {\r\n  log(args: string[]): void;\r\n  error(args: string[]): void;\r\n  warn(args: string[]): void;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConsoleLoggerService implements Logger {\r\n  log(...args) {\r\n    console.log.apply(console, args);\r\n  }\r\n  error(...args) {\r\n    console.error.apply(console, args);\r\n  }\r\n  warn(...args) {\r\n    console.warn.apply(console, args);\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NoLoggerService implements Logger {\r\n  log(...args) {}\r\n  error(...args) {}\r\n  warn(...args) {}\r\n}\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\nimport { from, fromEvent, Observable, throwError } from 'rxjs';\r\nimport { filter, map, mergeMap, takeUntil } from 'rxjs/operators';\r\nimport { ConsoleLoggerService } from './logger.service';\r\nimport { BrowserWebBluetooth } from './platform/browser';\r\n\r\ntype ReadValueOptions = {\r\n  acceptAllDevices?: boolean;\r\n  optionalServices?: BluetoothServiceUUID[];\r\n  characteristic: BluetoothCharacteristicUUID,\r\n  service: BluetoothServiceUUID,\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BluetoothCore {\r\n  private device$: EventEmitter<BluetoothDevice>;\r\n  private gatt$: EventEmitter<BluetoothRemoteGATTServer>;\r\n  private characteristicValueChanges$: EventEmitter<DataView>;\r\n  private gattServer: BluetoothRemoteGATTServer;\r\n\r\n  constructor(private readonly webBle: BrowserWebBluetooth, private readonly console: ConsoleLoggerService) {\r\n\r\n    this.device$ = new EventEmitter<BluetoothDevice>();\r\n    this.gatt$ = new EventEmitter<BluetoothRemoteGATTServer>();\r\n    this.characteristicValueChanges$ = new EventEmitter<DataView>();\r\n\r\n    this.gattServer = null;\r\n  }\r\n\r\n  getDevice$(): Observable<BluetoothDevice> {\r\n    return this.device$;\r\n  }\r\n\r\n  getGATT$(): Observable<BluetoothRemoteGATTServer> {\r\n    return this.gatt$;\r\n  }\r\n\r\n  streamValues$(): Observable<DataView> {\r\n    return this.characteristicValueChanges$.pipe(filter(value => value && value.byteLength > 0));\r\n  }\r\n\r\n  /**\r\n   * Run the discovery process and read the value form the provided service and characteristic\r\n   * @param options the ReadValueOptions\r\n   */\r\n  async value(options: ReadValueOptions) {\r\n    this.console.log('[BLE::Info] Reading value with options %o', options);\r\n\r\n    if (typeof options.acceptAllDevices === 'undefined') {\r\n      options.acceptAllDevices = true;\r\n    }\r\n\r\n    if (typeof options.optionalServices === 'undefined') {\r\n      options.optionalServices = [options.service];\r\n    }\r\n    else {\r\n      options.optionalServices = [...options.optionalServices];\r\n    }\r\n\r\n    this.console.log('[BLE::Info] Reading value with options %o', options);\r\n\r\n    try {\r\n      const device = await this.discover({\r\n        acceptAllDevices: options.acceptAllDevices,\r\n        optionalServices: options.optionalServices\r\n      }) as BluetoothDevice;\r\n      this.console.log('[BLE::Info] Device info %o', device);\r\n\r\n      const gatt = await this.connectDevice(device);\r\n      this.console.log('[BLE::Info] GATT info %o', gatt);\r\n\r\n      const primaryService = await this.getPrimaryService(gatt, options.service) as BluetoothRemoteGATTService;\r\n      this.console.log('[BLE::Info] Primary Service info %o', primaryService);\r\n\r\n      const characteristic = await this.getCharacteristic(primaryService, options.characteristic) as BluetoothRemoteGATTCharacteristic;\r\n      this.console.log('[BLE::Info] Characteristic info %o', characteristic);\r\n\r\n      const value = await characteristic.readValue();\r\n      this.console.log('[BLE::Info] Value info %o', value);\r\n\r\n      return value;\r\n    }\r\n    catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  value$(options: ReadValueOptions) {\r\n    return from(this.value(options));\r\n  }\r\n\r\n  /**\r\n   * Run the discovery process.\r\n   *\r\n   * @param Options such as filters and optional services\r\n   * @return  The GATT server for the chosen device\r\n   */\r\n  async discover(options: RequestDeviceOptions = {} as RequestDeviceOptions) {\r\n    options.optionalServices = options.optionalServices || ['generic_access'];\r\n\r\n    this.console.log('[BLE::Info] Requesting devices with options %o', options);\r\n\r\n    let device = null;\r\n    try {\r\n      device = await this.webBle.requestDevice(options);\r\n      device.addEventListener('gattserverdisconnected', this.onDeviceDisconnected.bind(this));\r\n\r\n      if (device) {\r\n        this.device$.emit(device);\r\n      }\r\n      else {\r\n        this.device$.error(`[BLE::Error] Can not get the Bluetooth Remote GATT Server. Abort.`);\r\n      }\r\n\r\n    } catch (error) {\r\n      this.console.error(error);\r\n    }\r\n\r\n    return device;\r\n  }\r\n\r\n  /**\r\n   * This handler will trigger when the client disconnets from the server.\r\n   *\r\n   * @param event The onDeviceDisconnected event\r\n   */\r\n  onDeviceDisconnected(event: Event) {\r\n    const disconnectedDevice = event.target as BluetoothDevice;\r\n    this.console.log('[BLE::Info] disconnected device %o', disconnectedDevice);\r\n\r\n    this.device$.emit(null);\r\n  }\r\n\r\n  /**\r\n   * Run the discovery process.\r\n   *\r\n   * @param Options such as filters and optional services\r\n   * @return  Emites the value of the requested service read from the device\r\n   */\r\n  discover$(options?: RequestDeviceOptions): Observable<void | BluetoothRemoteGATTServer> {\r\n    return from(this.discover(options)).pipe(mergeMap((device: BluetoothDevice) => this.connectDevice$(device)));\r\n  }\r\n\r\n  /**\r\n   * Connect to current device.\r\n   *\r\n   * @return  Emites the gatt server instance of the requested device\r\n   */\r\n  async connectDevice(device: BluetoothDevice) {\r\n    if (device) {\r\n      this.console.log('[BLE::Info] Connecting to Bluetooth Remote GATT Server of %o', device);\r\n\r\n      try {\r\n        const gattServer = await device.gatt.connect();\r\n        this.gattServer = gattServer;\r\n        this.gatt$.emit(gattServer);\r\n        return gattServer;\r\n      } catch (error) {\r\n        // probably the user has canceled the discovery\r\n        Promise.reject(`${error.message}`);\r\n        this.gatt$.error(`${error.message}`);\r\n      }\r\n    } else {\r\n      this.console.error('[BLE::Error] Was not able to connect to Bluetooth Remote GATT Server');\r\n      this.gatt$.error(null);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Connect to current device.\r\n   *\r\n   * @return  Emites the gatt server instance of the requested device\r\n   */\r\n  connectDevice$(device: BluetoothDevice) {\r\n    return from(this.connectDevice(device));\r\n  }\r\n\r\n  /**\r\n   * Disconnect the current connected device\r\n   */\r\n  disconnectDevice() {\r\n    if (!this.gattServer) {\r\n      return;\r\n    }\r\n    this.console.log('[BLE::Info] Disconnecting from Bluetooth Device %o', this.gattServer);\r\n\r\n    if (this.gattServer.connected) {\r\n      this.gattServer.disconnect();\r\n    } else {\r\n      this.console.log('[BLE::Info] Bluetooth device is already disconnected');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Requests the primary service.\r\n   *\r\n   * @param gatt The BluetoothRemoteGATTServer sever\r\n   * @param service The UUID of the primary service\r\n   * @return The remote service (as a Promise)\r\n   */\r\n  async getPrimaryService(gatt: BluetoothRemoteGATTServer, service: BluetoothServiceUUID): Promise<BluetoothRemoteGATTService> {\r\n    try {\r\n      const remoteService = await gatt.getPrimaryService(service);\r\n      return await Promise.resolve(remoteService);\r\n    }\r\n    catch (error) {\r\n      return await Promise.reject(`${error.message} (${service})`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Requests the primary service.\r\n   *\r\n   * @param gatt The BluetoothRemoteGATTServer sever\r\n   * @param service The UUID of the primary service\r\n   * @return The remote service (as an observable).\r\n   */\r\n  getPrimaryService$(gatt: BluetoothRemoteGATTServer, service: BluetoothServiceUUID): Observable<BluetoothRemoteGATTService> {\r\n    this.console.log('[BLE::Info] Getting primary service \"%s\" (if available) of %o', service, gatt);\r\n\r\n\r\n    if (gatt) {\r\n      return from(\r\n        this.getPrimaryService(gatt, service)\r\n      );\r\n    }\r\n    else {\r\n      return throwError(new Error('[BLE::Error] Was not able to connect to the Bluetooth Remote GATT Server'));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Requests a characteristic from the primary service.\r\n   *\r\n   * @param primaryService The primary service.\r\n   * @param characteristic The characteristic's UUID.\r\n   * @returns The characteristic description (as a Promise).\r\n   */\r\n  async getCharacteristic(\r\n    primaryService: BluetoothRemoteGATTService,\r\n    characteristic: BluetoothCharacteristicUUID\r\n  ): Promise<BluetoothRemoteGATTCharacteristic | void> {\r\n    this.console.log('[BLE::Info] Getting Characteristic \"%s\" of %o', characteristic, primaryService);\r\n\r\n    try {\r\n      const char = await primaryService.getCharacteristic(characteristic);\r\n      // listen for characteristic value changes\r\n      if (char.properties.notify) {\r\n        char.startNotifications().then(_ => {\r\n          this.console.log('[BLE::Info] Starting notifications of \"%s\"', characteristic);\r\n          char.addEventListener('characteristicvaluechanged', this.onCharacteristicChanged.bind(this));\r\n        }, (error: DOMException) => {\r\n          Promise.reject(`${error.message} (${characteristic})`);\r\n        });\r\n      }\r\n      else {\r\n        char.addEventListener('characteristicvaluechanged', this.onCharacteristicChanged.bind(this));\r\n      }\r\n      return char;\r\n    }\r\n    catch (rejectionError) {\r\n      Promise.reject(`${rejectionError.message} (${characteristic})`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Requests a characteristic from the primary service.\r\n   *\r\n   * @param primaryService The primary service.\r\n   * @param characteristic The characteristic's UUID.\r\n   * @returns The characteristic description (as a Observable).\r\n   */\r\n  getCharacteristic$(\r\n    primaryService: BluetoothRemoteGATTService,\r\n    characteristic: BluetoothCharacteristicUUID\r\n  ): Observable<void | BluetoothRemoteGATTCharacteristic> {\r\n    this.console.log('[BLE::Info] Getting Characteristic \"%s\" of %o', characteristic, primaryService);\r\n\r\n    return from(this.getCharacteristic(primaryService, characteristic));\r\n  }\r\n\r\n  /**\r\n   * Sets the characteristic's state.\r\n   *\r\n   * @param service The parent service of the characteristic.\r\n   * @param characteristic The requested characteristic\r\n   * @param state An ArrayBuffer containing the value of the characteristic.\r\n   * @return The primary service (useful for chaining).\r\n   */\r\n  setCharacteristicState(service: BluetoothServiceUUID, characteristic: BluetoothCharacteristicUUID, state: ArrayBuffer) {\r\n    const primaryService = this.getPrimaryService$(this.gattServer, service);\r\n\r\n    primaryService\r\n      // tslint:disable-next-line: variable-name\r\n      .pipe(mergeMap((_primaryService: BluetoothRemoteGATTService) => this.getCharacteristic$(_primaryService, characteristic)))\r\n      // tslint:disable-next-line: no-shadowed-variable\r\n      .subscribe((characteristic: BluetoothRemoteGATTCharacteristic) => this.writeValue$(characteristic, state));\r\n\r\n    return primaryService;\r\n  }\r\n\r\n  /**\r\n   * Enables the specified characteristic of a given service.\r\n   *\r\n   * @param service The parent service of the characteristic.\r\n   * @param characteristic The requested characteristic\r\n   * @return The primary service (useful for chaining).\r\n   */\r\n  enableCharacteristic(service: BluetoothServiceUUID, characteristic: BluetoothCharacteristicUUID, state?: any) {\r\n    state = state || new Uint8Array([1]);\r\n    return this.setCharacteristicState(service, characteristic, state);\r\n  }\r\n\r\n  /**\r\n   * Disables the specified characteristic of a given service.\r\n   *\r\n   * @param service The parent service of the characteristic.\r\n   * @param characteristic The requested characteristic.\r\n   * @return The primary service (useful for chaining).\r\n   */\r\n  disbaleCharacteristic(service: BluetoothServiceUUID, characteristic: BluetoothCharacteristicUUID, state?: any) {\r\n    state = state || new Uint8Array([0]);\r\n    return this.setCharacteristicState(service, characteristic, state);\r\n  }\r\n\r\n  /**\r\n   * Dispatches new values emitted by a characteristic.\r\n   *\r\n   * @param event the distpatched event.\r\n   */\r\n  onCharacteristicChanged(event: Event) {\r\n    this.console.log('[BLE::Info] Dispatching new characteristic value %o', event);\r\n\r\n    const value = (event.target as BluetoothRemoteGATTCharacteristic).value;\r\n    this.characteristicValueChanges$.emit(value);\r\n  }\r\n\r\n  /**\r\n   * Reads a value from the characteristics, as a DataView.\r\n   *\r\n   * @param characteristic The requested characteristic.\r\n   * @return the DataView value (as an Observable).\r\n   */\r\n  readValue$(characteristic: BluetoothRemoteGATTCharacteristic): Observable<DataView> {\r\n    this.console.log('[BLE::Info] Reading Characteristic %o', characteristic);\r\n\r\n    return from(\r\n      characteristic\r\n        .readValue()\r\n        .then((data: DataView) => Promise.resolve(data), (error: DOMException) => Promise.reject(`${error.message}`))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Writes a value into the specified characteristic.\r\n   *\r\n   * @param characteristic The requested characteristic.\r\n   * @param value The value to be written (as an ArrayBuffer or Uint8Array).\r\n   * @return an void Observable.\r\n   */\r\n  writeValue$(characteristic: BluetoothRemoteGATTCharacteristic, value: ArrayBuffer | Uint8Array) {\r\n    this.console.log('[BLE::Info] Writing Characteristic %o', characteristic);\r\n\r\n    return from(characteristic.writeValue(value).then(_ => Promise.resolve(), (error: DOMException) => Promise.reject(`${error.message}`)));\r\n  }\r\n\r\n  /**\r\n   * A stream of DataView values emitted by the specified characteristic.\r\n   *\r\n   * @param characteristic The characteristic which value you want to observe\r\n   * @return The stream of DataView values.\r\n   */\r\n  observeValue$(characteristic: BluetoothRemoteGATTCharacteristic): Observable<DataView> {\r\n    characteristic.startNotifications();\r\n    const disconnected = fromEvent(characteristic.service.device, 'gattserverdisconnected');\r\n    return fromEvent(characteristic, 'characteristicvaluechanged')\r\n      .pipe(\r\n        map((event: Event) => (event.target as BluetoothRemoteGATTCharacteristic).value as DataView),\r\n        takeUntil(disconnected)\r\n      );\r\n  }\r\n\r\n  /**\r\n   * A utility method to convert LE to an unsigned 16-bit integer values.\r\n   *\r\n   * @param data The DataView binary data.\r\n   * @param byteOffset The offset, in byte, from the start of the view where to read the data.\r\n   * @return An unsigned 16-bit integer number.\r\n   */\r\n  littleEndianToUint16(data: any, byteOffset: number): number {\r\n    // tslint:disable-next-line:no-bitwise\r\n    return (this.littleEndianToUint8(data, byteOffset + 1) << 8) + this.littleEndianToUint8(data, byteOffset);\r\n  }\r\n\r\n  /**\r\n   * A utility method to convert LE to an unsigned 8-bit integer values.\r\n   *\r\n   * @param data The DataView binary data.\r\n   * @param byteOffset The offset, in byte, from the start of the view where to read the data.\r\n   * @return An unsigned 8-bit integer number.\r\n   */\r\n  littleEndianToUint8(data: any, byteOffset: number): number {\r\n    return data.getUint8(byteOffset);\r\n  }\r\n\r\n  /**\r\n   * Sends random data (for testing purposes only).\r\n   *\r\n   * @return Random unsigned 8-bit integer values.\r\n   */\r\n  fakeNext(fakeValue?: () => DataView) {\r\n    if (fakeValue === undefined) {\r\n      fakeValue = () => {\r\n        const dv = new DataView(new ArrayBuffer(8));\r\n        // tslint:disable-next-line:no-bitwise\r\n        dv.setUint8(0, (Math.random() * 110) | 0);\r\n        return dv;\r\n      };\r\n    }\r\n\r\n    this.characteristicValueChanges$.emit(fakeValue());\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders, InjectionToken, Optional } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BluetoothCore } from './bluetooth.service';\r\nimport { BrowserWebBluetooth } from './platform/browser';\r\n\r\nimport { ConsoleLoggerService, NoLoggerService } from './logger.service';\r\n\r\nexport interface AWBOptions {\r\n  enableTracing?: boolean;\r\n}\r\n\r\nexport function browserWebBluetooth() {\r\n  return new BrowserWebBluetooth();\r\n}\r\n\r\nexport function consoleLoggerServiceConfig(options: AWBOptions) {\r\n  if (options && options.enableTracing) {\r\n    return new ConsoleLoggerService();\r\n  } else {\r\n    return new NoLoggerService();\r\n  }\r\n}\r\nexport function makeMeTokenInjector() {\r\n  return new InjectionToken('AWBOptions');\r\n}\r\n\r\n@NgModule({\r\n  imports: [CommonModule]\r\n})\r\nexport class WebBluetoothModule {\r\n  static forRoot(options: AWBOptions = {}): ModuleWithProviders<WebBluetoothModule> {\r\n    return {\r\n      ngModule: WebBluetoothModule,\r\n      providers: [\r\n        BluetoothCore,\r\n        {\r\n          provide: BrowserWebBluetooth,\r\n          useFactory: browserWebBluetooth\r\n        },\r\n        {\r\n          provide: makeMeTokenInjector,\r\n          useValue: options\r\n        },\r\n        {\r\n          provide: ConsoleLoggerService,\r\n          useFactory: consoleLoggerServiceConfig,\r\n          deps: [makeMeTokenInjector]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","// http://processors.wiki.ti.com/images/a/a8/BLE_SensorTag_GATT_Server.pdf\r\n\r\n// prettier-ignore\r\nexport const TiTag = {\r\n\r\n  DEVICE_INFORMATION : {\r\n    SERVICE :                 'f000180a-0451-4000-b000-000000000000',\r\n    SYSTEM_ID :               'f0002a23-0451-4000-b000-000000000000',\r\n    MODEL_NUMBER :            'f0002a24-0451-4000-b000-000000000000',\r\n    SERIAL_NUMBER :           'f0002a25-0451-4000-b000-000000000000',\r\n    FIRMWARE_REV :            'f0002a26-0451-4000-b000-000000000000',\r\n    HARDWARE_REV :            'f0002a27-0451-4000-b000-000000000000',\r\n    SOFTWARE_REV :            'f0002a28-0451-4000-b000-000000000000',\r\n    MANIFACTURER :            'f0002a29-0451-4000-b000-000000000000',\r\n    IEEE11073 :               'f0002a2a-0451-4000-b000-000000000000',\r\n    PNP_ID :                  'f0002a50-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  BATTERY : {\r\n    SERVICE :                 'f000180f-0451-4000-b000-000000000000',\r\n    LEVEL :                   'f0002a19-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  TEMPERATURE : {\r\n    SERVICE :                 'f000aa00-0451-4000-b000-000000000000',\r\n    DATA :                    'f000aa01-0451-4000-b000-000000000000',\r\n    CONFIGURATION :           'f000aa02-0451-4000-b000-000000000000',\r\n    PERIOD :                  'f000aa03-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  HUMIDITY : {\r\n    SERVICE :                 'f000aa20-0451-4000-b000-000000000000',\r\n    DATA :                    'f000aa21-0451-4000-b000-000000000000',\r\n    CONFIGURATION :           'f000aa22-0451-4000-b000-000000000000',\r\n    PERIOD :                  'f000aa23-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  BAROMETER : {\r\n    SERVICE :                 'f000aa40-0451-4000-b000-000000000000',\r\n    DATA :                    'f000aa41-0451-4000-b000-000000000000',\r\n    CONFIGURATION :           'f000aa42-0451-4000-b000-000000000000',\r\n    PERIOD :                  'f000aa44-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  // service not available in model CC2650\r\n  // ACCELEROMETER : {\r\n  //   SERVICE :                 'f000aa10-0451-4000-b000-000000000000',\r\n  //   DATA :                    'f000aa11-0451-4000-b000-000000000000',\r\n  //   CONFIGURATION :           'f000aa12-0451-4000-b000-000000000000',\r\n  //   PERIOD :                  'f000aa13-0451-4000-b000-000000000000'\r\n  // },\r\n\r\n  // service not available in model CC2650\r\n  // MAGNETOMETER : {\r\n  //   SERVICE :                 'f000aa30-0451-4000-b000-000000000000',\r\n  //   DATA :                    'f000aa31-0451-4000-b000-000000000000',\r\n  //   CONFIGURATION :           'f000aa32-0451-4000-b000-000000000000',\r\n  //   PERIOD :                  'f000aa33-0451-4000-b000-000000000000'\r\n  // },\r\n\r\n  // service not available in model CC2650\r\n  // GYROSCOPE : {\r\n  //   SERVICE :                 'f000aa50-0451-4000-b000-000000000000',\r\n  //   DATA :                    'f000aa51-0451-4000-b000-000000000000',\r\n  //   CONFIGURATION :           'f000aa52-0451-4000-b000-000000000000',\r\n  //   PERIOD :                  'f000aa53-0451-4000-b000-000000000000'\r\n  // },\r\n\r\n  MOVEMENT : {\r\n    SERVICE :                 'f000aa80-0451-4000-b000-000000000000',\r\n    DATA :                    'f000aa81-0451-4000-b000-000000000000',\r\n    CONFIGURATION :           'f000aa82-0451-4000-b000-000000000000',\r\n    PERIOD :                  'f000aa83-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  LIGHT : {\r\n    SERVICE :                 'f000aa70-0451-4000-b000-000000000000',\r\n    DATA :                    'f000aa71-0451-4000-b000-000000000000',\r\n    CONFIGURATION :           'f000aa72-0451-4000-b000-000000000000',\r\n    PERIOD :                  'f000aa73-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  KEYPRESS : {\r\n    SERVICE :                 'f000ffe0-0451-4000-b000-000000000000',\r\n    STATE :                   'f000ffe1-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  __REGISTER__ : {\r\n    SERVICE :                 'f000ac00-0451-4000-b000-000000000000',\r\n    DATA :                    'f000ac01-0451-4000-b000-000000000000',\r\n    ADDRESS :                 'f000ac02-0451-4000-b000-000000000000',\r\n    DEVICE_ID :               'f000ac03-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  CONTROL : {\r\n    SERVICE :                 'f000ccc0-0451-4000-b000-000000000000',\r\n    CURRENT_USED_PARAMETERS : 'f000ccc1-0451-4000-b000-000000000000',\r\n    REQUEST_NEW_PARAMETERS :  'f000ccc2-0451-4000-b000-000000000000',\r\n    DISCONNECT_REQUEST :      'f000ccc3-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  OAD : {\r\n    SERVICE :                 'f000ffc0-0451-4000-b000-000000000000',\r\n    IMAGE_NOTIFY :            'f000ffc1-0451-4000-b000-000000000000',\r\n    IMAGE_BLOCK_REQUEST :     'f000ffc2-0451-4000-b000-000000000000',\r\n    IMAGE_COUNT :             'f000ffc3-0451-4000-b000-000000000000',\r\n    IMAGE_STATUS :            'f000ffc4-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  IO : {\r\n    SERVICE :                 'f000aa64-0451-4000-b000-000000000000',\r\n    DATA :                    'f000aa65-0451-4000-b000-000000000000',\r\n    CONFIG :                  'f000aa66-0451-4000-b000-000000000000'\r\n  }\r\n};\r\n\r\nexport const TI_SENSORAG_SERVICES = Object.keys(TiTag).map(key => TiTag[key].SERVICE);\r\n","/*\r\n * Fake Web Bluetooth implementation\r\n * Replace real browser Bluetooth objects by a much simpler objects that implement some required functionalities\r\n */\r\n\r\nexport class FakeBluetoothDevice {\r\n  gatt: BluetoothRemoteGATTServer;\r\n  private listeners: {\r\n    [key in 'gattserverdisconnected']: EventListener[]\r\n  } = {\r\n    gattserverdisconnected: []\r\n  };\r\n\r\n  constructor(public id: string, public name: string) {\r\n  }\r\n\r\n  addEventListener(type: string, listener: EventListener) {\r\n    this.listeners[type] = [\r\n      ...this.listeners[type],\r\n      listener\r\n    ];\r\n  }\r\n\r\n  disconnect() {\r\n    const mockedEvent = {target: this} as unknown;\r\n    this.listeners.gattserverdisconnected.forEach(listener => listener(mockedEvent as Event));\r\n  }\r\n\r\n  clear() {\r\n    this.id = undefined;\r\n    this.name = undefined;\r\n    this.listeners = {\r\n      gattserverdisconnected: []\r\n    };\r\n  }\r\n}\r\n\r\nexport class FakeBluetoothRemoteGATTServer {\r\n  connected = false;\r\n\r\n  constructor(public device, public services: { [key: string]: { service, primary: boolean } }) {\r\n    device.gatt = this;\r\n  }\r\n\r\n  connect() {\r\n    this.connected = true;\r\n    return Promise.resolve(this);\r\n  }\r\n\r\n  getPrimaryService(service: BluetoothServiceUUID) {\r\n    return Promise.resolve(this.services[service].service);\r\n  }\r\n\r\n  disconnect() {\r\n    this.device.disconnect();\r\n    this.connected = false;\r\n  }\r\n}\r\n\r\nexport class FakeBluetoothRemoteGATTService {\r\n  constructor(public device, public characteristics) {\r\n    this.characteristics.service = this;\r\n  }\r\n\r\n  getCharacteristic(characteristic: BluetoothCharacteristicUUID) {\r\n    return Promise.resolve(this.characteristics[characteristic]);\r\n  }\r\n}\r\n\r\nexport class FakeBluetoothRemoteGATTCharacteristic {\r\n  value: DataView;\r\n  properties: BluetoothCharacteristicProperties;\r\n  private readonly initialValue: DataView;\r\n  private listeners: {\r\n    [key in 'characteristicvaluechanged']: EventListener[]\r\n  } = {\r\n    characteristicvaluechanged: []\r\n  };\r\n\r\n  constructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView) {\r\n    this.properties = properties;\r\n    this.value = initialValue;\r\n    this.initialValue = initialValue;\r\n  }\r\n\r\n  readValue() {\r\n    return Promise.resolve(this.value);\r\n  }\r\n\r\n  addEventListener(type: string, listener: EventListener) {\r\n    this.listeners[type] = [\r\n      ...this.listeners[type],\r\n      listener\r\n    ];\r\n  }\r\n\r\n  changeValue(value: DataView) {\r\n    this.value = value;\r\n    const mockedEvent = {target: this} as unknown;\r\n    this.listeners.characteristicvaluechanged.forEach(listener => listener(mockedEvent as Event));\r\n  }\r\n\r\n  clear() {\r\n    this.value = this.initialValue;\r\n    this.listeners = {\r\n      characteristicvaluechanged: []\r\n    };\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of angular-web-bluetooth\r\n */\r\n\r\nexport * from './lib/platform/browser';\r\nexport * from './lib/platform/server';\r\nexport * from './lib/bluetooth.service';\r\nexport * from './lib/logger.service';\r\nexport * from './lib/bluetooth.module';\r\nexport * from './lib/lang/uuids';\r\nexport * from './lib/test.utils';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}