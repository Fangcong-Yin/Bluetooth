{"version":3,"file":"manekinekko-angular-web-bluetooth.js","sources":["../../../../projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts","../../../../projects/manekinekko/angular-web-bluetooth/src/lib/platform/server.ts","../../../../projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts","../../../../projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.service.ts","../../../../projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts","../../../../projects/manekinekko/angular-web-bluetooth/src/lib/lang/uuids/ti-sensortag2.ts","../../../../projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts","../../../../projects/manekinekko/angular-web-bluetooth/src/public_api.ts","../../../../projects/manekinekko/angular-web-bluetooth/src/manekinekko-angular-web-bluetooth.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class BrowserWebBluetooth {\r\n  private ble;\r\n\r\n  constructor() {\r\n    this.ble = navigator.bluetooth;\r\n    if (!this.ble) {\r\n      throw new Error('Your browser does not support Smart Bluetooth. See http://caniuse.com/#search=Bluetooth for more details.');\r\n    }\r\n  }\r\n\r\n  requestDevice(options: RequestDeviceOptions): Promise<BluetoothDevice> {\r\n    return this.ble.requestDevice(options);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ServerWebBluetooth {\r\n  static instance() {\r\n    // mocked object for now\r\n    return {};\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface Logger {\r\n  log(args: string[]): void;\r\n  error(args: string[]): void;\r\n  warn(args: string[]): void;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConsoleLoggerService implements Logger {\r\n  log(...args) {\r\n    console.log.apply(console, args);\r\n  }\r\n  error(...args) {\r\n    console.error.apply(console, args);\r\n  }\r\n  warn(...args) {\r\n    console.warn.apply(console, args);\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NoLoggerService implements Logger {\r\n  log(...args) {}\r\n  error(...args) {}\r\n  warn(...args) {}\r\n}\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\nimport { from, fromEvent, Observable, throwError } from 'rxjs';\r\nimport { filter, map, mergeMap, takeUntil } from 'rxjs/operators';\r\nimport { ConsoleLoggerService } from './logger.service';\r\nimport { BrowserWebBluetooth } from './platform/browser';\r\n\r\ntype ReadValueOptions = {\r\n  acceptAllDevices?: boolean;\r\n  optionalServices?: BluetoothServiceUUID[];\r\n  characteristic: BluetoothCharacteristicUUID,\r\n  service: BluetoothServiceUUID,\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BluetoothCore {\r\n  private device$: EventEmitter<BluetoothDevice>;\r\n  private gatt$: EventEmitter<BluetoothRemoteGATTServer>;\r\n  private characteristicValueChanges$: EventEmitter<DataView>;\r\n  private gattServer: BluetoothRemoteGATTServer;\r\n\r\n  constructor(private readonly webBle: BrowserWebBluetooth, private readonly console: ConsoleLoggerService) {\r\n\r\n    this.device$ = new EventEmitter<BluetoothDevice>();\r\n    this.gatt$ = new EventEmitter<BluetoothRemoteGATTServer>();\r\n    this.characteristicValueChanges$ = new EventEmitter<DataView>();\r\n\r\n    this.gattServer = null;\r\n  }\r\n\r\n  getDevice$(): Observable<BluetoothDevice> {\r\n    return this.device$;\r\n  }\r\n\r\n  getGATT$(): Observable<BluetoothRemoteGATTServer> {\r\n    return this.gatt$;\r\n  }\r\n\r\n  streamValues$(): Observable<DataView> {\r\n    return this.characteristicValueChanges$.pipe(filter(value => value && value.byteLength > 0));\r\n  }\r\n\r\n  /**\r\n   * Run the discovery process and read the value form the provided service and characteristic\r\n   * @param options the ReadValueOptions\r\n   */\r\n  async value(options: ReadValueOptions) {\r\n    this.console.log('[BLE::Info] Reading value with options %o', options);\r\n\r\n    if (typeof options.acceptAllDevices === 'undefined') {\r\n      options.acceptAllDevices = true;\r\n    }\r\n\r\n    if (typeof options.optionalServices === 'undefined') {\r\n      options.optionalServices = [options.service];\r\n    }\r\n    else {\r\n      options.optionalServices = [...options.optionalServices];\r\n    }\r\n\r\n    this.console.log('[BLE::Info] Reading value with options %o', options);\r\n\r\n    try {\r\n      const device = await this.discover({\r\n        acceptAllDevices: options.acceptAllDevices,\r\n        optionalServices: options.optionalServices\r\n      }) as BluetoothDevice;\r\n      this.console.log('[BLE::Info] Device info %o', device);\r\n\r\n      const gatt = await this.connectDevice(device);\r\n      this.console.log('[BLE::Info] GATT info %o', gatt);\r\n\r\n      const primaryService = await this.getPrimaryService(gatt, options.service) as BluetoothRemoteGATTService;\r\n      this.console.log('[BLE::Info] Primary Service info %o', primaryService);\r\n\r\n      const characteristic = await this.getCharacteristic(primaryService, options.characteristic) as BluetoothRemoteGATTCharacteristic;\r\n      this.console.log('[BLE::Info] Characteristic info %o', characteristic);\r\n\r\n      const value = await characteristic.readValue();\r\n      this.console.log('[BLE::Info] Value info %o', value);\r\n\r\n      return value;\r\n    }\r\n    catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  value$(options: ReadValueOptions) {\r\n    return from(this.value(options));\r\n  }\r\n\r\n  /**\r\n   * Run the discovery process.\r\n   *\r\n   * @param Options such as filters and optional services\r\n   * @return  The GATT server for the chosen device\r\n   */\r\n  async discover(options: RequestDeviceOptions = {} as RequestDeviceOptions) {\r\n    options.optionalServices = options.optionalServices || ['generic_access'];\r\n\r\n    this.console.log('[BLE::Info] Requesting devices with options %o', options);\r\n\r\n    let device = null;\r\n    try {\r\n      device = await this.webBle.requestDevice(options);\r\n      device.addEventListener('gattserverdisconnected', this.onDeviceDisconnected.bind(this));\r\n\r\n      if (device) {\r\n        this.device$.emit(device);\r\n      }\r\n      else {\r\n        this.device$.error(`[BLE::Error] Can not get the Bluetooth Remote GATT Server. Abort.`);\r\n      }\r\n\r\n    } catch (error) {\r\n      this.console.error(error);\r\n    }\r\n\r\n    return device;\r\n  }\r\n\r\n  /**\r\n   * This handler will trigger when the client disconnets from the server.\r\n   *\r\n   * @param event The onDeviceDisconnected event\r\n   */\r\n  onDeviceDisconnected(event: Event) {\r\n    const disconnectedDevice = event.target as BluetoothDevice;\r\n    this.console.log('[BLE::Info] disconnected device %o', disconnectedDevice);\r\n\r\n    this.device$.emit(null);\r\n  }\r\n\r\n  /**\r\n   * Run the discovery process.\r\n   *\r\n   * @param Options such as filters and optional services\r\n   * @return  Emites the value of the requested service read from the device\r\n   */\r\n  discover$(options?: RequestDeviceOptions): Observable<void | BluetoothRemoteGATTServer> {\r\n    return from(this.discover(options)).pipe(mergeMap((device: BluetoothDevice) => this.connectDevice$(device)));\r\n  }\r\n\r\n  /**\r\n   * Connect to current device.\r\n   *\r\n   * @return  Emites the gatt server instance of the requested device\r\n   */\r\n  async connectDevice(device: BluetoothDevice) {\r\n    if (device) {\r\n      this.console.log('[BLE::Info] Connecting to Bluetooth Remote GATT Server of %o', device);\r\n\r\n      try {\r\n        const gattServer = await device.gatt.connect();\r\n        this.gattServer = gattServer;\r\n        this.gatt$.emit(gattServer);\r\n        return gattServer;\r\n      } catch (error) {\r\n        // probably the user has canceled the discovery\r\n        Promise.reject(`${error.message}`);\r\n        this.gatt$.error(`${error.message}`);\r\n      }\r\n    } else {\r\n      this.console.error('[BLE::Error] Was not able to connect to Bluetooth Remote GATT Server');\r\n      this.gatt$.error(null);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Connect to current device.\r\n   *\r\n   * @return  Emites the gatt server instance of the requested device\r\n   */\r\n  connectDevice$(device: BluetoothDevice) {\r\n    return from(this.connectDevice(device));\r\n  }\r\n\r\n  /**\r\n   * Disconnect the current connected device\r\n   */\r\n  disconnectDevice() {\r\n    if (!this.gattServer) {\r\n      return;\r\n    }\r\n    this.console.log('[BLE::Info] Disconnecting from Bluetooth Device %o', this.gattServer);\r\n\r\n    if (this.gattServer.connected) {\r\n      this.gattServer.disconnect();\r\n    } else {\r\n      this.console.log('[BLE::Info] Bluetooth device is already disconnected');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Requests the primary service.\r\n   *\r\n   * @param gatt The BluetoothRemoteGATTServer sever\r\n   * @param service The UUID of the primary service\r\n   * @return The remote service (as a Promise)\r\n   */\r\n  async getPrimaryService(gatt: BluetoothRemoteGATTServer, service: BluetoothServiceUUID): Promise<BluetoothRemoteGATTService> {\r\n    try {\r\n      const remoteService = await gatt.getPrimaryService(service);\r\n      return await Promise.resolve(remoteService);\r\n    }\r\n    catch (error) {\r\n      return await Promise.reject(`${error.message} (${service})`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Requests the primary service.\r\n   *\r\n   * @param gatt The BluetoothRemoteGATTServer sever\r\n   * @param service The UUID of the primary service\r\n   * @return The remote service (as an observable).\r\n   */\r\n  getPrimaryService$(gatt: BluetoothRemoteGATTServer, service: BluetoothServiceUUID): Observable<BluetoothRemoteGATTService> {\r\n    this.console.log('[BLE::Info] Getting primary service \"%s\" (if available) of %o', service, gatt);\r\n\r\n\r\n    if (gatt) {\r\n      return from(\r\n        this.getPrimaryService(gatt, service)\r\n      );\r\n    }\r\n    else {\r\n      return throwError(new Error('[BLE::Error] Was not able to connect to the Bluetooth Remote GATT Server'));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Requests a characteristic from the primary service.\r\n   *\r\n   * @param primaryService The primary service.\r\n   * @param characteristic The characteristic's UUID.\r\n   * @returns The characteristic description (as a Promise).\r\n   */\r\n  async getCharacteristic(\r\n    primaryService: BluetoothRemoteGATTService,\r\n    characteristic: BluetoothCharacteristicUUID\r\n  ): Promise<BluetoothRemoteGATTCharacteristic | void> {\r\n    this.console.log('[BLE::Info] Getting Characteristic \"%s\" of %o', characteristic, primaryService);\r\n\r\n    try {\r\n      const char = await primaryService.getCharacteristic(characteristic);\r\n      // listen for characteristic value changes\r\n      if (char.properties.notify) {\r\n        char.startNotifications().then(_ => {\r\n          this.console.log('[BLE::Info] Starting notifications of \"%s\"', characteristic);\r\n          char.addEventListener('characteristicvaluechanged', this.onCharacteristicChanged.bind(this));\r\n        }, (error: DOMException) => {\r\n          Promise.reject(`${error.message} (${characteristic})`);\r\n        });\r\n      }\r\n      else {\r\n        char.addEventListener('characteristicvaluechanged', this.onCharacteristicChanged.bind(this));\r\n      }\r\n      return char;\r\n    }\r\n    catch (rejectionError) {\r\n      Promise.reject(`${rejectionError.message} (${characteristic})`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Requests a characteristic from the primary service.\r\n   *\r\n   * @param primaryService The primary service.\r\n   * @param characteristic The characteristic's UUID.\r\n   * @returns The characteristic description (as a Observable).\r\n   */\r\n  getCharacteristic$(\r\n    primaryService: BluetoothRemoteGATTService,\r\n    characteristic: BluetoothCharacteristicUUID\r\n  ): Observable<void | BluetoothRemoteGATTCharacteristic> {\r\n    this.console.log('[BLE::Info] Getting Characteristic \"%s\" of %o', characteristic, primaryService);\r\n\r\n    return from(this.getCharacteristic(primaryService, characteristic));\r\n  }\r\n\r\n  /**\r\n   * Sets the characteristic's state.\r\n   *\r\n   * @param service The parent service of the characteristic.\r\n   * @param characteristic The requested characteristic\r\n   * @param state An ArrayBuffer containing the value of the characteristic.\r\n   * @return The primary service (useful for chaining).\r\n   */\r\n  setCharacteristicState(service: BluetoothServiceUUID, characteristic: BluetoothCharacteristicUUID, state: ArrayBuffer) {\r\n    const primaryService = this.getPrimaryService$(this.gattServer, service);\r\n\r\n    primaryService\r\n      // tslint:disable-next-line: variable-name\r\n      .pipe(mergeMap((_primaryService: BluetoothRemoteGATTService) => this.getCharacteristic$(_primaryService, characteristic)))\r\n      // tslint:disable-next-line: no-shadowed-variable\r\n      .subscribe((characteristic: BluetoothRemoteGATTCharacteristic) => this.writeValue$(characteristic, state));\r\n\r\n    return primaryService;\r\n  }\r\n\r\n  /**\r\n   * Enables the specified characteristic of a given service.\r\n   *\r\n   * @param service The parent service of the characteristic.\r\n   * @param characteristic The requested characteristic\r\n   * @return The primary service (useful for chaining).\r\n   */\r\n  enableCharacteristic(service: BluetoothServiceUUID, characteristic: BluetoothCharacteristicUUID, state?: any) {\r\n    state = state || new Uint8Array([1]);\r\n    return this.setCharacteristicState(service, characteristic, state);\r\n  }\r\n\r\n  /**\r\n   * Disables the specified characteristic of a given service.\r\n   *\r\n   * @param service The parent service of the characteristic.\r\n   * @param characteristic The requested characteristic.\r\n   * @return The primary service (useful for chaining).\r\n   */\r\n  disbaleCharacteristic(service: BluetoothServiceUUID, characteristic: BluetoothCharacteristicUUID, state?: any) {\r\n    state = state || new Uint8Array([0]);\r\n    return this.setCharacteristicState(service, characteristic, state);\r\n  }\r\n\r\n  /**\r\n   * Dispatches new values emitted by a characteristic.\r\n   *\r\n   * @param event the distpatched event.\r\n   */\r\n  onCharacteristicChanged(event: Event) {\r\n    this.console.log('[BLE::Info] Dispatching new characteristic value %o', event);\r\n\r\n    const value = (event.target as BluetoothRemoteGATTCharacteristic).value;\r\n    this.characteristicValueChanges$.emit(value);\r\n  }\r\n\r\n  /**\r\n   * Reads a value from the characteristics, as a DataView.\r\n   *\r\n   * @param characteristic The requested characteristic.\r\n   * @return the DataView value (as an Observable).\r\n   */\r\n  readValue$(characteristic: BluetoothRemoteGATTCharacteristic): Observable<DataView> {\r\n    this.console.log('[BLE::Info] Reading Characteristic %o', characteristic);\r\n\r\n    return from(\r\n      characteristic\r\n        .readValue()\r\n        .then((data: DataView) => Promise.resolve(data), (error: DOMException) => Promise.reject(`${error.message}`))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Writes a value into the specified characteristic.\r\n   *\r\n   * @param characteristic The requested characteristic.\r\n   * @param value The value to be written (as an ArrayBuffer or Uint8Array).\r\n   * @return an void Observable.\r\n   */\r\n  writeValue$(characteristic: BluetoothRemoteGATTCharacteristic, value: ArrayBuffer | Uint8Array) {\r\n    this.console.log('[BLE::Info] Writing Characteristic %o', characteristic);\r\n\r\n    return from(characteristic.writeValue(value).then(_ => Promise.resolve(), (error: DOMException) => Promise.reject(`${error.message}`)));\r\n  }\r\n\r\n  /**\r\n   * A stream of DataView values emitted by the specified characteristic.\r\n   *\r\n   * @param characteristic The characteristic which value you want to observe\r\n   * @return The stream of DataView values.\r\n   */\r\n  observeValue$(characteristic: BluetoothRemoteGATTCharacteristic): Observable<DataView> {\r\n    characteristic.startNotifications();\r\n    const disconnected = fromEvent(characteristic.service.device, 'gattserverdisconnected');\r\n    return fromEvent(characteristic, 'characteristicvaluechanged')\r\n      .pipe(\r\n        map((event: Event) => (event.target as BluetoothRemoteGATTCharacteristic).value as DataView),\r\n        takeUntil(disconnected)\r\n      );\r\n  }\r\n\r\n  /**\r\n   * A utility method to convert LE to an unsigned 16-bit integer values.\r\n   *\r\n   * @param data The DataView binary data.\r\n   * @param byteOffset The offset, in byte, from the start of the view where to read the data.\r\n   * @return An unsigned 16-bit integer number.\r\n   */\r\n  littleEndianToUint16(data: any, byteOffset: number): number {\r\n    // tslint:disable-next-line:no-bitwise\r\n    return (this.littleEndianToUint8(data, byteOffset + 1) << 8) + this.littleEndianToUint8(data, byteOffset);\r\n  }\r\n\r\n  /**\r\n   * A utility method to convert LE to an unsigned 8-bit integer values.\r\n   *\r\n   * @param data The DataView binary data.\r\n   * @param byteOffset The offset, in byte, from the start of the view where to read the data.\r\n   * @return An unsigned 8-bit integer number.\r\n   */\r\n  littleEndianToUint8(data: any, byteOffset: number): number {\r\n    return data.getUint8(byteOffset);\r\n  }\r\n\r\n  /**\r\n   * Sends random data (for testing purposes only).\r\n   *\r\n   * @return Random unsigned 8-bit integer values.\r\n   */\r\n  fakeNext(fakeValue?: () => DataView) {\r\n    if (fakeValue === undefined) {\r\n      fakeValue = () => {\r\n        const dv = new DataView(new ArrayBuffer(8));\r\n        // tslint:disable-next-line:no-bitwise\r\n        dv.setUint8(0, (Math.random() * 110) | 0);\r\n        return dv;\r\n      };\r\n    }\r\n\r\n    this.characteristicValueChanges$.emit(fakeValue());\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders, InjectionToken, Optional } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BluetoothCore } from './bluetooth.service';\r\nimport { BrowserWebBluetooth } from './platform/browser';\r\n\r\nimport { ConsoleLoggerService, NoLoggerService } from './logger.service';\r\n\r\nexport interface AWBOptions {\r\n  enableTracing?: boolean;\r\n}\r\n\r\nexport function browserWebBluetooth() {\r\n  return new BrowserWebBluetooth();\r\n}\r\n\r\nexport function consoleLoggerServiceConfig(options: AWBOptions) {\r\n  if (options && options.enableTracing) {\r\n    return new ConsoleLoggerService();\r\n  } else {\r\n    return new NoLoggerService();\r\n  }\r\n}\r\nexport function makeMeTokenInjector() {\r\n  return new InjectionToken('AWBOptions');\r\n}\r\n\r\n@NgModule({\r\n  imports: [CommonModule]\r\n})\r\nexport class WebBluetoothModule {\r\n  static forRoot(options: AWBOptions = {}): ModuleWithProviders<WebBluetoothModule> {\r\n    return {\r\n      ngModule: WebBluetoothModule,\r\n      providers: [\r\n        BluetoothCore,\r\n        {\r\n          provide: BrowserWebBluetooth,\r\n          useFactory: browserWebBluetooth\r\n        },\r\n        {\r\n          provide: makeMeTokenInjector,\r\n          useValue: options\r\n        },\r\n        {\r\n          provide: ConsoleLoggerService,\r\n          useFactory: consoleLoggerServiceConfig,\r\n          deps: [makeMeTokenInjector]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","// http://processors.wiki.ti.com/images/a/a8/BLE_SensorTag_GATT_Server.pdf\r\n\r\n// prettier-ignore\r\nexport const TiTag = {\r\n\r\n  DEVICE_INFORMATION : {\r\n    SERVICE :                 'f000180a-0451-4000-b000-000000000000',\r\n    SYSTEM_ID :               'f0002a23-0451-4000-b000-000000000000',\r\n    MODEL_NUMBER :            'f0002a24-0451-4000-b000-000000000000',\r\n    SERIAL_NUMBER :           'f0002a25-0451-4000-b000-000000000000',\r\n    FIRMWARE_REV :            'f0002a26-0451-4000-b000-000000000000',\r\n    HARDWARE_REV :            'f0002a27-0451-4000-b000-000000000000',\r\n    SOFTWARE_REV :            'f0002a28-0451-4000-b000-000000000000',\r\n    MANIFACTURER :            'f0002a29-0451-4000-b000-000000000000',\r\n    IEEE11073 :               'f0002a2a-0451-4000-b000-000000000000',\r\n    PNP_ID :                  'f0002a50-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  BATTERY : {\r\n    SERVICE :                 'f000180f-0451-4000-b000-000000000000',\r\n    LEVEL :                   'f0002a19-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  TEMPERATURE : {\r\n    SERVICE :                 'f000aa00-0451-4000-b000-000000000000',\r\n    DATA :                    'f000aa01-0451-4000-b000-000000000000',\r\n    CONFIGURATION :           'f000aa02-0451-4000-b000-000000000000',\r\n    PERIOD :                  'f000aa03-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  HUMIDITY : {\r\n    SERVICE :                 'f000aa20-0451-4000-b000-000000000000',\r\n    DATA :                    'f000aa21-0451-4000-b000-000000000000',\r\n    CONFIGURATION :           'f000aa22-0451-4000-b000-000000000000',\r\n    PERIOD :                  'f000aa23-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  BAROMETER : {\r\n    SERVICE :                 'f000aa40-0451-4000-b000-000000000000',\r\n    DATA :                    'f000aa41-0451-4000-b000-000000000000',\r\n    CONFIGURATION :           'f000aa42-0451-4000-b000-000000000000',\r\n    PERIOD :                  'f000aa44-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  // service not available in model CC2650\r\n  // ACCELEROMETER : {\r\n  //   SERVICE :                 'f000aa10-0451-4000-b000-000000000000',\r\n  //   DATA :                    'f000aa11-0451-4000-b000-000000000000',\r\n  //   CONFIGURATION :           'f000aa12-0451-4000-b000-000000000000',\r\n  //   PERIOD :                  'f000aa13-0451-4000-b000-000000000000'\r\n  // },\r\n\r\n  // service not available in model CC2650\r\n  // MAGNETOMETER : {\r\n  //   SERVICE :                 'f000aa30-0451-4000-b000-000000000000',\r\n  //   DATA :                    'f000aa31-0451-4000-b000-000000000000',\r\n  //   CONFIGURATION :           'f000aa32-0451-4000-b000-000000000000',\r\n  //   PERIOD :                  'f000aa33-0451-4000-b000-000000000000'\r\n  // },\r\n\r\n  // service not available in model CC2650\r\n  // GYROSCOPE : {\r\n  //   SERVICE :                 'f000aa50-0451-4000-b000-000000000000',\r\n  //   DATA :                    'f000aa51-0451-4000-b000-000000000000',\r\n  //   CONFIGURATION :           'f000aa52-0451-4000-b000-000000000000',\r\n  //   PERIOD :                  'f000aa53-0451-4000-b000-000000000000'\r\n  // },\r\n\r\n  MOVEMENT : {\r\n    SERVICE :                 'f000aa80-0451-4000-b000-000000000000',\r\n    DATA :                    'f000aa81-0451-4000-b000-000000000000',\r\n    CONFIGURATION :           'f000aa82-0451-4000-b000-000000000000',\r\n    PERIOD :                  'f000aa83-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  LIGHT : {\r\n    SERVICE :                 'f000aa70-0451-4000-b000-000000000000',\r\n    DATA :                    'f000aa71-0451-4000-b000-000000000000',\r\n    CONFIGURATION :           'f000aa72-0451-4000-b000-000000000000',\r\n    PERIOD :                  'f000aa73-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  KEYPRESS : {\r\n    SERVICE :                 'f000ffe0-0451-4000-b000-000000000000',\r\n    STATE :                   'f000ffe1-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  __REGISTER__ : {\r\n    SERVICE :                 'f000ac00-0451-4000-b000-000000000000',\r\n    DATA :                    'f000ac01-0451-4000-b000-000000000000',\r\n    ADDRESS :                 'f000ac02-0451-4000-b000-000000000000',\r\n    DEVICE_ID :               'f000ac03-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  CONTROL : {\r\n    SERVICE :                 'f000ccc0-0451-4000-b000-000000000000',\r\n    CURRENT_USED_PARAMETERS : 'f000ccc1-0451-4000-b000-000000000000',\r\n    REQUEST_NEW_PARAMETERS :  'f000ccc2-0451-4000-b000-000000000000',\r\n    DISCONNECT_REQUEST :      'f000ccc3-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  OAD : {\r\n    SERVICE :                 'f000ffc0-0451-4000-b000-000000000000',\r\n    IMAGE_NOTIFY :            'f000ffc1-0451-4000-b000-000000000000',\r\n    IMAGE_BLOCK_REQUEST :     'f000ffc2-0451-4000-b000-000000000000',\r\n    IMAGE_COUNT :             'f000ffc3-0451-4000-b000-000000000000',\r\n    IMAGE_STATUS :            'f000ffc4-0451-4000-b000-000000000000'\r\n  },\r\n\r\n  IO : {\r\n    SERVICE :                 'f000aa64-0451-4000-b000-000000000000',\r\n    DATA :                    'f000aa65-0451-4000-b000-000000000000',\r\n    CONFIG :                  'f000aa66-0451-4000-b000-000000000000'\r\n  }\r\n};\r\n\r\nexport const TI_SENSORAG_SERVICES = Object.keys(TiTag).map(key => TiTag[key].SERVICE);\r\n","/*\r\n * Fake Web Bluetooth implementation\r\n * Replace real browser Bluetooth objects by a much simpler objects that implement some required functionalities\r\n */\r\n\r\nexport class FakeBluetoothDevice {\r\n  gatt: BluetoothRemoteGATTServer;\r\n  private listeners: {\r\n    [key in 'gattserverdisconnected']: EventListener[]\r\n  } = {\r\n    gattserverdisconnected: []\r\n  };\r\n\r\n  constructor(public id: string, public name: string) {\r\n  }\r\n\r\n  addEventListener(type: string, listener: EventListener) {\r\n    this.listeners[type] = [\r\n      ...this.listeners[type],\r\n      listener\r\n    ];\r\n  }\r\n\r\n  disconnect() {\r\n    const mockedEvent = {target: this} as unknown;\r\n    this.listeners.gattserverdisconnected.forEach(listener => listener(mockedEvent as Event));\r\n  }\r\n\r\n  clear() {\r\n    this.id = undefined;\r\n    this.name = undefined;\r\n    this.listeners = {\r\n      gattserverdisconnected: []\r\n    };\r\n  }\r\n}\r\n\r\nexport class FakeBluetoothRemoteGATTServer {\r\n  connected = false;\r\n\r\n  constructor(public device, public services: { [key: string]: { service, primary: boolean } }) {\r\n    device.gatt = this;\r\n  }\r\n\r\n  connect() {\r\n    this.connected = true;\r\n    return Promise.resolve(this);\r\n  }\r\n\r\n  getPrimaryService(service: BluetoothServiceUUID) {\r\n    return Promise.resolve(this.services[service].service);\r\n  }\r\n\r\n  disconnect() {\r\n    this.device.disconnect();\r\n    this.connected = false;\r\n  }\r\n}\r\n\r\nexport class FakeBluetoothRemoteGATTService {\r\n  constructor(public device, public characteristics) {\r\n    this.characteristics.service = this;\r\n  }\r\n\r\n  getCharacteristic(characteristic: BluetoothCharacteristicUUID) {\r\n    return Promise.resolve(this.characteristics[characteristic]);\r\n  }\r\n}\r\n\r\nexport class FakeBluetoothRemoteGATTCharacteristic {\r\n  value: DataView;\r\n  properties: BluetoothCharacteristicProperties;\r\n  private readonly initialValue: DataView;\r\n  private listeners: {\r\n    [key in 'characteristicvaluechanged']: EventListener[]\r\n  } = {\r\n    characteristicvaluechanged: []\r\n  };\r\n\r\n  constructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView) {\r\n    this.properties = properties;\r\n    this.value = initialValue;\r\n    this.initialValue = initialValue;\r\n  }\r\n\r\n  readValue() {\r\n    return Promise.resolve(this.value);\r\n  }\r\n\r\n  addEventListener(type: string, listener: EventListener) {\r\n    this.listeners[type] = [\r\n      ...this.listeners[type],\r\n      listener\r\n    ];\r\n  }\r\n\r\n  changeValue(value: DataView) {\r\n    this.value = value;\r\n    const mockedEvent = {target: this} as unknown;\r\n    this.listeners.characteristicvaluechanged.forEach(listener => listener(mockedEvent as Event));\r\n  }\r\n\r\n  clear() {\r\n    this.value = this.initialValue;\r\n    this.listeners = {\r\n      characteristicvaluechanged: []\r\n    };\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of angular-web-bluetooth\r\n */\r\n\r\nexport * from './lib/platform/browser';\r\nexport * from './lib/platform/server';\r\nexport * from './lib/bluetooth.service';\r\nexport * from './lib/logger.service';\r\nexport * from './lib/bluetooth.module';\r\nexport * from './lib/lang/uuids';\r\nexport * from './lib/test.utils';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}