var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.385,1,0.674]],["body/components/AppComponent.html",[0,0.714,1,1.218,2,0.87,3,0.87,4,1.615,5,1.615,6,0.497,7,2.688,8,1.615,9,2.398,10,1.292,11,1.995,12,1.995,13,0.734,14,0.059,15,0.61,16,0.61,17,0.734,18,1.192,19,1.995,20,1.995,21,1.995,22,2.261,23,1.615,24,1.262,25,1.615,26,0.87,27,1.192,28,1.615,29,0.87,30,1.615,31,0.87,32,1.615,33,0.87,34,1.192,35,1.615,36,0.047,37,0.047]],["title/modules/AppModule.html",[38,1.075,39,1.251]],["body/modules/AppModule.html",[1,1.301,2,0.714,3,0.714,6,0.407,13,1.097,14,0.06,15,0.5,16,0.664,17,0.602,18,0.978,26,1.21,29,1.21,31,1.21,33,1.21,36,0.042,37,0.042,38,1.509,39,2.45,40,1.324,41,3.282,42,3.282,43,0.602,44,2.205,45,2.205,46,2.205,47,2.925,48,2.205,49,1.548,50,2.775,51,3.681,52,2.925,53,1.548,54,2.925,55,2.205,56,0.838,57,0.714,58,0.714,59,2.775,60,2.775,61,1.324,62,2.775,63,2.775,64,3.681,65,2.775,66,3.681,67,3.681,68,3.681,69,3.681,70,3.681,71,3.681,72,3.681,73,1.324,74,3.681,75,2.775,76,2.775,77,2.775,78,2.205,79,1.829,80,0.838]],["title/components/BatteryLevelComponent.html",[0,0.385,26,0.674]],["body/components/BatteryLevelComponent.html",[0,0.559,1,0.442,2,0.442,3,0.442,4,0.821,5,0.821,6,0.252,8,0.821,9,1.99,10,1.072,12,1.249,13,0.826,14,0.061,15,0.31,16,0.31,17,0.373,18,0.606,19,1.249,20,1.249,21,1.249,22,1.689,23,0.821,24,1.15,25,0.821,26,0.91,27,1.514,28,0.821,29,0.442,30,0.821,31,0.442,32,0.821,33,0.442,34,0.606,35,0.821,36,0.03,37,0.03,43,0.904,56,0.519,57,0.442,58,0.442,61,2.278,73,0.821,81,2.663,82,1.134,83,1.725,84,2.088,85,2.238,86,4.17,87,2.079,88,1.116,89,2.326,90,0.442,91,1.073,92,1.804,93,1.919,94,1.259,95,2.643,96,2.51,97,0.79,98,1.451,99,2.333,100,2.333,101,1.725,102,2.333,103,2.617,104,1.725,105,2.088,106,0.922,107,1.134,108,2.643,109,2.643,110,1.667,111,1.721,112,1.298,113,1.132,114,1.116,115,1.721,116,1.514,117,1.561,118,1.721,119,1.721,120,1.725,121,1.709,122,1.721,123,1.721,124,2.617,125,2.088,126,1.721,127,0.87,128,1.116,129,1.721,130,1.721,131,1.721,132,1.721,133,1.721,134,1.721,135,1.134,136,1.721,137,1.721,138,1.134,139,0.606,140,0.956,141,1.46,142,1.46,143,0.821,144,0.96,145,1.134,146,1.134,147,1.134,148,0.519,149,0.96,150,1.46,151,1.46,152,1.46,153,1.249,154,0.96,155,1.46,156,1.367,157,2.088,158,1.134,159,0.821,160,1.134,161,1.721,162,0.922,163,1.725,164,1.725,165,1.134,166,0.519,167,1.134,168,2.617,169,1.725,170,1.721,171,1.721,172,1.134,173,0.96,174,1.134,175,1.134,176,1.134,177,1.134,178,1.721,179,1.134,180,1.134,181,1.367]],["title/injectables/BatteryLevelService.html",[93,1.075,182,0.674]],["body/injectables/BatteryLevelService.html",[2,0.613,3,0.613,6,0.35,10,1.117,11,1.137,13,0.829,14,0.06,15,0.43,16,0.43,17,0.517,24,0.72,27,1.346,36,0.038,37,0.038,43,0.72,56,0.72,57,0.613,58,0.613,61,2.245,80,0.72,81,2.625,85,1.852,88,0.84,90,0.613,91,1.361,92,1.361,93,1.361,94,1.247,97,1.247,98,1.693,99,2.723,106,0.84,110,1.626,112,0.977,113,1.062,114,0.84,116,1.585,117,0.977,121,1.693,127,1.001,128,1.17,139,0.84,140,1.358,148,1.421,162,0.84,166,0.72,182,0.982,183,1.894,184,2.509,185,2.723,186,2.305,187,2.305,188,1.571,189,3.32,190,2.384,191,2.384,192,2.638,193,2.423,194,2.638,195,2.638,196,2.638,197,2.638,198,2.638,199,2.638,200,2.188,201,1.852,202,1.852,203,2.305,204,2.384,205,2.384,206,2.638,207,2.384,208,2.638,209,1.33,210,1.33,211,1.33,212,1.33,213,1.852,214,1.33,215,1.33,216,1.33,217,1.33,218,1.33,219,1.33,220,2.638,221,2.384,222,1.33,223,1.33,224,1.571,225,1.33,226,1.33,227,1.33,228,1.33,229,1.571]],["title/components/DemoComponent.html",[0,0.385,29,0.674]],["body/components/DemoComponent.html",[0,0.66,1,0.676,2,0.676,3,0.676,4,1.255,5,1.255,6,0.386,8,1.255,9,2.26,10,1.28,12,1.255,13,0.57,14,0.06,15,0.474,16,0.474,17,0.57,18,0.926,19,1.694,20,1.694,21,1.694,22,2.054,23,1.255,24,1.072,25,1.255,26,0.676,27,1.584,28,1.255,29,1.107,30,1.255,31,0.676,32,1.255,33,0.676,34,1.584,35,1.255,36,0.04,37,0.04,57,0.913,85,2.402,90,0.676,94,1.399,106,1.417,110,0.926,127,0.934,159,2.211,230,1.733,231,2.089,232,4.305,233,3.551,234,4.021,235,3.551,236,3.551,237,2.63,238,2.34,239,3.551,240,3.551,241,3.551,242,3.551,243,4.305,244,3.551,245,2.837,246,2.63,247,3.551,248,2.63,249,2.63,250,2.34,251,2.63,252,2.65,253,2.63,254,4.021,255,2.63,256,2.63,257,2.63,258,2.63,259,2.63,260,2.63,261,1.255,262,2.089,263,3.551,264,2.34,265,2.63,266,2.63,267,2.63,268,3.551,269,2.63,270,2.63,271,2.63]],["title/components/HumidityComponent.html",[0,0.385,31,0.674]],["body/components/HumidityComponent.html",[0,0.526,1,0.388,2,0.388,3,0.388,4,0.72,5,0.72,6,0.222,8,0.72,9,1.898,10,1.023,12,1.129,13,0.778,14,0.061,15,0.272,16,0.272,17,0.327,18,0.532,19,1.129,20,1.129,21,1.129,22,1.576,23,0.72,24,1.083,25,0.72,26,0.388,27,0.532,28,0.72,29,0.388,30,0.72,31,0.849,32,0.72,33,0.388,34,0.532,35,0.72,36,0.027,37,0.027,43,0.863,56,0.456,57,0.388,58,0.388,73,0.72,80,0.456,83,1.559,84,1.923,87,1.879,88,1.028,89,2.219,90,0.388,91,0.97,92,1.735,94,1.201,95,2.507,96,2.364,97,0.714,98,1.354,100,2.176,101,1.559,102,2.176,104,1.559,105,1.923,106,0.834,107,0.995,108,2.507,109,2.507,110,1.681,112,1.196,113,1.135,114,1.028,116,1.526,117,1.63,120,1.559,121,1.63,125,1.923,127,1.009,128,1.164,135,0.995,138,0.995,139,0.532,140,0.881,141,1.32,142,1.32,143,0.72,144,0.842,145,0.995,146,0.995,147,0.995,148,1.201,149,1.628,150,1.32,151,1.32,152,1.32,153,1.576,154,0.842,155,1.32,157,1.923,158,0.995,159,0.72,160,0.995,162,1.028,163,1.923,164,1.923,165,0.995,166,0.997,167,0.995,169,1.923,172,0.995,173,0.842,174,0.995,175,0.995,176,0.995,177,0.995,179,0.995,180,0.995,181,1.199,230,1.923,245,2.176,250,1.923,252,1.923,261,0.72,264,1.923,272,0.995,273,2.624,274,2.318,275,2.318,276,2.318,277,2.318,278,2.624,279,2.624,280,2.624,281,2.624,282,2.176,283,1.879,284,1.898,285,1.51,286,1.51,287,1.51,288,1.51,289,1.51,290,1.51,291,1.51,292,1.51,293,1.879,294,1.51,295,2.624,296,0.995,297,1.879,298,1.51,299,1.51,300,1.51,301,1.51,302,1.51,303,1.51,304,1.51,305,1.51,306,1.51,307,1.199,308,1.199,309,1.199,310,1.51,311,1.199,312,1.199,313,1.199,314,1.199,315,1.199,316,1.199,317,1.199,318,1.199,319,1.199,320,2.318,321,1.199,322,1.879,323,1.199,324,1.199,325,0.842,326,1.199,327,1.199,328,1.199,329,1.199,330,1.199,331,1.199,332,1.199,333,1.559,334,1.199,335,1.199,336,1.199,337,1.199,338,1.199,339,1.199,340,1.879,341,1.51,342,1.879,343,1.51,344,1.199,345,1.199]],["title/injectables/HumidityThingy52Service.html",[182,0.674,284,1.251]],["body/injectables/HumidityThingy52Service.html",[2,0.612,3,0.612,6,0.349,10,1.116,11,1.135,13,0.828,14,0.06,15,0.429,16,0.429,17,0.516,24,0.719,34,1.168,36,0.038,37,0.038,56,0.719,57,0.612,58,0.612,80,0.719,88,0.838,90,0.612,91,1.359,92,1.359,94,1.311,97,1.311,98,1.692,106,0.838,110,1.657,112,0.975,113,1.062,114,0.838,116,1.657,117,0.975,121,1.692,127,1.02,128,1.168,139,0.838,140,1.357,148,1.246,162,0.838,166,0.719,182,0.982,184,2.508,185,2.721,186,2.303,187,2.303,188,1.568,193,1.328,201,2.129,202,1.85,203,2.303,209,1.328,210,1.328,211,1.328,212,1.328,213,2.129,214,1.328,215,1.328,216,1.328,217,1.328,218,1.328,219,1.328,222,1.328,223,1.85,224,1.568,225,1.328,226,1.328,227,1.328,228,1.328,229,1.568,245,1.568,282,2.721,284,1.582,346,3.796,347,1.568,348,4.128,349,2.634,350,2.38,351,1.891,352,2.38,353,2.38,354,1.891,355,3.316,356,3.279,357,3.279,358,3.279,359,3.279,360,1.891,361,2.634,362,1.891,363,1.891,364,3.316,365,2.38,366,1.891]],["title/components/TemperatureComponent.html",[0,0.385,33,0.674]],["body/components/TemperatureComponent.html",[0,0.532,1,0.398,2,0.398,3,0.398,4,0.738,5,0.738,6,0.227,8,0.738,9,1.915,10,1.032,12,1.15,13,0.787,14,0.061,15,0.279,16,0.279,17,0.335,18,0.545,19,1.15,20,1.15,21,1.15,22,1.596,23,0.738,24,1.095,25,0.738,26,0.398,27,0.545,28,0.738,29,0.398,30,0.738,31,0.398,32,0.738,33,0.86,34,1.462,35,0.738,36,0.027,37,0.027,43,0.87,56,0.467,57,0.398,58,0.398,73,0.738,80,0.467,83,1.589,84,1.952,88,1.044,89,2.239,90,0.398,91,0.988,92,1.748,94,1.212,95,2.532,96,2.39,97,0.728,98,1.371,100,2.205,101,1.589,102,2.205,104,1.589,105,1.952,106,0.849,107,1.019,108,2.532,109,2.532,110,1.676,112,1.214,113,1.143,114,1.044,116,1.503,117,1.575,120,1.589,121,1.645,125,1.952,127,1.014,128,1.179,135,1.019,138,1.019,139,0.545,140,0.895,141,1.345,142,1.345,143,0.738,144,0.863,145,1.019,146,1.019,147,1.019,148,1.212,149,1.653,150,1.345,151,1.345,152,1.345,153,1.596,154,0.863,155,1.345,157,1.952,158,1.019,159,0.738,160,1.019,162,0.849,163,1.589,164,1.589,165,1.019,166,0.467,167,1.019,169,1.589,172,1.019,173,0.863,174,1.019,175,1.019,176,1.019,177,1.019,179,1.019,180,1.019,230,1.952,250,1.952,252,1.952,261,0.738,264,1.952,273,2.658,274,2.354,275,2.354,276,2.354,277,2.354,278,2.658,279,2.658,280,2.658,281,2.658,283,1.915,293,1.915,295,2.658,296,1.019,297,1.915,307,1.228,308,1.228,311,1.228,312,1.228,313,1.228,314,1.228,315,1.228,316,1.228,317,1.228,318,1.228,319,1.228,320,2.354,321,1.228,322,1.915,323,1.228,324,1.228,325,0.863,326,1.228,327,1.228,328,1.228,329,1.228,330,1.228,331,1.228,332,1.228,333,1.589,334,1.228,335,1.228,336,1.228,337,1.228,338,1.228,339,1.228,340,1.915,342,1.228,344,1.228,345,1.228,367,1.019,368,2.411,369,1.915,370,1.546,371,1.546,372,1.546,373,1.546,374,1.546,375,1.546,376,1.546,377,1.546,378,1.546,379,1.546,380,1.546,381,1.546,382,1.546,383,1.546,384,1.546,385,1.546,386,1.546,387,1.228,388,1.546,389,1.546]],["title/injectables/TemperatureThingy52Service.html",[182,0.674,369,1.251]],["body/injectables/TemperatureThingy52Service.html",[2,0.62,3,0.62,6,0.354,10,1.122,11,1.151,13,0.834,14,0.06,15,0.435,16,0.435,17,0.523,24,0.728,34,1.354,36,0.038,37,0.038,56,0.728,57,0.62,58,0.62,80,0.728,88,0.85,90,0.62,91,1.372,92,1.372,94,1.254,97,1.254,98,1.702,106,0.85,110,1.631,112,0.989,113,1.068,114,0.85,116,1.631,117,0.989,121,1.702,127,1.004,128,1.179,139,0.85,140,1.363,148,1.254,149,1.868,162,0.85,166,0.728,182,0.989,184,2.518,185,2.737,186,2.317,187,2.317,188,1.59,193,1.346,201,1.868,202,1.868,203,2.317,209,1.346,210,1.346,211,1.346,212,1.346,213,1.868,214,1.346,215,1.346,216,1.346,217,1.346,218,1.346,219,1.346,222,1.346,223,1.346,225,1.346,226,1.346,227,1.346,228,1.346,229,1.59,333,1.59,347,1.59,349,2.66,351,1.917,354,1.917,356,3.299,357,3.299,358,3.299,359,3.299,360,1.917,361,2.66,366,1.917,369,1.597,390,3.75,391,4.153,392,2.413,393,2.413,394,3.348,395,3.348,396,2.413,397,3.348,398,3.348,399,2.413]],["title/changelog.html",[400,1.455,401,1.231,402,2.207]],["body/changelog.html",[14,0.041,36,0.041,37,0.041,40,1.301,79,1.797,88,0.961,89,2.03,97,1.099,113,0.701,114,1.282,127,0.591,143,1.736,148,0.823,173,1.521,238,2.398,262,3.798,296,1.797,403,3.638,404,4.552,405,3.253,406,3.638,407,4.682,408,3.471,409,2.727,410,2.727,411,3.638,412,2.727,413,2.727,414,3.638,415,2.727,416,2.727,417,2.727,418,2.727,419,2.727,420,3.638,421,2.727,422,2.727,423,2.727,424,2.727,425,5.074,426,3.638,427,3.344,428,3.253,429,4.095,430,2.727,431,3.638,432,2.727,433,2.727,434,3.638,435,2.727,436,2.727,437,4.78,438,2.727,439,2.727,440,2.727,441,2.727,442,2.727,443,2.727,444,4.095,445,3.638,446,2.727,447,2.727,448,2.727,449,2.727,450,2.727,451,2.727,452,2.727,453,2.727,454,2.727,455,2.727,456,2.727,457,2.727,458,2.727,459,2.727,460,2.727,461,2.727,462,2.727,463,2.727,464,2.727,465,2.727,466,2.727,467,2.727,468,2.727,469,2.727,470,2.166,471,2.727,472,2.727,473,2.727,474,2.727,475,2.727,476,2.727,477,2.727,478,2.727,479,2.727,480,2.727,481,1.797,482,2.727,483,2.727,484,2.727,485,2.727,486,2.727,487,2.727,488,2.727,489,3.638,490,3.638,491,2.727]],["title/coverage.html",[492,2.816]],["body/coverage.html",[0,0.705,1,0.83,6,0.474,7,2.565,14,0.059,26,0.83,29,0.83,31,0.83,33,0.83,36,0.046,37,0.046,43,0.963,61,2.119,81,2.477,82,2.675,93,1.323,113,0.83,153,1.54,159,2.439,182,1.142,183,2.565,231,2.565,272,2.675,284,1.54,346,2.565,347,2.675,367,2.675,369,1.54,390,2.565,405,2.565,428,3.225,492,2.565,493,2.128,494,3.228,495,3.228,496,4.9,497,3.228,498,3.164,499,4.059,500,3.228,501,3.228,502,3.228,503,3.228,504,2.565,505,3.225,506,2.565,507,3.228,508,3.228]],["title/dependencies.html",[40,1.5,509,2.207]],["body/dependencies.html",[14,0.06,15,0.638,36,0.049,37,0.049,40,1.688,52,3.412,53,2.396,58,0.91,73,1.688,510,3.537,511,5.209,512,3.537,513,3.537,514,3.537,515,3.537,516,3.537,517,3.537,518,3.537,519,2.81,520,3.537,521,3.537,522,3.537,523,3.537,524,3.537,525,3.537,526,3.537,527,3.537,528,3.537,529,3.537,530,3.537,531,3.537]],["title/index.html",[90,0.568,400,1.455,401,1.231]],["body/index.html",[6,0.286,10,0.501,11,0.929,13,0.942,14,0.06,15,0.518,16,0.518,17,0.623,27,1.012,36,0.033,37,0.033,38,1.177,39,0.929,43,0.623,49,1.086,53,1.086,54,2.281,55,2.281,56,1.137,57,1.08,58,1.171,78,1.547,79,1.283,80,0.867,85,1.086,93,0.798,94,1.03,97,1.03,99,1.283,116,1.571,127,0.911,139,0.686,140,1.03,143,0.929,144,1.086,148,1.312,162,0.686,166,0.867,182,0.739,184,1.602,186,1.086,187,1.086,192,1.547,193,2.101,194,1.547,195,2.281,196,1.547,197,1.547,198,1.547,199,1.547,200,1.892,201,1.602,202,1.086,203,1.602,206,1.547,208,1.547,209,1.086,210,1.086,211,1.086,212,1.086,213,1.903,214,1.086,215,1.086,216,1.086,217,1.086,218,1.086,219,1.086,220,2.281,222,1.086,223,2.101,224,1.892,225,1.086,226,1.086,227,1.086,228,1.602,238,1.283,261,1.37,282,1.283,325,1.086,362,1.547,363,1.547,401,1.086,408,1.547,427,1.283,470,1.547,481,1.283,493,1.892,519,2.71,532,2.872,533,3.411,534,1.947,535,1.947,536,1.947,537,3.338,538,1.947,539,1.947,540,2.872,541,1.947,542,2.872,543,1.947,544,1.947,545,1.947,546,1.947,547,1.947,548,2.872,549,1.947,550,1.947,551,1.947,552,1.947,553,1.947,554,1.947,555,1.547,556,1.947,557,1.947,558,1.947,559,1.947,560,1.947,561,1.947,562,1.947,563,1.947,564,1.947,565,2.281,566,1.947,567,3.411,568,1.947,569,1.947,570,1.947,571,1.947,572,1.947,573,1.947,574,1.947,575,1.947,576,1.947,577,2.281,578,1.947,579,1.947,580,2.872,581,1.947,582,1.947,583,1.947,584,1.947,585,1.947,586,1.892,587,2.281,588,2.71,589,1.547,590,1.547,591,1.547,592,2.281,593,1.547,594,1.547,595,1.547,596,2.281,597,1.547,598,2.991,599,3.617,600,1.547,601,2.281,602,2.71,603,1.547,604,2.71,605,2.281,606,1.547,607,1.547,608,1.547,609,1.547,610,1.547,611,1.547,612,1.547,613,1.547,614,1.547,615,1.547,616,1.547,617,1.547,618,2.281,619,2.281,620,1.547,621,1.547,622,2.281,623,1.547,624,1.547,625,1.547,626,1.547,627,1.547,628,1.547,629,1.547,630,1.547,631,1.547,632,1.547,633,1.547,634,1.547,635,1.547,636,1.547,637,1.547,638,1.547,639,1.547,640,1.547,641,1.547,642,1.547,643,1.547]],["title/license.html",[400,1.455,401,1.231,586,1.455]],["body/license.html",[6,0.475,14,0.046,36,0.046,37,0.046,43,0.702,49,1.805,166,0.977,200,2.132,427,2.132,493,2.132,537,3.23,565,2.571,577,2.571,586,2.132,587,3.23,588,3.531,589,2.571,590,2.571,591,2.571,592,3.23,593,2.571,594,2.571,595,2.571,596,3.23,597,2.571,598,3.704,599,4.034,600,2.571,601,3.23,602,3.531,603,2.571,604,3.531,605,3.23,606,2.571,607,2.571,608,2.571,609,2.571,610,2.571,611,2.571,612,2.571,613,2.571,614,2.571,615,2.571,616,2.571,617,2.571,618,3.23,619,3.23,620,2.571,621,2.571,622,3.23,623,2.571,624,2.571,625,2.571,626,2.571,627,2.571,628,2.571,629,2.571,630,2.571,631,2.571,632,2.571,633,2.571,634,2.571,635,2.571,636,2.571,637,2.571,638,2.571,639,2.571,640,2.571,641,2.571,642,2.571,643,2.571]],["title/modules.html",[38,1.453]],["body/modules.html",[14,0.053,36,0.053,37,0.053,38,1.664,39,1.937,53,2.265,644,4.059,645,4.059,646,4.059]],["title/overview.html",[647,2.816]],["body/overview.html",[0,0.516,1,1.303,14,0.058,16,0.635,18,1.24,26,1.187,29,1.187,31,1.187,33,1.187,36,0.049,37,0.049,38,1.755,39,2.502,40,1.679,41,2.796,42,2.796,43,0.763,44,2.796,45,2.796,46,2.796,47,3.402,48,2.796,49,1.964,182,0.905,261,1.679,481,2.32,555,2.796,647,2.796]],["title/miscellaneous/variables.html",[498,2.072,648,1.753]],["body/miscellaneous/variables.html",[14,0.061,36,0.043,37,0.043,43,1.118,61,1.37,80,0.867,81,1.602,82,2.481,90,0.739,93,1.177,113,1.191,127,1.004,128,1.631,140,1.435,141,2.344,142,2.344,150,2.651,151,2.651,152,2.651,153,2.267,154,2.344,155,2.651,156,2.281,272,1.892,284,1.37,309,2.281,325,1.602,367,1.892,369,1.37,387,2.281,498,1.892,504,2.281,505,3.774,506,2.281,648,2.281,649,2.872,650,2.872,651,2.872,652,2.872,653,2.872,654,4.459,655,3.765]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":159,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{}}}],["0.0.4",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["0.1.0",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["0.1.3",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["0.3.1",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["0.4.1",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["0.4.2",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["0.4.3",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["0.8.26",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":497,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":503,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":502,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":500,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":327,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["02",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["0981f4b",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":261,"title":{},"body":{"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{},"overview.html":{}}}],["1.0.0",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["1.35.0",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["1/8",{"_index":499,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":501,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["100",{"_index":333,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["100px",{"_index":275,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["10px",{"_index":268,"title":{},"body":{"components/DemoComponent.html":{}}}],["11",{"_index":405,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["12",{"_index":428,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["13",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["148b3dc",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["15bcad8",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":329,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["1fb7f24",{"_index":475,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":540,"title":{},"body":{"index.html":{}}}],["2.0.0",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["2.0.8",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["2.1.1",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["2.5.7",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["2016",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["2017",{"_index":427,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["2018",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["20px",{"_index":277,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["22",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["24px",{"_index":265,"title":{},"body":{"components/DemoComponent.html":{}}}],["25",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":431,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":555,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3.0.0",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["32px",{"_index":267,"title":{},"body":{"components/DemoComponent.html":{}}}],["396baaa",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":560,"title":{},"body":{"index.html":{}}}],["4.0.0",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["40px",{"_index":248,"title":{},"body":{"components/DemoComponent.html":{}}}],["4933",{"_index":357,"title":{},"body":{"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["5",{"_index":481,"title":{},"body":{"changelog.html":{},"index.html":{},"overview.html":{}}}],["52",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["52ffa9740042",{"_index":359,"title":{},"body":{"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["55",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["5px",{"_index":270,"title":{},"body":{"components/DemoComponent.html":{}}}],["6",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["6.3.3",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["7.1.0",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["700px",{"_index":251,"title":{},"body":{"components/DemoComponent.html":{}}}],["8",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["800px",{"_index":274,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["9",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["9b10",{"_index":358,"title":{},"body":{"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["9b35",{"_index":356,"title":{},"body":{"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["a14a265",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["a4a76d",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["abov",{"_index":617,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":197,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["acceptalldevic",{"_index":218,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["accessor",{"_index":104,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["accordion",{"_index":269,"title":{},"body":{"components/DemoComponent.html":{}}}],["action",{"_index":639,"title":{},"body":{"index.html":{},"license.html":{}}}],["actual_compon",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["add",{"_index":408,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["aed42e8",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":611,"title":{},"body":{"index.html":{},"license.html":{}}}],["angular",{"_index":238,"title":{},"body":{"components/DemoComponent.html":{},"changelog.html":{},"index.html":{}}}],["angular/anim",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"dependencies.html":{},"index.html":{}}}],["angular/form",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["annot",{"_index":543,"title":{},"body":{"index.html":{}}}],["aot",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["api",{"_index":570,"title":{},"body":{"index.html":{}}}],["app.compon",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":39,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["aris",{"_index":643,"title":{},"body":{"index.html":{},"license.html":{}}}],["ask",{"_index":561,"title":{},"body":{"index.html":{}}}],["associ",{"_index":600,"title":{},"body":{"index.html":{},"license.html":{}}}],["author",{"_index":632,"title":{},"body":{"index.html":{},"license.html":{}}}],["auto",{"_index":253,"title":{},"body":{"components/DemoComponent.html":{}}}],["b",{"_index":151,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["batteri",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["battery_level",{"_index":206,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["battery_servic",{"_index":208,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["battery_std",{"_index":239,"title":{},"body":{"components/DemoComponent.html":{}}}],["batterylevel",{"_index":86,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["batterylevelcompon",{"_index":26,"title":{"components/BatteryLevelComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["batterylevelservic",{"_index":93,"title":{"injectables/BatteryLevelService.html":{}},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["batterylevelservice(b",{"_index":156,"title":{},"body":{"components/BatteryLevelComponent.html":{},"miscellaneous/variables.html":{}}}],["batterylevelservice.gatt_characterist",{"_index":221,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["batterylevelservice.gatt_characteristic_battery_level",{"_index":559,"title":{},"body":{"index.html":{}}}],["batterylevelservice.gatt_primary_servic",{"_index":220,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["better",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["ble",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["blog",{"_index":579,"title":{},"body":{"index.html":{}}}],["bluetooth",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"dependencies.html":{},"index.html":{}}}],["bluetoothcor",{"_index":140,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bluetoothcore(b",{"_index":154,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["bluetoothremotegattcharacterist",{"_index":563,"title":{},"body":{"index.html":{}}}],["bluetoothremotegattserv",{"_index":553,"title":{},"body":{"index.html":{}}}],["bluetoothremotegattservic",{"_index":557,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bordervis",{"_index":324,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["brows",{"_index":646,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/anim",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["browserwebbluetooth",{"_index":141,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["bug",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":589,"title":{},"body":{"index.html":{},"license.html":{}}}],["c9755f6",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":213,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["can't",{"_index":196,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["canva",{"_index":273,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["case",{"_index":569,"title":{},"body":{"index.html":{}}}],["catch",{"_index":225,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["chang",{"_index":173,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"changelog.html":{}}}],["changelog",{"_index":402,"title":{"changelog.html":{}},"body":{}}],["characterist",{"_index":193,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["charg",{"_index":595,"title":{},"body":{"index.html":{},"license.html":{}}}],["chart",{"_index":315,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["chart.addtimeseries(this.seri",{"_index":331,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["chart.streamto(canva",{"_index":338,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["chartref",{"_index":278,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["checkout",{"_index":581,"title":{},"body":{"index.html":{}}}],["chegham",{"_index":591,"title":{},"body":{"index.html":{},"license.html":{}}}],["claim",{"_index":635,"title":{},"body":{"index.html":{},"license.html":{}}}],["class",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["close",{"_index":180,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["cloud",{"_index":244,"title":{},"body":{"components/DemoComponent.html":{}}}],["cluster_appmodul",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["command",{"_index":578,"title":{},"body":{"index.html":{}}}],["compat",{"_index":241,"title":{},"body":{"components/DemoComponent.html":{}}}],["compil",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["complet",{"_index":568,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["condit",{"_index":616,"title":{},"body":{"index.html":{},"license.html":{}}}],["connect",{"_index":166,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{},"license.html":{}}}],["console.error('oop",{"_index":227,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["console.log('get",{"_index":215,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["console.log('read",{"_index":176,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["consoleloggerservic",{"_index":142,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":149,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["constructor",{"_index":106,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["constructor(bl",{"_index":188,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["constructor(publ",{"_index":212,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["constructor(zon",{"_index":107,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["contract",{"_index":640,"title":{},"body":{"index.html":{},"license.html":{}}}],["contribut",{"_index":584,"title":{},"body":{"index.html":{}}}],["copi",{"_index":598,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":588,"title":{},"body":{"index.html":{},"license.html":{}}}],["core",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":492,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["d",{"_index":177,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["d4fcf3a",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":636,"title":{},"body":{"index.html":{},"license.html":{}}}],["dataview",{"_index":223,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["dd48716",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":601,"title":{},"body":{"index.html":{},"license.html":{}}}],["decim",{"_index":398,"title":{},"body":{"injectables/TemperatureThingy52Service.html":{}}}],["declar",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decor",{"_index":296,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"changelog.html":{}}}],["default",{"_index":128,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":110,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["demo",{"_index":232,"title":{},"body":{"components/DemoComponent.html":{}}}],["demo'},{'nam",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["demo.component.css",{"_index":234,"title":{},"body":{"components/DemoComponent.html":{}}}],["demo.component.html",{"_index":236,"title":{},"body":{"components/DemoComponent.html":{}}}],["demo/batteri",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["demo/demo.compon",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["demo/humidity/humidity.compon",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["demo/temperature/temperature.compon",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["democompon",{"_index":29,"title":{"components/DemoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dep",{"_index":155,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["depend",{"_index":40,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["detect",{"_index":174,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["develop",{"_index":199,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["devic",{"_index":94,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["direct",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["disconnect",{"_index":88,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"changelog.html":{}}}],["disconnectdevic",{"_index":98,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["discov",{"_index":548,"title":{},"body":{"index.html":{}}}],["discoveri",{"_index":550,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":609,"title":{},"body":{"index.html":{},"license.html":{}}}],["document",{"_index":493,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["don't",{"_index":478,"title":{},"body":{"changelog.html":{}}}],["dynam",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":226,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["e821c6a",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":147,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["ef680200",{"_index":361,"title":{},"body":{"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["ef680201",{"_index":394,"title":{},"body":{"injectables/TemperatureThingy52Service.html":{}}}],["ef680203",{"_index":355,"title":{},"body":{"injectables/HumidityThingy52Service.html":{}}}],["element",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["elementref",{"_index":295,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["elsewher",{"_index":198,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["emit",{"_index":201,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["enabl",{"_index":538,"title":{},"body":{"index.html":{}}}],["enabletrac",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{},"index.html":{}}}],["environ",{"_index":505,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":89,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"changelog.html":{}}}],["event",{"_index":631,"title":{},"body":{"index.html":{},"license.html":{}}}],["exampl",{"_index":544,"title":{},"body":{"index.html":{}}}],["except",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":624,"title":{},"body":{"index.html":{},"license.html":{}}}],["f624a5c",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["f783009",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["fa05cb1",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["fals",{"_index":325,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["featur",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["ff0000",{"_index":336,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["ffffff",{"_index":321,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["file",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["fillstyl",{"_index":320,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["fit",{"_index":627,"title":{},"body":{"index.html":{},"license.html":{}}}],["fix",{"_index":262,"title":{},"body":{"components/DemoComponent.html":{},"changelog.html":{}}}],["flexibl",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":577,"title":{},"body":{"index.html":{},"license.html":{}}}],["fontsiz",{"_index":328,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["forc",{"_index":172,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["free",{"_index":200,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{},"license.html":{}}}],["furnish",{"_index":614,"title":{},"body":{"index.html":{},"license.html":{}}}],["gatt",{"_index":192,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["gatt_characterist",{"_index":185,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["gatt_characteristic_battery_level",{"_index":545,"title":{},"body":{"index.html":{}}}],["gatt_primary_servic",{"_index":186,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["get",{"_index":400,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getbatterylevel",{"_index":99,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{}}}],["getdevic",{"_index":187,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["getdevicestatu",{"_index":100,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["getfakevalu",{"_index":546,"title":{},"body":{"index.html":{}}}],["gethumid",{"_index":348,"title":{},"body":{"injectables/HumidityThingy52Service.html":{}}}],["getisdevicevalid",{"_index":135,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["gettemperatur",{"_index":391,"title":{},"body":{"injectables/TemperatureThingy52Service.html":{}}}],["getvalu",{"_index":280,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["grant",{"_index":594,"title":{},"body":{"index.html":{},"license.html":{}}}],["grid",{"_index":319,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["hammerj",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["happi",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["haserror",{"_index":101,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["haserror(error",{"_index":120,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["height",{"_index":264,"title":{},"body":{"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["here",{"_index":542,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":593,"title":{},"body":{"index.html":{},"license.html":{}}}],["holder",{"_index":633,"title":{},"body":{"index.html":{},"license.html":{}}}],["html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["https://manekinekko.github.io/angular",{"_index":572,"title":{},"body":{"index.html":{}}}],["humid",{"_index":245,"title":{},"body":{"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{}}}],["humidity'},{'nam",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["humiditycompon",{"_index":31,"title":{"components/HumidityComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["humiditythingy52servic",{"_index":284,"title":{"injectables/HumidityThingy52Service.html":{}},"body":{"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["humiditythingy52service(b",{"_index":309,"title":{},"body":{"components/HumidityComponent.html":{},"miscellaneous/variables.html":{}}}],["humiditythingy52service.gatt_characterist",{"_index":365,"title":{},"body":{"injectables/HumidityThingy52Service.html":{}}}],["humiditythingy52service.gatt_primary_servic",{"_index":364,"title":{},"body":{"injectables/HumidityThingy52Service.html":{}}}],["icon",{"_index":271,"title":{},"body":{"components/DemoComponent.html":{}}}],["identifi",{"_index":494,"title":{},"body":{"coverage.html":{}}}],["img",{"_index":266,"title":{},"body":{"components/DemoComponent.html":{}}}],["implement",{"_index":83,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["impli",{"_index":625,"title":{},"body":{"index.html":{},"license.html":{}}}],["import",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["includ",{"_index":604,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":90,"title":{"index.html":{}},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["initchart",{"_index":281,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["inject",{"_index":182,"title":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{}},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["instal",{"_index":535,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":146,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["integ",{"_index":397,"title":{},"body":{"injectables/TemperatureThingy52Service.html":{}}}],["interpol",{"_index":317,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["isdevicevalid",{"_index":105,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["issu",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["js",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["kind",{"_index":623,"title":{},"body":{"index.html":{},"license.html":{}}}],["l",{"_index":152,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":326,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["layoutmodul",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["left",{"_index":276,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["legend",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"overview.html":{}}}],["level",{"_index":85,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/DemoComponent.html":{},"index.html":{}}}],["level'},{'nam",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["level.compon",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["level.component.t",{"_index":82,"title":{},"body":{"components/BatteryLevelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["level.component.ts:28",{"_index":129,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:29",{"_index":132,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:30",{"_index":131,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:32",{"_index":136,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:34",{"_index":111,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:37",{"_index":134,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:38",{"_index":130,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:39",{"_index":133,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:41",{"_index":123,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:45",{"_index":119,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:60",{"_index":118,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:68",{"_index":126,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:76",{"_index":115,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:80",{"_index":122,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.servic",{"_index":137,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.service.t",{"_index":183,"title":{},"body":{"injectables/BatteryLevelService.html":{},"coverage.html":{}}}],["level.service.ts:10",{"_index":189,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["level.service.ts:12",{"_index":205,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["level.service.ts:14",{"_index":204,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["level.service.ts:26",{"_index":191,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["level.service.ts:47",{"_index":190,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["level.service.ts:9",{"_index":207,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["level/batteri",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["liabil",{"_index":637,"title":{},"body":{"index.html":{},"license.html":{}}}],["liabl",{"_index":634,"title":{},"body":{"index.html":{},"license.html":{}}}],["licens",{"_index":586,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":605,"title":{},"body":{"index.html":{},"license.html":{}}}],["line",{"_index":263,"title":{},"body":{"components/DemoComponent.html":{}}}],["linewidth",{"_index":335,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["log",{"_index":539,"title":{},"body":{"index.html":{}}}],["logger",{"_index":464,"title":{},"body":{"changelog.html":{}}}],["logic",{"_index":194,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["make",{"_index":143,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"changelog.html":{},"index.html":{}}}],["manekinekko/angular",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["map",{"_index":209,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["map((valu",{"_index":222,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["margin",{"_index":252,"title":{},"body":{"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["mat",{"_index":254,"title":{},"body":{"components/DemoComponent.html":{}}}],["matbuttonmodul",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodul",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodul",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodul",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressbarmodul",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":109,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["matsnackbarmodul",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodul",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":249,"title":{},"body":{"components/DemoComponent.html":{}}}],["maxvalu",{"_index":332,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["medium",{"_index":582,"title":{},"body":{"index.html":{}}}],["merchant",{"_index":626,"title":{},"body":{"index.html":{},"license.html":{}}}],["merg",{"_index":607,"title":{},"body":{"index.html":{},"license.html":{}}}],["mergemap",{"_index":210,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["mergemap((characterist",{"_index":562,"title":{},"body":{"index.html":{}}}],["mergemap((gatt",{"_index":552,"title":{},"body":{"index.html":{}}}],["mergemap((primaryservic",{"_index":556,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["method",{"_index":97,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"changelog.html":{},"index.html":{}}}],["minvalu",{"_index":334,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["miscellan",{"_index":648,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["miss",{"_index":470,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mit",{"_index":587,"title":{},"body":{"index.html":{},"license.html":{}}}],["modifi",{"_index":606,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":38,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["n/a",{"_index":87,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{}}}],["n/a'}}°c",{"_index":368,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["n/a\\'}}%)disconnect{{error",{"_index":181,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{}}}],["n/a\\'}}°c)disconnect{{error",{"_index":389,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["name",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["need",{"_index":573,"title":{},"body":{"index.html":{}}}],["new",{"_index":153,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngmodul",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["ngoninit",{"_index":102,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["ngzone",{"_index":108,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["noninfring",{"_index":630,"title":{},"body":{"index.html":{},"license.html":{}}}],["note",{"_index":534,"title":{},"body":{"index.html":{}}}],["notic",{"_index":618,"title":{},"body":{"index.html":{},"license.html":{}}}],["notif",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":533,"title":{},"body":{"index.html":{}}}],["null",{"_index":167,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["number",{"_index":125,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["object",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(this.device).length",{"_index":158,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["observevalu",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["obtain",{"_index":597,"title":{},"body":{"index.html":{},"license.html":{}}}],["ok",{"_index":536,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":84,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["option",{"_index":114,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"changelog.html":{}}}],["optionalservic",{"_index":219,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["otherwis",{"_index":642,"title":{},"body":{"index.html":{},"license.html":{}}}],["out",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":647,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":509,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":247,"title":{},"body":{"components/DemoComponent.html":{}}}],["paramet",{"_index":112,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["particular",{"_index":628,"title":{},"body":{"index.html":{},"license.html":{}}}],["permiss",{"_index":592,"title":{},"body":{"index.html":{},"license.html":{}}}],["permit",{"_index":613,"title":{},"body":{"index.html":{},"license.html":{}}}],["person",{"_index":596,"title":{},"body":{"index.html":{},"license.html":{}}}],["pipe",{"_index":162,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["portion",{"_index":621,"title":{},"body":{"index.html":{},"license.html":{}}}],["posit",{"_index":257,"title":{},"body":{"components/DemoComponent.html":{}}}],["post",{"_index":580,"title":{},"body":{"index.html":{}}}],["pr",{"_index":583,"title":{},"body":{"index.html":{}}}],["primari",{"_index":256,"title":{},"body":{"components/DemoComponent.html":{}}}],["process",{"_index":551,"title":{},"body":{"index.html":{}}}],["product",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":574,"title":{},"body":{"index.html":{}}}],["properti",{"_index":91,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["provid",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":211,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["public",{"_index":92,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["publish",{"_index":608,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpos",{"_index":629,"title":{},"body":{"index.html":{},"license.html":{}}}],["rc.1",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["read",{"_index":203,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["remov",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["reorder",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":202,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["reset",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolv",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":603,"title":{},"body":{"index.html":{},"license.html":{}}}],["result",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":116,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["rgba(119,119,119,0.18",{"_index":323,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["rgba(255,161,161,0.30",{"_index":337,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["right",{"_index":565,"title":{},"body":{"index.html":{},"license.html":{}}}],["root",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["root'},{'nam",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["run",{"_index":576,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["rxjs/oper",{"_index":139,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["s",{"_index":228,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["section",{"_index":246,"title":{},"body":{"components/DemoComponent.html":{}}}],["see",{"_index":566,"title":{},"body":{"index.html":{}}}],["selector",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["sell",{"_index":612,"title":{},"body":{"index.html":{},"license.html":{}}}],["seri",{"_index":279,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["serv",{"_index":575,"title":{},"body":{"index.html":{}}}],["servic",{"_index":148,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"changelog.html":{},"index.html":{}}}],["service/compon",{"_index":541,"title":{},"body":{"index.html":{}}}],["shall",{"_index":619,"title":{},"body":{"index.html":{},"license.html":{}}}],["show",{"_index":240,"title":{},"body":{"components/DemoComponent.html":{}}}],["showbatterylevel",{"_index":103,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["showbatterylevel(valu",{"_index":124,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["singleton",{"_index":145,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["skip",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["smoothi",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["snackbar",{"_index":95,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["softwar",{"_index":599,"title":{},"body":{"index.html":{},"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["specif",{"_index":195,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["src/.../batteri",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../humidity.component.t",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../temperature.component.t",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.t",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/demo/batteri",{"_index":81,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/demo/demo.component.t",{"_index":231,"title":{},"body":{"components/DemoComponent.html":{},"coverage.html":{}}}],["src/app/demo/demo.component.ts:8",{"_index":237,"title":{},"body":{"components/DemoComponent.html":{}}}],["src/app/demo/humidity/humid",{"_index":346,"title":{},"body":{"injectables/HumidityThingy52Service.html":{},"coverage.html":{}}}],["src/app/demo/humidity/humidity.component.t",{"_index":272,"title":{},"body":{"components/HumidityComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/demo/humidity/humidity.component.ts:106",{"_index":286,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/demo/humidity/humidity.component.ts:110",{"_index":289,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/demo/humidity/humidity.component.ts:35",{"_index":304,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/demo/humidity/humidity.component.ts:36",{"_index":300,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/demo/humidity/humidity.component.ts:37",{"_index":299,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/demo/humidity/humidity.component.ts:38",{"_index":301,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/demo/humidity/humidity.component.ts:41",{"_index":298,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/demo/humidity/humidity.component.ts:43",{"_index":306,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/demo/humidity/humidity.component.ts:45",{"_index":285,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/demo/humidity/humidity.component.ts:48",{"_index":305,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/demo/humidity/humidity.component.ts:49",{"_index":302,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/demo/humidity/humidity.component.ts:50",{"_index":303,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/demo/humidity/humidity.component.ts:52",{"_index":291,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/demo/humidity/humidity.component.ts:58",{"_index":290,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/demo/humidity/humidity.component.ts:66",{"_index":287,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/demo/humidity/humidity.component.ts:81",{"_index":292,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/demo/humidity/humidity.component.ts:89",{"_index":288,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/demo/humidity/humidity.component.ts:97",{"_index":294,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/demo/temperature/temperatur",{"_index":390,"title":{},"body":{"injectables/TemperatureThingy52Service.html":{},"coverage.html":{}}}],["src/app/demo/temperature/temperature.component.t",{"_index":367,"title":{},"body":{"components/TemperatureComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/demo/temperature/temperature.component.ts:101",{"_index":374,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/demo/temperature/temperature.component.ts:35",{"_index":384,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/demo/temperature/temperature.component.ts:36",{"_index":380,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/demo/temperature/temperature.component.ts:37",{"_index":379,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/demo/temperature/temperature.component.ts:38",{"_index":381,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/demo/temperature/temperature.component.ts:41",{"_index":378,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/demo/temperature/temperature.component.ts:43",{"_index":386,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/demo/temperature/temperature.component.ts:45",{"_index":370,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/demo/temperature/temperature.component.ts:48",{"_index":385,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/demo/temperature/temperature.component.ts:49",{"_index":382,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/demo/temperature/temperature.component.ts:50",{"_index":383,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/demo/temperature/temperature.component.ts:52",{"_index":376,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/demo/temperature/temperature.component.ts:57",{"_index":375,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/demo/temperature/temperature.component.ts:65",{"_index":372,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/demo/temperature/temperature.component.ts:80",{"_index":373,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/demo/temperature/temperature.component.ts:88",{"_index":377,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/demo/temperature/temperature.component.ts:97",{"_index":371,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/environments/environment.prod.t",{"_index":504,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":506,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":401,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starter",{"_index":567,"title":{},"body":{"index.html":{}}}],["statement",{"_index":495,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":184,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["step",{"_index":318,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["sticki",{"_index":258,"title":{},"body":{"components/DemoComponent.html":{}}}],["stream",{"_index":362,"title":{},"body":{"injectables/HumidityThingy52Service.html":{},"index.html":{}}}],["streamvalu",{"_index":282,"title":{},"body":{"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"index.html":{}}}],["string",{"_index":121,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["strokestyl",{"_index":322,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["style",{"_index":230,"title":{},"body":{"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["styleurl",{"_index":233,"title":{},"body":{"components/DemoComponent.html":{}}}],["subject",{"_index":615,"title":{},"body":{"index.html":{},"license.html":{}}}],["sublicens",{"_index":610,"title":{},"body":{"index.html":{},"license.html":{}}}],["subscribe(devic",{"_index":165,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["subscribe(this.showbatterylevel.bind(thi",{"_index":171,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["subscribe(this.updatevalue.bind(thi",{"_index":342,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["substanti",{"_index":620,"title":{},"body":{"index.html":{},"license.html":{}}}],["support",{"_index":644,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":144,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["svg",{"_index":645,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":507,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":138,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["tap(",{"_index":163,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["temperatur",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["temperaturecompon",{"_index":33,"title":{"components/TemperatureComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["temperaturethingy52servic",{"_index":369,"title":{"injectables/TemperatureThingy52Service.html":{}},"body":{"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["temperaturethingy52service(b",{"_index":387,"title":{},"body":{"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["temperaturethingy52service.gatt_characterist",{"_index":396,"title":{},"body":{"injectables/TemperatureThingy52Service.html":{}}}],["temperaturethingy52service.gatt_primary_servic",{"_index":395,"title":{},"body":{"injectables/TemperatureThingy52Service.html":{}}}],["templat",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["templateurl",{"_index":235,"title":{},"body":{"components/DemoComponent.html":{}}}],["thingy52",{"_index":243,"title":{},"body":{"components/DemoComponent.html":{}}}],["thingy52.servic",{"_index":308,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["thingy52.service.t",{"_index":347,"title":{},"body":{"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"coverage.html":{}}}],["thingy52.service.ts:10",{"_index":349,"title":{},"body":{"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["thingy52.service.ts:12",{"_index":354,"title":{},"body":{"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["thingy52.service.ts:14",{"_index":351,"title":{},"body":{"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["thingy52.service.ts:19",{"_index":353,"title":{},"body":{"injectables/HumidityThingy52Service.html":{}}}],["thingy52.service.ts:24",{"_index":393,"title":{},"body":{"injectables/TemperatureThingy52Service.html":{}}}],["thingy52.service.ts:29",{"_index":352,"title":{},"body":{"injectables/HumidityThingy52Service.html":{}}}],["thingy52.service.ts:49",{"_index":392,"title":{},"body":{"injectables/TemperatureThingy52Service.html":{}}}],["thingy52.service.ts:50",{"_index":350,"title":{},"body":{"injectables/HumidityThingy52Service.html":{}}}],["thingy52.service.ts:9",{"_index":360,"title":{},"body":{"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["this.batterylevel",{"_index":168,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.batterylevelservice.disconnectdevic",{"_index":178,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.batterylevelservice.getbatterylevel",{"_index":170,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.batterylevelservice.getdevic",{"_index":161,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.bl",{"_index":217,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["this.ble.disconnectdevic",{"_index":229,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["this.ble.fakenext",{"_index":547,"title":{},"body":{"index.html":{}}}],["this.ble.getcharacteristic$(primaryservic",{"_index":558,"title":{},"body":{"index.html":{}}}],["this.ble.getdevic",{"_index":214,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["this.ble.getprimaryservice$(gatt",{"_index":554,"title":{},"body":{"index.html":{}}}],["this.ble.readvalue$(characterist",{"_index":564,"title":{},"body":{"index.html":{}}}],["this.ble.streamvalues$().pipe(map((valu",{"_index":363,"title":{},"body":{"injectables/HumidityThingy52Service.html":{},"index.html":{}}}],["this.chartref.nativeel",{"_index":314,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.devic",{"_index":157,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.error",{"_index":164,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.getdevicestatu",{"_index":160,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.haserror.bind(thi",{"_index":169,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.initchart",{"_index":311,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.seri",{"_index":312,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.series.append(date.now",{"_index":344,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.service.disconnectdevic",{"_index":345,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.service.getdevic",{"_index":339,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.service.gethumid",{"_index":343,"title":{},"body":{"components/HumidityComponent.html":{}}}],["this.service.gettemperatur",{"_index":388,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["this.service.streamvalu",{"_index":341,"title":{},"body":{"components/HumidityComponent.html":{}}}],["this.snackbar.open(error",{"_index":179,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.streamvalu",{"_index":310,"title":{},"body":{"components/HumidityComponent.html":{}}}],["this.valu",{"_index":340,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.zone.run",{"_index":175,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["toolbar.mat",{"_index":255,"title":{},"body":{"components/DemoComponent.html":{}}}],["tooltip",{"_index":330,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["top",{"_index":259,"title":{},"body":{"components/DemoComponent.html":{}}}],["tort",{"_index":641,"title":{},"body":{"index.html":{},"license.html":{}}}],["tree",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["tri",{"_index":216,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["trigger",{"_index":549,"title":{},"body":{"index.html":{}}}],["true",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":113,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typecast",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["types/web",{"_index":519,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["unnecessari",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["updatevalu",{"_index":283,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["updatevalue(valu",{"_index":293,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["upgrad",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["us",{"_index":537,"title":{},"body":{"index.html":{},"license.html":{}}}],["usefactori",{"_index":150,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["valu",{"_index":127,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value.getint8(0",{"_index":366,"title":{},"body":{"injectables/HumidityThingy52Service.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["value.getuint8(0",{"_index":224,"title":{},"body":{"injectables/BatteryLevelService.html":{},"injectables/HumidityThingy52Service.html":{},"index.html":{}}}],["value.getuint8(1",{"_index":399,"title":{},"body":{"injectables/TemperatureThingy52Service.html":{}}}],["var",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["variabl",{"_index":498,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":307,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["viewchild('chart",{"_index":297,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["void",{"_index":117,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{}}}],["warranti",{"_index":622,"title":{},"body":{"index.html":{},"license.html":{}}}],["wassim",{"_index":590,"title":{},"body":{"index.html":{},"license.html":{}}}],["wb_sunni",{"_index":242,"title":{},"body":{"components/DemoComponent.html":{}}}],["web",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"injectables/HumidityThingy52Service.html":{},"components/TemperatureComponent.html":{},"injectables/TemperatureThingy52Service.html":{},"index.html":{}}}],["webbluetoothmodul",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["webbluetoothmodule.forroot",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["welcom",{"_index":585,"title":{},"body":{"index.html":{}}}],["whether",{"_index":638,"title":{},"body":{"index.html":{},"license.html":{}}}],["width",{"_index":250,"title":{},"body":{"components/DemoComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["window['smoothiechart",{"_index":316,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["window['timeseri",{"_index":313,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["without",{"_index":602,"title":{},"body":{"index.html":{},"license.html":{}}}],["x1f449",{"_index":571,"title":{},"body":{"index.html":{}}}],["x1f60e",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["yarn",{"_index":532,"title":{},"body":{"index.html":{}}}],["z",{"_index":260,"title":{},"body":{"components/DemoComponent.html":{}}}],["zone",{"_index":96,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["zone.j",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ble-root\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ble-root',\n  template: `\n   \n  `\n})\nexport class AppComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DemoComponent', 'selector': 'ble-demo'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBatteryLevelComponent\n\nBatteryLevelComponent\n\nAppModule -->\n\nBatteryLevelComponent->AppModule\n\n\n\n\n\nDemoComponent\n\nDemoComponent\n\nAppModule -->\n\nDemoComponent->AppModule\n\n\n\n\n\nHumidityComponent\n\nHumidityComponent\n\nAppModule -->\n\nHumidityComponent->AppModule\n\n\n\n\n\nTemperatureComponent\n\nTemperatureComponent\n\nAppModule -->\n\nTemperatureComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                BatteryLevelComponent\n                            \n                            \n                                DemoComponent\n                            \n                            \n                                HumidityComponent\n                            \n                            \n                                TemperatureComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { WebBluetoothModule } from '@manekinekko/angular-web-bluetooth';\n\nimport { AppComponent } from './app.component';\nimport { BatteryLevelComponent } from './demo/battery-level/battery-level.component';\nimport { DemoComponent } from './demo/demo.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, MatIconModule, MatListModule, MatExpansionModule, MatSnackBarModule, MatProgressBarModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TemperatureComponent } from './demo/temperature/temperature.component';\nimport { HumidityComponent } from './demo/humidity/humidity.component';\n\n@NgModule({\n  declarations: [\n    AppComponent, \n    BatteryLevelComponent, \n    DemoComponent,\n    TemperatureComponent,\n    HumidityComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    WebBluetoothModule.forRoot({\n      enableTracing: true\n    }),\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    MatProgressBarModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BatteryLevelComponent.html":{"url":"components/BatteryLevelComponent.html","title":"component - BatteryLevelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BatteryLevelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/demo/battery-level/battery-level.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-battery-level\n            \n\n\n\n            \n                template\n                Get Battery Level ({{batteryLevel || 'N/A'}}%)\nDisconnect\n{{error}}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                batteryLevel\n                            \n                            \n                                    Public\n                                batteryLevelService\n                            \n                            \n                                device\n                            \n                            \n                                error\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnectDevice\n                            \n                            \n                                getBatteryLevel\n                            \n                            \n                                getDeviceStatus\n                            \n                            \n                                hasError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showBatteryLevel\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isDeviceValid\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone, batteryLevelService: BatteryLevelService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/demo/battery-level/battery-level.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        batteryLevelService\n                                                  \n                                                        \n                                                                    BatteryLevelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disconnectDevice\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnectDevice()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/battery-level/battery-level.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBatteryLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBatteryLevel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/battery-level/battery-level.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDeviceStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDeviceStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/battery-level/battery-level.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasError(error: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/battery-level/battery-level.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/battery-level/battery-level.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showBatteryLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowBatteryLevel(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/battery-level/battery-level.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            batteryLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        batteryLevel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '--'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/battery-level/battery-level.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            batteryLevelService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        batteryLevelService:     BatteryLevelService\n\n                    \n                \n                    \n                        \n                            Type :     BatteryLevelService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/battery-level/battery-level.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            device\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        device:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/battery-level/battery-level.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/battery-level/battery-level.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/battery-level/battery-level.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/battery-level/battery-level.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isDeviceValid\n                    \n                \n\n                \n                    \n                        getisDeviceValid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/demo/battery-level/battery-level.component.ts:32\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, NgZone } from '@angular/core';\nimport { BatteryLevelService } from './battery-level.service';\nimport { tap } from 'rxjs/operators';\nimport { MatSnackBar } from '@angular/material';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: (b, l) => new BluetoothCore(b, l),\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BatteryLevelService,\n  useFactory: (b) => new BatteryLevelService(b),\n  deps: [BluetoothCore]\n}];\n\n@Component({\n  selector: 'ble-battery-level',\n  template: `\n    Get Battery Level ({{batteryLevel || 'N/A'}}%)\n    Disconnect \n    {{error}}\n  `,\n  providers: [PROVIDERS]\n})\nexport class BatteryLevelComponent implements OnInit {\n  batteryLevel = '--';\n  error = '';\n  device: any = {};\n\n  get isDeviceValid() {\n    return this.device && Object.keys(this.device).length > 0;\n  }\n\n  constructor(\n    public zone: NgZone, \n    public batteryLevelService: BatteryLevelService,\n    public snackBar: MatSnackBar) {}\n\n  ngOnInit() {\n    this.getDeviceStatus();\n  }\n\n  getDeviceStatus() {\n    this.batteryLevelService.getDevice()\n    .pipe(\n      tap(e => this.error = '')\n    ).subscribe(device => {\n      if (device) {\n        this.device = device;\n      } else {\n        // device not connected or disconnected\n        this.device = null;\n        this.batteryLevel = '--';\n      }\n    }, this.hasError.bind(this));\n  }\n\n  getBatteryLevel() {\n    return this.batteryLevelService.getBatteryLevel()\n      .pipe(\n        tap(e => this.error = '')\n      )\n      .subscribe(this.showBatteryLevel.bind(this), this.hasError.bind(this));\n  }\n\n  showBatteryLevel(value: number) {\n    // force change detection\n    this.zone.run(() => {\n      console.log('Reading battery level %d', value);\n      this.batteryLevel = '' + value;\n    });\n  }\n\n  disconnectDevice() {\n    this.batteryLevelService.disconnectDevice();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n}\n\n\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Get Battery Level ({{batteryLevel || \\'N/A\\'}}%)Disconnect{{error}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DemoComponent', 'selector': 'ble-demo'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BatteryLevelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BatteryLevelService.html":{"url":"injectables/BatteryLevelService.html","title":"injectable - BatteryLevelService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BatteryLevelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/demo/battery-level/battery-level.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ble\n                            \n                            \n                                    Static\n                                GATT_CHARACTERISTIC\n                            \n                            \n                                    Static\n                                GATT_PRIMARY_SERVICE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnectDevice\n                            \n                            \n                                getBatteryLevel\n                            \n                            \n                                getDevice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ble: BluetoothCore)\n                    \n                \n                        \n                            \n                                Defined in src/app/demo/battery-level/battery-level.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ble\n                                                  \n                                                        \n                                                                    BluetoothCore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disconnectDevice\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnectDevice()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/battery-level/battery-level.service.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBatteryLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBatteryLevel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/battery-level/battery-level.service.ts:26\n                            \n                        \n\n\n                \n                    \n                            Get Battery Level GATT Characteristic value.\nThis logic is specific to this service, this is why we can't abstract it elsewhere.\nThe developer is free to provide any service, and characteristics she wants.\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Emites the value of the requested service read from the device\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDevice\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDevice()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/battery-level/battery-level.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ble\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ble:     BluetoothCore\n\n                    \n                \n                    \n                        \n                            Type :     BluetoothCore\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/battery-level/battery-level.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GATT_CHARACTERISTIC\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        GATT_CHARACTERISTIC:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'battery_level'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/battery-level/battery-level.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GATT_PRIMARY_SERVICE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        GATT_PRIMARY_SERVICE:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'battery_service'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/battery-level/battery-level.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatteryLevelService {\n  static GATT_CHARACTERISTIC = 'battery_level';\n  static GATT_PRIMARY_SERVICE = 'battery_service';\n\n  constructor(public ble: BluetoothCore) {}\n\n  getDevice() {\n    // call this method to get the connected device\n    return this.ble.getDevice$();\n  }\n\n  /**\n   * Get Battery Level GATT Characteristic value.\n   * This logic is specific to this service, this is why we can't abstract it elsewhere.\n   * The developer is free to provide any service, and characteristics she wants.\n   *\n   * @return Emites the value of the requested service read from the device\n   */\n  getBatteryLevel() {\n    console.log('Getting Battery Service...');\n\n    try {\n      return (\n        this.ble\n          .read$({\n            acceptAllDevices: true,\n            optionalServices: [BatteryLevelService.GATT_PRIMARY_SERVICE],\n            service: BatteryLevelService.GATT_PRIMARY_SERVICE,\n            characteristic: BatteryLevelService.GATT_CHARACTERISTIC\n          })\n          .pipe(\n            map((value: DataView) => value.getUint8(0))\n          )\n      );\n    } catch (e) {\n      console.error('Oops! can not read value from %s');\n    }\n  }\n\n  disconnectDevice() {\n    // call this method to disconnect device\n    this.ble.disconnectDevice();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DemoComponent.html":{"url":"components/DemoComponent.html","title":"component - DemoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DemoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/demo/demo.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ble-demo\n            \n\n            \n                styleUrls\n                ./demo.component.css\n            \n\n\n\n            \n                templateUrl\n                ./demo.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/demo/demo.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ble-demo',\n  templateUrl: './demo.component.html',\n  styleUrls: ['./demo.component.css'],\n})\nexport class DemoComponent {\n\n  constructor() {}\n\n}\n\n    \n\n    \n        \n  \n  Angular Web BLE Demo\n\n\n\n\n  \n  \n    \n      \n        \n          battery_std\n          Battery Level\n        \n        \n          Show the battery level of a compatible BLE device\n        \n      \n\n      \n\n    \n\n  \n\n  \n  \n    \n      \n        \n          wb_sunny\n          Temperature\n        \n        \n          Get the temperature value from the Thingy52 device\n        \n      \n\n      \n\n    \n\n  \n\n  \n  \n      \n        \n          \n            cloud\n            Humidity\n          \n          \n            Get the humidity value from the Thingy52 device\n          \n        \n  \n        \n  \n      \n  \n    \n\n\n    \n\n    \n                \n                    ./demo.component.css\n                \n                section {\n  padding: 40px;\n  max-width: 700px;\n  margin: 0 auto;\n}\n\n.mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n\n.fix-line-height {\n  line-height: 24px\n}\n\nimg {\n  width: 32px;\n  margin: 0 10px;\n}\n\n.mat-accordion {\n  padding: 5px;\n}\n\n.mat-icon {\n  margin: 0 10px 0 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Angular Web BLE Demo                                battery_std          Battery Level                          Show the battery level of a compatible BLE device                                                          wb_sunny          Temperature                          Get the temperature value from the Thingy52 device                                                                  cloud            Humidity                                Get the humidity value from the Thingy52 device                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DemoComponent', 'selector': 'ble-demo'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DemoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HumidityComponent.html":{"url":"components/HumidityComponent.html","title":"component - HumidityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HumidityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/demo/humidity/humidity.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-humidity\n            \n\n\n            \n                styles\n                \n  canvas {\n    width: 800px;\n    height: 100px;\n    margin-left: -20px;\n  }\n            \n\n            \n                template\n                Connect ({{value || 'N/A'}}%)\nDisconnect\n{{error}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartRef\n                            \n                            \n                                device\n                            \n                            \n                                error\n                            \n                            \n                                series\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                value\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnectDevice\n                            \n                            \n                                getDeviceStatus\n                            \n                            \n                                getValue\n                            \n                            \n                                hasError\n                            \n                            \n                                initChart\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                streamValues\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isDeviceValid\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone, service: HumidityThingy52Service, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/demo/humidity/humidity.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    HumidityThingy52Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disconnectDevice\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnectDevice()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity.component.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDeviceStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDeviceStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValue\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValue()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity.component.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasError(error: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity.component.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initChart\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitChart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            streamValues\n                            \n                            \n                        \n                    \n                \n                \n                    \nstreamValues()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateValue(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity.component.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('chart')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            device\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        device:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            series\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        series:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     HumidityThingy52Service\n\n                    \n                \n                    \n                        \n                            Type :     HumidityThingy52Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '--'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity.component.ts:48\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isDeviceValid\n                    \n                \n\n                \n                    \n                        getisDeviceValid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/demo/humidity/humidity.component.ts:43\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, NgZone, ElementRef, ViewChild } from '@angular/core';\nimport { HumidityThingy52Service } from './humidity-thingy52.service';\nimport { tap } from 'rxjs/operators';\nimport { MatSnackBar } from '@angular/material';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: (b, l) => new BluetoothCore(b, l),\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: HumidityThingy52Service,\n  useFactory: (b) => new HumidityThingy52Service(b),\n  deps: [BluetoothCore]\n}];\n\n@Component({\n  selector: 'ble-humidity',\n  template: `\n    Connect ({{value || 'N/A'}}%)\n    Disconnect \n    {{error}}\n    \n  `,\n  styles: [`\n  canvas {\n    width: 800px;\n    height: 100px;\n    margin-left: -20px;\n  }`],\n  providers: [PROVIDERS]\n})\nexport class HumidityComponent implements OnInit {\n  value = '--';\n  error = '';\n  device: any = {};\n  series: any = {};\n\n  @ViewChild('chart')\n  chartRef: ElementRef;\n\n  get isDeviceValid() {\n    return this.device && Object.keys(this.device).length > 0;\n  }\n\n  constructor(\n    public zone: NgZone,\n    public service: HumidityThingy52Service,\n    public snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.getDeviceStatus();\n    this.streamValues();\n    this.initChart();\n  }\n\n  initChart() {\n    this.series = new window['TimeSeries']();\n    const canvas = this.chartRef.nativeElement;\n    const chart = new window['SmoothieChart']({ interpolation: 'step', grid: { fillStyle: '#ffffff', strokeStyle: 'rgba(119,119,119,0.18)', borderVisible: false }, labels: { fillStyle: '#000000', fontSize: 17 }, tooltip: true });\n    chart.addTimeSeries(this.series, { maxValue: 100, minValue: -100, lineWidth: 1, strokeStyle: '#ff0000', fillStyle: 'rgba(255,161,161,0.30)' });\n    chart.streamTo(canvas);\n  }\n\n  getDeviceStatus() {\n    this.service.getDevice()\n      .pipe(\n        tap(e => this.error = '')\n      ).subscribe(device => {\n        if (device) {\n          this.device = device;\n        } else {\n          // device not connected or disconnected\n          this.device = null;\n          this.value = '--';\n        }\n      }, this.hasError.bind(this));\n  }\n\n  streamValues() {\n    this.service.streamValues()\n      .pipe(\n        tap(e => this.error = '')\n      )\n      .subscribe(this.updateValue.bind(this), this.hasError.bind(this));\n  }\n\n  getValue() {\n    return this.service.getHumidity()\n      .pipe(\n        tap(e => this.error = '')\n      )\n      .subscribe(this.updateValue.bind(this), this.hasError.bind(this));\n  }\n\n  updateValue(value: number) {\n    // force change detection\n    this.zone.run(() => {\n      console.log('Reading humidity %d', value);\n      this.value = '' + value;\n      this.series.append(Date.now(), value);\n    });\n  }\n\n  disconnectDevice() {\n    this.service.disconnectDevice();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n}\n\n\n\n    \n\n\n    \n            \n  canvas {\n    width: 800px;\n    height: 100px;\n    margin-left: -20px;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Connect ({{value || \\'N/A\\'}}%)Disconnect{{error}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DemoComponent', 'selector': 'ble-demo'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HumidityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HumidityThingy52Service.html":{"url":"injectables/HumidityThingy52Service.html","title":"injectable - HumidityThingy52Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HumidityThingy52Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/demo/humidity/humidity-thingy52.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ble\n                            \n                            \n                                    Static\n                                GATT_CHARACTERISTIC\n                            \n                            \n                                    Static\n                                GATT_PRIMARY_SERVICE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnectDevice\n                            \n                            \n                                getDevice\n                            \n                            \n                                getHumidity\n                            \n                            \n                                streamValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ble: BluetoothCore)\n                    \n                \n                        \n                            \n                                Defined in src/app/demo/humidity/humidity-thingy52.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ble\n                                                  \n                                                        \n                                                                    BluetoothCore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disconnectDevice\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnectDevice()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity-thingy52.service.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDevice\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDevice()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity-thingy52.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHumidity\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHumidity()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity-thingy52.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Get temperature value.\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Emites the value of the requested service read from the device\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            streamValues\n                            \n                            \n                        \n                    \n                \n                \n                    \nstreamValues()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity-thingy52.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ble\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ble:     BluetoothCore\n\n                    \n                \n                    \n                        \n                            Type :     BluetoothCore\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity-thingy52.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GATT_CHARACTERISTIC\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        GATT_CHARACTERISTIC:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ef680203-9b35-4933-9b10-52ffa9740042'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity-thingy52.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GATT_PRIMARY_SERVICE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        GATT_PRIMARY_SERVICE:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ef680200-9b35-4933-9b10-52ffa9740042'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/humidity/humidity-thingy52.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HumidityThingy52Service {\n  static GATT_CHARACTERISTIC = 'ef680203-9b35-4933-9b10-52ffa9740042';\n  static GATT_PRIMARY_SERVICE = 'ef680200-9b35-4933-9b10-52ffa9740042';\n\n  constructor(public ble: BluetoothCore) {}\n\n  getDevice() {\n    // call this method to get the connected device\n    return this.ble.getDevice$();\n  }\n\n  streamValues() {\n    // call this method to get a stream of values emitted by the device\n    return this.ble.streamValues$().pipe(map((value: DataView) => value.getUint8(0)));\n  }\n\n  /**\n   * Get temperature value.\n   *\n   * @return Emites the value of the requested service read from the device\n   */\n  getHumidity() {\n    console.log('Getting Humidity Service...');\n\n    try {\n      return (\n        this.ble\n          .read$({\n            acceptAllDevices: true,\n            optionalServices: [HumidityThingy52Service.GATT_PRIMARY_SERVICE],\n            service: HumidityThingy52Service.GATT_PRIMARY_SERVICE,\n            characteristic: HumidityThingy52Service.GATT_CHARACTERISTIC\n          })\n          .pipe(\n            map((value: DataView) => value.getInt8(0))\n          )\n      );\n    } catch (e) {\n      console.error('Oops! can not read value from %s');\n    }\n  }\n\n  disconnectDevice() {\n    // call this method to disconnect device\n    this.ble.disconnectDevice();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TemperatureComponent.html":{"url":"components/TemperatureComponent.html","title":"component - TemperatureComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TemperatureComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/demo/temperature/temperature.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-temperature\n            \n\n\n            \n                styles\n                \n  canvas {\n    width: 800px;\n    height: 100px;\n    margin-left: -20px;\n  }\n            \n\n            \n                template\n                Get temperature ({{value || 'N/A'}}°C)\nDisconnect\n{{error}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartRef\n                            \n                            \n                                device\n                            \n                            \n                                error\n                            \n                            \n                                series\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                value\n                            \n                            \n                                    Public\n                                zone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnectDevice\n                            \n                            \n                                getDeviceStatus\n                            \n                            \n                                getValue\n                            \n                            \n                                hasError\n                            \n                            \n                                initChart\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isDeviceValid\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone, service: TemperatureThingy52Service, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/demo/temperature/temperature.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    TemperatureThingy52Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disconnectDevice\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnectDevice()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature.component.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDeviceStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDeviceStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValue\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValue()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasError(error: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature.component.ts:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initChart\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitChart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateValue(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature.component.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('chart')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            device\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        device:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            series\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        series:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     TemperatureThingy52Service\n\n                    \n                \n                    \n                        \n                            Type :     TemperatureThingy52Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '--'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature.component.ts:48\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isDeviceValid\n                    \n                \n\n                \n                    \n                        getisDeviceValid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/demo/temperature/temperature.component.ts:43\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, NgZone, ElementRef, ViewChild } from '@angular/core';\nimport { TemperatureThingy52Service } from './temperature-thingy52.service';\nimport { tap } from 'rxjs/operators';\nimport { MatSnackBar } from '@angular/material';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: (b, l) => new BluetoothCore(b, l),\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: TemperatureThingy52Service,\n  useFactory: (b) => new TemperatureThingy52Service(b),\n  deps: [BluetoothCore]\n}];\n\n@Component({\n  selector: 'ble-temperature',\n  template: `\n    Get temperature ({{value || 'N/A'}}°C)\n    Disconnect \n    {{error}}\n    \n  `,\n  styles: [`\n  canvas {\n    width: 800px;\n    height: 100px;\n    margin-left: -20px;\n  }`],\n  providers: [PROVIDERS]\n})\nexport class TemperatureComponent implements OnInit {\n  value = '--';\n  error = '';\n  device: any = {};\n  series: any = {};\n\n  @ViewChild('chart')\n  chartRef: ElementRef;\n\n  get isDeviceValid() {\n    return this.device && Object.keys(this.device).length > 0;\n  }\n\n  constructor(\n    public zone: NgZone,\n    public service: TemperatureThingy52Service,\n    public snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.getDeviceStatus();\n    this.initChart();\n  }\n\n  initChart() {\n    this.series = new window['TimeSeries']();\n    const canvas = this.chartRef.nativeElement;\n    const chart = new window['SmoothieChart']({ interpolation: 'step', grid: { fillStyle: '#ffffff', strokeStyle: 'rgba(119,119,119,0.18)', borderVisible: false }, labels: { fillStyle: '#000000', fontSize: 17 }, tooltip: true });\n    chart.addTimeSeries(this.series, { maxValue: 100, minValue: -100, lineWidth: 1, strokeStyle: '#ff0000', fillStyle: 'rgba(255,161,161,0.30)' });\n    chart.streamTo(canvas);\n  }\n\n  getDeviceStatus() {\n    this.service.getDevice()\n      .pipe(\n        tap(e => this.error = '')\n      ).subscribe(device => {\n        if (device) {\n          this.device = device;\n        } else {\n          // device not connected or disconnected\n          this.device = null;\n          this.value = '--';\n        }\n      }, this.hasError.bind(this));\n  }\n\n  getValue() {\n    return this.service.getTemperature()\n      .pipe(\n        tap(e => this.error = '')\n      )\n      .subscribe(this.updateValue.bind(this), this.hasError.bind(this));\n  }\n\n  updateValue(value: number) {\n    // force change detection\n    this.zone.run(() => {\n      console.log('Reading temperature %d', value);\n      this.value = '' + value;\n      this.series.append(Date.now(), value);\n    });\n  }\n\n  disconnectDevice() {\n    this.service.disconnectDevice();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n}\n\n\n\n    \n\n\n    \n            \n  canvas {\n    width: 800px;\n    height: 100px;\n    margin-left: -20px;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Get temperature ({{value || \\'N/A\\'}}°C)Disconnect{{error}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DemoComponent', 'selector': 'ble-demo'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TemperatureComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TemperatureThingy52Service.html":{"url":"injectables/TemperatureThingy52Service.html","title":"injectable - TemperatureThingy52Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TemperatureThingy52Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/demo/temperature/temperature-thingy52.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ble\n                            \n                            \n                                    Static\n                                GATT_CHARACTERISTIC\n                            \n                            \n                                    Static\n                                GATT_PRIMARY_SERVICE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnectDevice\n                            \n                            \n                                getDevice\n                            \n                            \n                                getTemperature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ble: BluetoothCore)\n                    \n                \n                        \n                            \n                                Defined in src/app/demo/temperature/temperature-thingy52.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ble\n                                                  \n                                                        \n                                                                    BluetoothCore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disconnectDevice\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnectDevice()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature-thingy52.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDevice\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDevice()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature-thingy52.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTemperature\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTemperature()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature-thingy52.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            Get temperature value.\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Emites the value of the requested service read from the device\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ble\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ble:     BluetoothCore\n\n                    \n                \n                    \n                        \n                            Type :     BluetoothCore\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature-thingy52.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GATT_CHARACTERISTIC\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        GATT_CHARACTERISTIC:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ef680201-9b35-4933-9b10-52ffa9740042'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature-thingy52.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GATT_PRIMARY_SERVICE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        GATT_PRIMARY_SERVICE:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ef680200-9b35-4933-9b10-52ffa9740042'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demo/temperature/temperature-thingy52.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TemperatureThingy52Service {\n  static GATT_CHARACTERISTIC = 'ef680201-9b35-4933-9b10-52ffa9740042';\n  static GATT_PRIMARY_SERVICE = 'ef680200-9b35-4933-9b10-52ffa9740042';\n\n  constructor(public ble: BluetoothCore) {}\n\n  getDevice() {\n    // call this method to get the connected device\n    return this.ble.getDevice$();\n  }\n\n  /**\n   * Get temperature value.\n   *\n   * @return Emites the value of the requested service read from the device\n   */\n  getTemperature() {\n    console.log('Getting Temperature Service...');\n\n    try {\n      return (\n        this.ble\n          .read$({\n            acceptAllDevices: true,\n            optionalServices: [TemperatureThingy52Service.GATT_PRIMARY_SERVICE],\n            service: TemperatureThingy52Service.GATT_PRIMARY_SERVICE,\n            characteristic: TemperatureThingy52Service.GATT_CHARACTERISTIC\n          })\n          .pipe(\n            map((value: DataView) => {\n              const integer = value.getInt8(0);\n              const decimal = value.getUint8(1);\n              return integer + decimal / 100;\n            })\n          )\n      );\n    } catch (e) {\n      console.error('Oops! can not read value from %s');\n    }\n  }\n\n  disconnectDevice() {\n    // call this method to disconnect device\n    this.ble.disconnectDevice();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n2.0.0 (2018-11-25)\nFeatures\n\nadd disconnect method (#55) (a4a76de)\n\n4.0.0 (2018-10-31)\nFeatures\n\nupgrade to angular 7 (#52) (fa05cb1)\n\n3.0.0 (2018-05-13)\n2.1.1 (2018-03-29)\n2.1.0 (2018-02-14)\n2.0.0 (2017-12-15)\n1.0.2 (2017-02-26)\n1.0.1 (2017-02-26)\nFeatures\n\nbetter error handling (aed42e8)\n\n1.0.0 (2017-02-25)\nBug Fixes\n\nreorder code (396baaa)\n\nFeatures\n\nupgrade to Angular 4.0.0-rc.1 (dd48716)\n\n0.4.3 (2017-02-23)\nBug Fixes\n\nmake AOT happy &#x1F60E; (148b3dc)\n\n0.4.2 (2017-02-23)\nBug Fixes\n\nhandle error exceptions (15bcad8)\n\n0.4.1 (2017-02-23)\nBug Fixes\n\nmake options and enableTracing optional (#14) (d4fcf3a)\nresolve compilation issues for AOT (f624a5c)\n\n0.4.0 (2017-02-22)\nBug Fixes\n\nremove unnecessary  typecasts (#13) (0981f4b)\n\nFeatures\n\nadd a logger service (f783009)\n\n0.3.1 (2017-02-15)\n0.3.0 (2017-02-15)\n0.2.0 (2017-02-11)\n0.1.3 (2017-02-11)\nBug Fixes\n\nadd missing type decorators (#8) (a14a265)\n\nFeatures\n\nadd observeValue method (#9) (1fb7f24)\n\n0.1.2 (2017-02-09)\nBug Fixes\n\ndon't skip value change notifications (#5) (c9755f6)\nmore flexible dependency versions (#6) (e821c6a)\n\n0.1.1 (2016-12-28)\n0.1.0 (2016-12-28)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/demo/battery-level/battery-level.component.ts\n            \n            \n                component\n            \n            \n                BatteryLevelComponent\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/demo/battery-level/battery-level.component.ts\n            \n            \n                variable\n            \n            \n                PROVIDERS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/demo/battery-level/battery-level.service.ts\n            \n            \n                injectable\n            \n            \n                BatteryLevelService\n            \n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/demo/demo.component.ts\n            \n            \n                component\n            \n            \n                DemoComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/demo/humidity/humidity-thingy52.service.ts\n            \n            \n                injectable\n            \n            \n                HumidityThingy52Service\n            \n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/demo/humidity/humidity.component.ts\n            \n            \n                component\n            \n            \n                HumidityComponent\n            \n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/demo/humidity/humidity.component.ts\n            \n            \n                variable\n            \n            \n                PROVIDERS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/demo/temperature/temperature-thingy52.service.ts\n            \n            \n                injectable\n            \n            \n                TemperatureThingy52Service\n            \n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/demo/temperature/temperature.component.ts\n            \n            \n                component\n            \n            \n                TemperatureComponent\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/demo/temperature/temperature.component.ts\n            \n            \n                variable\n            \n            \n                PROVIDERS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.1.0\n        \n            @angular/cdk : ~7.1.0\n        \n            @angular/common : ^7.1.0\n        \n            @angular/compiler : ^7.1.0\n        \n            @angular/core : ^7.1.0\n        \n            @angular/forms : ^7.1.0\n        \n            @angular/http : ^7.1.0\n        \n            @angular/material : ^7.1.0\n        \n            @angular/platform-browser : ^7.1.0\n        \n            @angular/platform-browser-dynamic : ^7.1.0\n        \n            @angular/router : ^7.1.0\n        \n            @types/web-bluetooth : 0.0.4\n        \n            core-js : ^2.5.7\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ^6.3.3\n        \n            smoothie : ^1.35.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\nThe missing Web Bluetooth module for Angular\n \n\nYarn it\nyarn add @manekinekko/angular-web-bluetooth @types/web-bluetooth\nor NPM it\nnpm i -S @manekinekko/angular-web-bluetooth @types/web-bluetooth\nNote: Make also sure the @types/web-bluetooth is installed OK.\nUse it\n1) import the WebBluetoothModule module\nimport { NgModule } from '@angular/core';\nimport { WebBluetoothModule } from '@manekinekko/angular-web-bluetooth';\n\n@NgModule({\n  imports: [\n    //...,\n    WebBluetoothModule.forRoot({\n      enableTracing: true / false // enable logs\n    })\n  ]\n  //...\n})\nexport class AppModule {}2) use it in your service/component\nHere is an annotated example using the BluetoothCore service:\nimport { Injectable } from '@angular/core';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatteryLevelService {\n  static GATT_CHARACTERISTIC_BATTERY_LEVEL = 'battery_level';\n  static GATT_PRIMARY_SERVICE = 'battery_service';\n\n  constructor(public ble: BluetoothCore) {}\n\n  getFakeValue() {\n    this.ble.fakeNext();\n  }\n\n  getDevice() {\n    // call this method to get the connected device\n    return this.ble.getDevice$();\n  }\n\n  streamValues() {\n    // call this method to get a stream of values emitted by the device\n    return this.ble.streamValues$().pipe(map((value: DataView) => value.getUint8(0)));\n  }\n\n  /**\n   * Get Battery Level GATT Characteristic value.\n   * This logic is specific to this service, this is why we can't abstract it elsewhere.\n   * The developer is free to provide any service, and characteristics she wants.\n   *\n   * @return Emites the value of the requested service read from the device\n   */\n  getBatteryLevel() {\n    console.log('Getting Battery Service...');\n\n    try {\n      return (\n        this.ble\n\n          // 1) call the discover method will trigger the discovery process (by the browser)\n          .discover$({\n            acceptAllDevices: true,\n            optionalServices: [BatteryLevelService.GATT_PRIMARY_SERVICE]\n          })\n          .pipe(\n            // 2) get that service\n            mergeMap((gatt: BluetoothRemoteGATTServer) => {\n              return this.ble.getPrimaryService$(gatt, BatteryLevelService.GATT_PRIMARY_SERVICE);\n            }),\n            // 3) get a specific characteristic on that service\n            mergeMap((primaryService: BluetoothRemoteGATTService) => {\n              return this.ble.getCharacteristic$(primaryService, BatteryLevelService.GATT_CHARACTERISTIC_BATTERY_LEVEL);\n            }),\n            // 4) ask for the value of that characteristic (will return a DataView)\n            mergeMap((characteristic: BluetoothRemoteGATTCharacteristic) => {\n              return this.ble.readValue$(characteristic);\n            }),\n            // 5) on that DataView, get the right value\n            map((value: DataView) => value.getUint8(0))\n          )\n      );\n    } catch (e) {\n      console.error('Oops! can not read value from %s');\n    }\n  }\n}See the starter for a complete use case.\nAPI documentation\nHere &#x1F449; https://manekinekko.github.io/angular-web-bluetooth/\nNeed a starter?\n\n\nThis project serves also as a starter. Run the following command:\nnpm start\nBlog post\nCheckout my post on medium.\n\n  \n    \n  \n\n\nHave a PR?\nAll contributions are welcome ;)\nLicense\nThe MIT License (MIT) Copyright (c) 2017 - Wassim CHEGHAM\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT) Copyright (c) 2017 - Wassim CHEGHAM\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBatteryLevelComponent\n\nBatteryLevelComponent\n\nAppModule -->\n\nBatteryLevelComponent->AppModule\n\n\n\n\n\nDemoComponent\n\nDemoComponent\n\nAppModule -->\n\nDemoComponent->AppModule\n\n\n\n\n\nHumidityComponent\n\nHumidityComponent\n\nAppModule -->\n\nHumidityComponent->AppModule\n\n\n\n\n\nTemperatureComponent\n\nTemperatureComponent\n\nAppModule -->\n\nTemperatureComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            PROVIDERS   (src/.../battery-level.component.ts)\n                        \n                        \n                            PROVIDERS   (src/.../humidity.component.ts)\n                        \n                        \n                            PROVIDERS   (src/.../temperature.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/demo/battery-level/battery-level.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PROVIDERS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PROVIDERS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n  provide: BluetoothCore,\n  useFactory: (b, l) => new BluetoothCore(b, l),\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BatteryLevelService,\n  useFactory: (b) => new BatteryLevelService(b),\n  deps: [BluetoothCore]\n}]\n                        \n                    \n\n\n            \n        \n\n    src/app/demo/humidity/humidity.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PROVIDERS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PROVIDERS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n  provide: BluetoothCore,\n  useFactory: (b, l) => new BluetoothCore(b, l),\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: HumidityThingy52Service,\n  useFactory: (b) => new HumidityThingy52Service(b),\n  deps: [BluetoothCore]\n}]\n                        \n                    \n\n\n            \n        \n\n    src/app/demo/temperature/temperature.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PROVIDERS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PROVIDERS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n  provide: BluetoothCore,\n  useFactory: (b, l) => new BluetoothCore(b, l),\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: TemperatureThingy52Service,\n  useFactory: (b) => new TemperatureThingy52Service(b),\n  deps: [BluetoothCore]\n}]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
