var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AWBOptions.html",[0,1.311,1,1.973]],["body/interfaces/AWBOptions.html",[0,1.54,1,3.477,2,2.623,3,0.465,4,0.465,5,0.407,6,0.73,7,0.298,8,2.316,9,0.407,10,1.506,11,1.038,12,3.477,13,2.655,14,0.59,15,0.036,16,1.022,17,3.293,18,3.902,19,3.034,20,0.658,21,3.902,22,2.623,23,1.648,24,3.034,25,1.818,26,3.034,27,1.52,28,2.177,29,3.034,30,0.632,31,3.293,32,1.252,33,2.107,34,2.623,35,2.664,36,3.034,37,3.293,38,3.034,39,2.316,40,0.106,41,2.177,42,1.867,43,3.034,44,1.282,45,2.189,46,2.177,47,3.034,48,2.071,49,1.692,50,0.021,51,0.026,52,0.021]],["title/components/AppComponent.html",[53,0.83,54,1.092]],["body/components/AppComponent.html",[3,0.524,4,0.524,5,0.459,15,0.035,16,0.742,20,0.742,30,0.459,40,0.12,50,0.023,51,0.028,52,0.023,53,1.465,54,2.009,55,2.347,56,2.105,57,2.105,58,3.42,59,2.105,60,3.13,61,2.354,62,2.347,63,2.59,64,1.736,65,2.59,66,2.347,67,2.105,68,2.927,69,2.105,70,0.913,71,2.105,72,1.445,73,1.736,74,2.105,75,1.445,76,2.105,77,1.445,78,2.105,79,1.445,80,2.105,81,1.445,82,1.908,83,2.105,84,2.105]],["title/modules/AppModule.html",[85,1.764,86,1.764]],["body/modules/AppModule.html",[3,0.392,4,0.392,5,0.343,7,0.252,12,1.954,15,0.036,16,1.125,17,2.662,20,0.555,30,0.343,39,2.662,40,0.09,41,2.485,44,1.081,50,0.017,51,0.024,52,0.017,54,2.11,64,1.299,72,1.942,75,1.942,77,1.942,79,1.942,81,1.942,85,1.748,86,3.522,87,1.748,88,1.954,89,3.966,90,3.966,91,2.56,92,2.56,93,2.56,94,2.56,95,2.56,96,3.487,97,2.56,98,1.954,99,3.086,100,4.204,101,3.086,102,4.204,103,3.086,104,4.204,105,3.487,106,3.086,107,4.204,108,3.086,109,4.204,110,3.086,111,4.204,112,3.086,113,3.086,114,4.204,115,3.086,116,4.204,117,3.086,118,4.204,119,3.086,120,4.204,121,3.086,122,2.56,123,4.204,124,1.748,125,1.748,126,4.204,127,3.086,128,1.428,129,1.185,130,3.086,131,3.086,132,3.086,133,3.086,134,3.086,135,3.086,136,3.086,137,4.204,138,1.575,139,2.56,140,1.081]],["title/classes/AppPage.html",[40,0.09,141,2.234]],["body/classes/AppPage.html",[3,0.556,4,0.556,5,0.486,9,0.486,15,0.035,16,0.787,30,0.486,32,1.159,40,0.127,50,0.025,51,0.029,52,0.025,62,2.024,66,2.024,138,2.232,141,3.77,142,2.232,143,3.627,144,1.049,145,5.849,146,5.849,147,0.946,148,4.373,149,1.049,150,5.041,151,4.373,152,4.373,153,4.373,154,4.373,155,3.136,156,4.373]],["title/components/BatteryLevelComponent.html",[53,0.83,72,1.092]],["body/components/BatteryLevelComponent.html",[3,0.186,4,0.186,5,0.163,6,0.292,7,0.195,9,0.163,10,0.972,11,0.606,14,0.806,15,0.036,16,0.824,20,0.263,23,1.23,25,0.972,27,1.283,30,0.338,31,1.515,32,0.527,33,1.486,40,0.042,44,1.357,45,1.007,46,1.107,48,0.828,49,1.107,50,0.008,51,0.013,52,0.008,53,0.81,54,0.512,55,1.107,56,0.746,57,0.746,59,0.746,60,2.339,61,1.758,63,1.221,64,0.615,65,1.221,66,1.107,67,0.746,68,1.977,69,0.746,70,0.748,71,0.746,72,1.23,73,1.478,74,0.746,75,0.512,76,0.746,77,0.512,78,0.746,79,0.512,80,0.746,81,0.512,82,0.676,83,0.746,84,0.746,122,2.519,124,0.828,125,0.828,128,0.676,129,0.561,144,0.477,147,1.001,149,0.876,155,2.178,157,1.72,158,4.021,159,1.048,160,1.107,161,1.924,162,1.924,163,2.223,164,1.924,165,2.633,166,4.158,167,3.037,168,3.401,169,3.037,170,3.037,171,2.982,172,2.982,173,2.519,174,3.933,175,3.933,176,2.519,177,2.982,178,2.982,179,2.982,180,3.037,181,2.178,182,2.519,183,1.924,184,3.037,185,3.037,186,2.982,187,3.037,188,3.037,189,1.72,190,2.519,191,2.178,192,2.178,193,3.037,194,2.519,195,1.54,196,2.519,197,3.037,198,3.037,199,1.82,200,3.212,201,3.037,202,3.037,203,3.037,204,1.405,205,2.452,206,1.924,207,1.924,208,1.23,209,3.511,210,1.515,211,2.223,212,2.223,213,2.223,214,1.515,215,1.515,216,1.486,217,0.766,218,0.926,219,1.929,220,2.452,221,1.462,222,0.67,223,1.462,224,1.405,225,1.462,226,1.515,227,1.132,228,1.462,229,1.406,230,1.462,231,1.462,232,1.462,233,1.515,234,1.462,235,1.625,236,1.551,237,1.462,238,1.462,239,2.78,240,1.462,241,1.462,242,3.511,243,1.462,244,1.462,245,1.462,246,1.462,247,2.633,248,1.462,249,1.462,250,0.746,251,1.462,252,1.462,253,1.212,254,1.462,255,1.048,256,1.462,257,0.828,258,0.926,259,2.103,260,1.221,261,1.355,262,1.355,263,0.828,264,0.828,265,1.462,266,1.048,267,0.828,268,0.828,269,0.926,270,0.828,271,0.926,272,1.985,273,1.462,274,1.462,275,1.462,276,1.212,277,1.462,278,1.462,279,1.048,280,2.178,281,1.985,282,1.716,283,2.223,284,1.462,285,1.462,286,1.462,287,1.462,288,1.462,289,1.462,290,1.462,291,1.462,292,1.462,293,1.462,294,1.462,295,1.515,296,0.926,297,0.926,298,0.512,299,0.926,300,1.212,301,0.676,302,1.212,303,2.393,304,0.676,305,1.462,306,1.462,307,1.462,308,1.985,309,1.462,310,1.462,311,1.462,312,1.462,313,1.462,314,1.462,315,1.462,316,1.462,317,1.212,318,1.462,319,1.462,320,1.462,321,1.462,322,1.462,323,1.462,324,1.462,325,1.462,326,1.462,327,1.048,328,1.462,329,0.828,330,1.462,331,3.037,332,1.462,333,1.462,334,2.393,335,1.985,336,1.462,337,1.462,338,1.462,339,1.462,340,1.462,341,1.462,342,0.828,343,1.462,344,1.462,345,1.462,346,1.462,347,1.462,348,1.462,349,0.926,350,0.926,351,2.393,352,0.828,353,2.393,354,2.393,355,2.393,356,2.393,357,1.462,358,1.462,359,1.462,360,1.462,361,1.462,362,1.462,363,2.393,364,0.926,365,3.037,366,1.462,367,1.551,368,1.462,369,1.462,370,2.393,371,1.462,372,1.462,373,0.746,374,1.462,375,1.048,376,0.926,377,0.926,378,1.462,379,1.462,380,0.926,381,0.926,382,1.462,383,0.926,384,0.926,385,0.926,386,1.462,387,1.462,388,1.462]],["title/injectables/BleService.html",[219,1.311,389,0.83]],["body/injectables/BleService.html",[3,0.43,4,0.43,5,0.377,7,0.276,9,0.377,10,1.432,11,0.893,14,0.894,15,0.036,16,0.901,20,0.609,23,1.942,30,0.377,32,1.104,35,2.534,40,0.098,50,0.019,51,0.025,52,0.019,61,2.046,62,1.567,70,0.901,128,1.567,129,1.3,144,0.893,147,1.06,149,1.106,195,1.62,199,1.717,204,1.432,217,1.084,219,1.884,222,0.986,224,1.432,227,1.464,250,2.721,298,1.187,301,2.07,352,2.534,389,1.193,390,1.729,391,2.429,392,2.558,393,5.01,394,3.711,395,4.421,396,4.421,397,3.387,398,4.474,399,4.474,400,4.722,401,3.387,402,3.387,403,3.387,404,3.387,405,3.387,406,3.387,407,2.809,408,2.809,409,3.387,410,1.918,411,1.918,412,2.809,413,2.429,414,2.809,415,2.809,416,1.729,417,3.387,418,2.809,419,2.809,420,4.474,421,2.429,422,3.387,423,3.387,424,2.809,425,2.809]],["title/injectables/BrowserWebBluetooth.html",[25,0.997,389,0.83]],["body/injectables/BrowserWebBluetooth.html",[3,0.517,4,0.517,5,0.453,6,1.139,7,0.465,9,0.453,10,1.611,11,0.812,14,0.657,15,0.036,16,0.732,20,0.732,25,1.611,30,0.453,32,0.897,33,1.562,35,2.304,40,0.118,50,0.023,51,0.028,52,0.023,61,2.097,70,0.732,129,1.562,138,2.078,144,1.004,147,0.983,149,0.812,150,4.174,217,1.748,222,0.897,389,1.341,390,2.078,392,2.789,421,3.609,426,3.376,427,5.032,428,5.032,429,5.032,430,5.463,431,4.069,432,4.069,433,4.069,434,4.069,435,3.376,436,4.069,437,4.069,438,4.069,439,3.376,440,4.069,441,4.069]],["title/injectables/ConsoleLoggerService.html",[27,0.91,389,0.83]],["body/injectables/ConsoleLoggerService.html",[0,1.589,3,0.48,4,0.48,5,0.42,6,1.109,7,0.453,9,0.42,11,1.053,14,0.852,15,0.036,16,0.679,20,0.679,27,1.403,28,1.747,30,0.587,40,0.139,50,0.021,51,0.027,52,0.021,62,2.221,70,0.95,144,0.958,147,0.95,149,1.053,160,2.221,222,1.163,224,1.876,227,1.542,229,2.221,364,3.04,389,1.407,390,1.927,411,2.718,442,2.39,443,3.443,444,3.785,445,3.775,446,4.204,447,3.785,448,3.775,449,3.785,450,3.775,451,2.989,452,2.707,453,2.707,454,2.707,455,2.707,456,2.707,457,2.707]],["title/components/DashboardComponent.html",[53,0.83,75,1.092]],["body/components/DashboardComponent.html",[3,0.388,4,0.388,5,0.34,7,0.34,9,0.34,15,0.036,16,0.55,20,0.55,30,0.34,40,0.089,50,0.017,51,0.023,52,0.017,53,1.268,54,1.071,55,1.932,56,1.56,57,1.56,59,1.56,60,2.94,61,2.267,63,1.56,64,1.286,65,2.132,66,1.932,67,1.56,68,2.61,69,1.56,70,0.751,71,1.56,72,1.071,73,2.002,74,1.56,75,1.792,76,1.56,77,1.071,78,1.56,79,1.071,80,1.56,81,1.071,82,2.201,83,1.56,84,1.56,147,0.55,155,2.191,157,1.73,163,3.237,168,2.191,171,2.191,172,2.191,177,3.411,178,2.995,179,3.411,181,2.995,186,2.995,189,1.73,190,2.535,191,2.191,192,2.191,208,1.936,217,1.522,236,1.56,439,2.535,458,2.535,459,5.112,460,4.176,461,4.757,462,4.176,463,4.176,464,3.056,465,3.464,466,4.176,467,5.525,468,5.525,469,3.129,470,5.525,471,5.525,472,2.995,473,3.056,474,3.056,475,3.056,476,2.535,477,3.056,478,3.666,479,3.963,480,3.056,481,3.056,482,3.056,483,3.056,484,1.935,485,2.191,486,3.056,487,3.056,488,4.176,489,5.112,490,3.464,491,3.056,492,4.757,493,3.056,494,3.056]],["title/classes/FakeBluetoothDevice.html",[40,0.09,495,1.59]],["body/classes/FakeBluetoothDevice.html",[3,0.335,4,0.335,5,0.293,6,1.128,7,0.461,9,0.293,10,1.535,11,0.752,13,1.347,14,0.851,15,0.036,30,0.533,32,1.057,40,0.139,50,0.015,51,0.021,52,0.015,70,0.977,140,0.925,142,1.347,144,0.752,147,0.999,149,0.877,195,1.285,199,2.084,204,0.845,208,1.777,216,1.447,217,0.845,222,0.831,224,1.407,227,1.727,235,1.221,236,1.347,259,1.587,298,1.681,304,1.744,329,1.494,342,2.134,367,2.244,373,1.347,392,2.589,410,2.49,416,2.244,469,1.494,495,1.924,496,1.494,497,2.49,498,3.037,499,3.037,500,3.126,501,2.872,502,2.639,503,2.639,504,2.134,505,2.639,506,3.769,507,3.037,508,2.639,509,2.784,510,3.34,511,3.34,512,2.639,513,2.639,514,2.639,515,3.037,516,2.387,517,2.387,518,2.387,519,1.671,520,2.387,521,1.671,522,1.671,523,2.387,524,1.347,525,1.587,526,1.671,527,2.387,528,1.671,529,1.671,530,1.671,531,1.671,532,1.671,533,1.347,534,1.494,535,1.671,536,1.671,537,1.671,538,1.671,539,1.347,540,2.387,541,1.494,542,3.037,543,2.784,544,1.671,545,1.671,546,2.387,547,1.671,548,1.671,549,1.671,550,1.671]],["title/classes/FakeBluetoothRemoteGATTCharacteristic.html",[40,0.09,539,1.59]],["body/classes/FakeBluetoothRemoteGATTCharacteristic.html",[3,0.327,4,0.327,5,0.286,6,1.138,7,0.465,9,0.286,10,1.725,11,0.865,13,1.314,14,0.87,15,0.036,30,0.527,32,1.045,40,0.138,50,0.014,51,0.021,52,0.014,70,0.853,140,0.902,142,1.314,144,0.739,147,1.011,149,0.946,195,1.528,199,1.664,204,0.824,208,1.297,216,1.421,217,0.824,222,0.956,224,1.388,227,1.575,235,1.191,236,1.314,259,1.558,298,1.998,304,1.713,329,1.458,342,2.096,367,2.213,373,1.314,392,2.751,410,2.455,416,2.213,469,1.458,495,1.314,496,1.458,497,1.458,498,1.63,499,3.002,500,3.071,501,2.844,504,1.458,507,2.745,509,2.745,510,3.312,511,3.312,515,3.002,516,2.344,517,2.344,518,2.344,519,1.63,520,2.344,521,1.63,522,1.63,523,2.344,524,1.314,525,1.558,526,1.63,527,2.344,528,1.63,529,1.63,530,1.63,531,1.63,532,1.63,533,1.314,534,1.458,535,1.63,536,1.63,537,1.63,538,1.63,539,1.89,540,3.181,541,2.455,542,3.492,543,3.002,544,2.344,545,1.63,546,2.344,547,3.002,548,1.63,549,2.344,550,1.63,551,3.702,552,2.574,553,2.574,554,2.574,555,2.574,556,2.574,557,2.574,558,2.574,559,2.574,560,2.574,561,2.574]],["title/classes/FakeBluetoothRemoteGATTServer.html",[40,0.09,524,1.59]],["body/classes/FakeBluetoothRemoteGATTServer.html",[3,0.346,4,0.346,5,0.303,6,1.117,7,0.456,9,0.303,10,1.557,11,0.769,13,1.39,14,0.86,15,0.036,30,0.541,32,1.072,40,0.141,50,0.015,51,0.022,52,0.015,70,0.805,140,0.954,142,1.39,144,0.769,147,0.986,149,0.893,195,1.307,199,2.103,204,1.234,208,1.799,216,1.97,217,0.872,222,0.85,224,0.872,227,1.5,235,1.26,236,1.39,259,1.622,298,1.704,304,1.783,329,2.907,342,2.182,367,2.284,373,2.284,392,2.284,410,2.533,416,2.284,469,2.754,495,1.39,496,1.542,497,1.542,498,1.725,499,2.441,501,2.182,504,1.542,507,2.833,509,2.441,510,3.08,511,3.08,515,3.08,516,2.441,517,2.441,518,2.441,519,1.725,520,2.441,521,1.725,522,1.725,523,2.441,524,1.968,525,1.883,526,1.725,527,2.441,528,1.725,529,2.441,530,2.833,531,1.725,532,1.725,533,1.39,534,1.542,535,1.725,536,1.725,537,1.725,538,1.725,539,1.39,540,2.441,541,1.542,542,3.08,543,2.833,544,1.725,545,1.725,546,2.441,547,1.725,548,1.725,549,1.725,550,1.725,562,3.854,563,2.259,564,3.208,565,3.854,566,3.854,567,2.723,568,2.723,569,2.723]],["title/classes/FakeBluetoothRemoteGATTService.html",[40,0.09,533,1.59]],["body/classes/FakeBluetoothRemoteGATTService.html",[3,0.366,4,0.366,5,0.321,6,1.046,7,0.427,9,0.321,10,1.596,11,0.8,13,1.471,14,0.465,15,0.036,30,0.555,32,1.099,40,0.145,50,0.016,51,0.023,52,0.016,70,0.83,140,1.01,142,1.471,144,0.8,147,0.897,149,0.575,195,1.172,199,2.137,204,0.922,208,1.405,216,2.012,217,0.922,222,0.884,227,1.532,236,1.471,259,1.688,298,1.747,301,1.334,304,1.856,329,1.632,342,2.271,367,2.355,373,1.471,392,2.355,410,2.612,416,2.355,469,1.632,495,1.471,496,1.632,497,1.632,498,1.825,499,2.54,501,2.271,504,1.632,507,2.921,509,2.54,510,3.158,511,3.158,515,3.158,516,2.54,517,2.54,518,2.54,519,1.825,520,2.54,521,1.825,522,1.825,523,2.54,524,1.471,525,1.688,526,1.825,527,2.54,528,1.825,529,1.825,530,1.825,531,1.825,532,1.825,533,2.047,534,2.968,535,1.825,536,2.54,537,2.921,538,1.825,539,1.471,540,2.54,541,1.632,542,3.158,543,2.921,544,1.825,545,1.825,546,2.54,547,1.825,548,1.825,549,1.825,550,1.825,563,2.391,570,4.01,571,2.882,572,4.01,573,2.882]],["title/components/HumidityComponent.html",[53,0.83,77,1.092]],["body/components/HumidityComponent.html",[3,0.264,4,0.264,5,0.231,7,0.169,9,0.231,10,1.011,11,0.763,14,0.874,15,0.036,16,0.871,20,0.374,23,1.497,25,1.224,27,1.117,30,0.425,32,0.458,33,1.64,40,0.06,42,1.613,44,1.61,45,1.33,46,1.462,49,1.462,50,0.012,51,0.018,52,0.012,53,1.019,54,0.728,55,1.462,56,1.061,57,1.061,59,1.061,60,2.646,61,1.99,63,1.613,64,0.875,65,1.613,66,1.462,67,1.061,68,2.181,69,1.061,70,0.827,71,1.061,72,0.728,73,0.875,74,1.061,75,0.728,76,1.061,77,1.497,78,1.061,79,0.728,80,1.061,81,0.728,82,0.962,83,1.061,84,1.061,124,1.177,125,1.177,128,0.962,129,0.798,140,1.34,144,0.631,147,1.044,149,1.004,157,2.165,160,1.462,161,2.421,162,2.421,164,2.421,165,2.421,183,2.421,189,2.165,195,1.248,199,1.858,204,1.549,205,2.91,206,2.421,207,2.421,208,1.497,210,2.001,211,2.705,212,2.705,213,2.705,214,2.001,215,2.001,216,1.468,217,1.011,218,1.316,219,2.182,220,2.91,222,0.843,224,1.61,226,2.001,227,1.117,229,0.962,233,2.001,239,2.91,247,1.316,250,1.061,257,1.177,258,1.316,259,1.798,260,1.613,261,1.789,262,1.789,263,1.177,264,1.177,267,1.177,268,1.177,269,1.316,270,1.177,271,1.316,295,1.316,296,1.316,297,1.316,298,0.728,299,1.316,301,0.962,349,1.316,350,1.316,352,2.165,376,1.316,377,1.316,380,1.316,381,1.316,383,2.001,384,1.316,385,1.316,412,1.724,413,1.49,414,2.621,472,2.742,476,1.724,478,2.742,484,1.316,485,1.49,525,0.875,574,1.49,575,3.543,576,3.171,577,3.171,578,3.171,579,3.171,580,3.543,581,2.078,582,2.078,583,2.078,584,2.078,585,2.078,586,2.078,587,2.078,588,2.078,589,3.171,590,2.078,591,3.171,592,1.724,593,2.621,594,2.078,595,3.543,596,2.078,597,2.078,598,2.078,599,2.078,600,2.078,601,2.078,602,1.724,603,1.49,604,1.724,605,2.266,606,2.266,607,2.266,608,2.266,609,2.078,610,1.724,611,2.266,612,1.49,613,3.16,614,1.724,615,1.724,616,1.724,617,2.078,618,1.724,619,1.724,620,1.724,621,1.49,622,3.171,623,1.724,624,2.621,625,1.724,626,1.724,627,1.724,628,1.724,629,1.724,630,1.724,631,1.724,632,1.724,633,1.724,634,1.724,635,1.724,636,1.724,637,2.621,638,1.49,639,1.724,640,1.724,641,1.724,642,1.49]],["title/interfaces/Logger.html",[0,1.311,451,1.764]],["body/interfaces/Logger.html",[0,1.57,2,2.675,3,0.474,4,0.474,5,0.415,6,1.104,7,0.451,9,0.415,11,1.047,14,0.847,15,0.036,16,0.671,20,0.671,27,1.09,28,1.726,30,0.584,40,0.138,50,0.021,51,0.027,52,0.021,62,2.204,70,0.944,144,0.951,147,0.944,149,1.047,160,2.204,222,1.157,224,1.87,227,1.775,229,2.204,364,3.017,389,1.399,411,2.698,442,2.362,443,3.416,444,3.416,446,4.191,447,3.416,449,3.416,451,3.132,452,3.416,453,3.416,454,3.416,455,2.675,456,2.675,457,2.675,643,3.73,644,3.73,645,3.73]],["title/injectables/NoLoggerService.html",[28,1.442,389,0.83]],["body/injectables/NoLoggerService.html",[0,1.589,3,0.48,4,0.48,5,0.42,6,1.109,7,0.453,9,0.42,11,1.053,14,0.852,15,0.036,16,0.679,20,0.679,27,1.103,28,2.221,30,0.587,40,0.139,50,0.021,51,0.027,52,0.021,62,2.221,70,0.95,144,0.958,147,0.95,149,1.053,160,2.221,222,1.163,224,1.876,227,1.542,229,2.221,364,3.04,389,1.407,390,1.927,411,2.718,442,2.39,443,3.443,444,3.785,446,4.204,447,3.785,449,3.785,451,2.989,452,2.707,453,2.707,454,2.707,455,2.707,456,2.707,457,2.707,646,3.775,647,3.775,648,3.775]],["title/injectables/ServerWebBluetooth.html",[389,0.83,649,2.234]],["body/injectables/ServerWebBluetooth.html",[3,0.568,4,0.568,5,0.497,6,1.063,7,0.434,9,0.497,15,0.036,16,0.804,20,0.804,30,0.497,32,0.985,40,0.13,42,2.904,50,0.025,51,0.03,52,0.025,144,1.063,147,0.804,149,0.891,270,3.336,279,3.203,389,1.419,390,2.28,649,3.819,650,3.705,651,4.466,652,4.466,653,4.466]],["title/components/StepCounterComponent.html",[53,0.83,79,1.092]],["body/components/StepCounterComponent.html",[3,0.259,4,0.259,5,0.226,7,0.166,9,0.226,10,0.995,11,0.753,14,0.869,15,0.036,16,0.819,20,0.366,23,1.481,25,1.208,27,1.103,30,0.42,32,0.686,33,1.194,40,0.059,44,1.595,45,1.309,46,1.439,49,1.439,50,0.011,51,0.017,52,0.011,53,1.006,54,0.713,55,1.439,56,1.039,57,1.039,59,1.039,60,2.629,61,1.977,63,1.588,64,0.857,65,1.588,66,1.439,67,1.039,68,2.157,69,1.039,70,0.819,71,1.039,72,0.713,73,0.857,74,1.039,75,0.713,76,1.039,77,0.713,78,1.039,79,1.481,80,1.039,81,0.713,82,0.942,83,1.039,84,1.039,124,1.153,125,1.153,128,0.942,129,0.781,140,1.09,144,0.621,147,1.012,149,0.958,157,2.137,160,1.439,161,2.39,162,2.39,164,2.39,165,3.04,168,2.707,171,2.707,172,2.707,173,3.131,174,3.982,175,3.982,176,3.131,177,3.442,178,3.442,179,2.707,181,2.707,182,3.131,183,3.04,186,2.707,189,2.718,191,2.707,192,2.707,194,3.131,195,1.574,196,3.131,199,1.842,204,1.536,205,2.883,206,2.39,207,2.39,208,1.481,210,1.97,211,2.676,212,2.676,213,2.676,214,1.97,215,1.97,216,1.449,217,0.995,218,1.289,219,2.168,220,2.883,222,0.832,224,1.536,226,1.97,227,1.103,229,1.747,233,1.97,235,0.942,239,2.883,247,1.289,250,1.039,257,1.153,258,1.289,259,1.917,260,1.588,261,1.761,262,1.761,263,1.153,264,1.153,267,1.153,268,1.153,269,1.289,270,1.153,271,1.289,295,1.289,296,1.289,297,1.289,298,0.713,301,0.942,349,1.289,350,1.289,352,2.137,367,1.039,375,2.23,376,1.289,377,1.289,380,1.289,381,1.289,383,1.97,384,1.289,385,1.289,479,2.23,564,2.23,605,2.23,606,2.23,607,2.23,608,2.23,611,2.23,612,1.46,621,1.46,638,1.46,642,1.46,654,1.46,655,3.11,656,3.774,657,3.774,658,3.774,659,3.774,660,3.774,661,2.035,662,2.035,663,2.035,664,2.035,665,2.035,666,2.035,667,2.035,668,2.035,669,2.035,670,2.035,671,2.035,672,2.035,673,2.035,674,3.774,675,2.035,676,3.774,677,2.035,678,2.035,679,2.035,680,2.035,681,2.035]],["title/components/TemperatureComponent.html",[53,0.83,81,1.092]],["body/components/TemperatureComponent.html",[3,0.262,4,0.262,5,0.23,7,0.168,9,0.23,10,1.006,11,0.76,14,0.872,15,0.036,16,0.868,20,0.371,23,1.492,25,1.219,27,1.113,30,0.423,32,0.693,33,1.634,40,0.06,42,1.605,44,1.606,45,1.324,46,1.455,49,1.455,50,0.012,51,0.018,52,0.012,53,1.015,54,0.723,55,1.455,56,1.054,57,1.054,59,1.054,60,2.641,61,1.986,63,1.605,64,0.869,65,1.605,66,1.455,67,1.054,68,2.173,69,1.054,70,0.824,71,1.054,72,0.723,73,0.869,74,1.054,75,0.723,76,1.054,77,0.723,78,1.054,79,0.723,80,1.054,81,1.492,82,1.97,83,1.054,84,1.054,124,1.169,125,1.169,128,0.955,129,0.792,140,1.334,144,0.627,147,1.043,149,1.002,157,2.156,160,1.455,161,2.411,162,2.411,164,2.411,165,2.411,183,2.411,189,2.156,195,1.244,199,1.853,204,1.545,205,2.901,206,2.411,207,2.411,208,1.492,210,1.991,211,2.696,212,2.696,213,2.696,214,1.991,215,1.991,216,1.462,217,1.006,218,1.307,219,2.178,220,2.901,222,0.839,224,1.606,226,1.991,227,1.113,229,1.762,233,1.991,239,2.901,247,1.307,250,1.054,257,1.169,258,1.307,259,2.032,260,1.605,261,1.78,262,1.78,263,1.169,264,1.169,267,1.169,268,1.169,269,1.307,270,1.169,271,1.307,295,1.307,296,1.307,297,1.307,298,0.723,299,1.307,301,0.955,349,1.307,350,1.307,352,2.156,375,2.255,376,1.307,377,1.307,380,1.307,381,1.307,383,1.991,384,1.307,385,1.307,478,2.731,484,1.307,485,1.48,525,0.869,575,3.531,576,3.158,577,3.158,578,3.158,579,3.158,580,3.531,589,3.158,591,3.158,592,1.712,593,2.608,595,3.531,602,1.712,603,1.48,604,1.712,605,2.255,606,2.255,607,2.255,608,2.255,610,1.712,611,2.255,612,1.48,614,1.712,615,1.712,616,1.712,618,1.712,619,1.712,620,1.712,621,1.48,622,3.158,623,1.712,624,2.608,625,1.712,626,1.712,627,1.712,628,1.712,629,1.712,630,1.712,631,1.712,632,1.712,633,1.712,634,1.712,635,1.712,636,1.712,637,2.608,638,1.48,639,1.712,640,1.712,641,1.712,642,1.48,682,1.48,683,2.064,684,2.064,685,2.064,686,2.064,687,2.064,688,2.064,689,2.064,690,2.064,691,2.064,692,2.064,693,2.064,694,2.064,695,2.064,696,2.064,697,2.064,698,2.064,699,2.064,700,3.144,701,3.144,702,2.064,703,2.064]],["title/modules/WebBluetoothModule.html",[41,1.442,85,1.764]],["body/modules/WebBluetoothModule.html",[0,1.51,1,3.575,3,0.456,4,0.456,5,0.399,6,0.927,7,0.379,8,2.272,11,0.927,12,2.272,13,1.831,14,0.579,15,0.036,16,1.016,17,3.263,18,4.274,19,2.976,20,0.645,21,3.854,22,2.573,23,1.628,24,2.976,25,1.807,26,2.976,27,1.506,28,2.15,29,2.976,30,0.628,31,3.263,32,1.244,33,2.092,34,2.573,35,2.918,36,2.976,37,3.263,38,2.976,39,2.272,40,0.104,41,2.384,42,2.372,43,3.854,44,1.257,45,2.169,46,2.15,47,2.976,48,2.031,49,1.66,50,0.02,51,0.026,52,0.02,70,0.645,87,2.031,144,0.716,147,0.645,149,0.716,195,1.048,222,0.791,235,1.66,704,3.587,705,3.587]],["title/coverage.html",[706,3.509]],["body/coverage.html",[0,1.631,1,1.737,5,0.305,6,1.209,7,0.494,8,3.09,14,0.443,15,0.036,23,0.961,25,1.24,27,0.802,28,1.269,31,2.844,33,1.053,37,1.737,40,0.149,44,1.71,48,1.553,50,0.015,51,0.022,52,0.015,53,1.424,54,0.961,58,2.275,72,0.961,75,0.961,77,0.961,79,0.961,81,0.961,141,1.967,143,2.275,158,3.938,159,3.938,219,2.167,260,2.491,266,2.778,280,1.967,283,1.737,389,1.424,391,1.967,415,5.125,426,2.275,442,2.844,451,1.553,458,2.275,479,4.574,495,1.4,496,2.763,524,1.4,533,1.4,539,1.4,574,3.499,649,1.967,650,2.275,654,3.499,682,3.499,706,2.275,707,1.967,708,2.743,709,2.743,710,2.743,711,4.491,712,6.241,713,2.275,714,2.743,715,2.743,716,3.213,717,3.213,718,2.275,719,2.275,720,4.88,721,3.874,722,2.743,723,2.743,724,2.743,725,2.743,726,3.874,727,2.743,728,2.275,729,3.213,730,2.275,731,3.213,732,2.275,733,2.743,734,2.743]],["title/dependencies.html",[88,2.369,735,2.166]],["body/dependencies.html",[15,0.036,20,0.75,22,2.99,50,0.023,51,0.029,52,0.023,88,2.64,105,4.236,129,1.6,138,2.607,253,3.458,255,2.99,257,2.361,272,3.458,276,3.458,282,2.99,283,2.64,413,2.99,603,2.99,736,4.169,737,4.169,738,4.169,739,4.169,740,6.229,741,4.169,742,4.169,743,4.169,744,4.169,745,4.169,746,4.169,747,4.169,748,4.169,749,4.169,750,3.458,751,4.169,752,4.169,753,4.169,754,4.169,755,4.169,756,4.169,757,4.169,758,4.169,759,4.169,760,4.169,761,4.169,762,4.169]],["title/miscellaneous/functions.html",[763,1.333,764,3.103]],["body/miscellaneous/functions.html",[6,0.938,7,0.383,8,2.977,9,0.523,11,0.938,15,0.033,25,1.86,34,3.372,35,2.662,37,3.681,48,3.108,50,0.026,51,0.031,52,0.026,70,0.846,222,1.036,763,2.4,764,3.9,765,5.812]],["title/index.html",[9,0.29,766,1.873,767,1.873]],["body/index.html",[7,0.404,12,1.401,15,0.036,16,0.972,17,2.098,20,0.715,23,1.737,30,0.442,32,1.231,39,1.401,40,0.115,41,1.533,42,1.691,45,0.932,50,0.012,51,0.019,52,0.012,61,1.272,62,1.533,73,1.672,85,1.876,86,1.253,98,1.401,128,2.041,129,2.028,138,1.13,139,1.835,140,1.161,163,2.515,195,1.502,200,1.835,204,1.691,208,0.775,216,1.902,250,1.691,255,1.587,267,1.253,268,1.253,298,1.655,299,1.401,300,2.748,301,2.185,302,2.748,304,1.024,327,2.376,373,1.691,389,1.175,395,2.748,396,3.658,407,2.748,408,2.748,411,1.876,416,1.691,418,2.748,419,1.835,421,2.376,424,1.835,425,2.748,465,1.835,484,2.098,490,1.835,497,1.253,501,1.253,504,1.253,525,0.932,534,1.253,541,1.253,707,2.848,735,1.835,750,2.748,766,1.587,767,1.587,768,2.213,769,3.313,770,3.313,771,2.213,772,2.213,773,2.213,774,2.213,775,2.213,776,2.213,777,2.213,778,2.213,779,2.213,780,3.917,781,3.313,782,2.213,783,3.313,784,4.41,785,3.313,786,3.313,787,3.313,788,3.313,789,4.956,790,5.138,791,3.313,792,3.313,793,2.213,794,3.313,795,2.213,796,2.213,797,2.213,798,3.313,799,2.213,800,2.213,801,2.213,802,2.213,803,2.213,804,2.213,805,3.313,806,2.213,807,3.313,808,2.213,809,2.213,810,2.213,811,2.213,812,2.748,813,2.213,814,2.213,815,2.213,816,2.213,817,3.313,818,2.213,819,2.213,820,2.213,821,2.213,822,3.313,823,1.835,824,2.213,825,2.213,826,2.213,827,2.213,828,2.213,829,2.213,830,2.213,831,2.213,832,2.213,833,2.213,834,2.213,835,2.213,836,1.835,837,3.313,838,2.213,839,2.213,840,3.313,841,3.313,842,2.213,843,2.213,844,2.213,845,2.213,846,2.213,847,3.313,848,2.213,849,2.213,850,2.213,851,2.213,852,2.213,853,2.213,854,2.213,855,2.213,856,2.213,857,2.213,858,2.213,859,2.213,860,2.376,861,2.748,862,3.294,863,1.835,864,1.835,865,1.835,866,1.835,867,2.748,868,1.835,869,1.835,870,1.835,871,1.835,872,1.835,873,2.748,874,4.482,875,1.835,876,1.835,877,1.835,878,3.294,879,1.835,880,2.748,881,1.835,882,1.835,883,1.835,884,1.835,885,1.835,886,1.835,887,1.835,888,1.835,889,1.835,890,2.748,891,1.835,892,1.835,893,1.835,894,1.835,895,1.835,896,1.835,897,2.748,898,2.748,899,1.835,900,1.835,901,1.835,902,1.835,903,1.835,904,1.835,905,1.835,906,1.835,907,1.835,908,1.835,909,1.835,910,1.835,911,1.835,912,1.835,913,1.835,914,1.835,915,1.835,916,1.835,917,1.835,918,1.835,919,1.835,920,1.835,921,1.835,922,1.835,923,1.835,924,1.835,925,1.835,926,1.835,927,1.835]],["title/license.html",[766,1.873,767,1.873,860,1.873]],["body/license.html",[15,0.028,50,0.022,51,0.028,52,0.022,98,2.528,304,1.847,327,2.863,707,2.863,780,4.124,812,3.311,860,2.863,861,4.124,862,4.492,863,3.311,864,3.311,865,3.311,866,3.311,867,4.124,868,3.311,869,3.311,870,3.311,871,3.311,872,3.311,873,4.124,874,5.098,875,3.311,876,3.311,877,3.311,878,4.492,879,3.311,880,4.124,881,3.311,882,3.311,883,3.311,884,3.311,885,3.311,886,3.311,887,3.311,888,3.311,889,3.311,890,4.124,891,3.311,892,3.311,893,3.311,894,3.311,895,3.311,896,3.311,897,4.124,898,4.124,899,3.311,900,3.311,901,3.311,902,3.311,903,3.311,904,3.311,905,3.311,906,3.311,907,3.311,908,3.311,909,3.311,910,3.311,911,3.311,912,3.311,913,3.311,914,3.311,915,3.311,916,3.311,917,3.311,918,3.311,919,3.311,920,3.311,921,3.311,922,3.311,923,3.311,924,3.311,925,3.311,926,3.311,927,3.311]],["title/modules.html",[87,2.396]],["body/modules.html",[15,0.031,41,2.249,50,0.027,51,0.031,52,0.027,86,2.752,87,2.752,138,2.481,435,4.031,928,4.86,929,5.594,930,4.86,931,4.031]],["title/overview.html",[932,3.509]],["body/overview.html",[2,2.977,15,0.035,41,2.55,44,1.454,50,0.023,51,0.029,52,0.023,54,2.131,55,1.921,64,1.747,72,1.931,75,1.931,77,1.931,79,1.931,81,1.931,85,2.35,86,3.607,87,2.35,88,2.628,89,3.443,90,3.443,91,3.443,92,3.443,93,3.443,94,3.443,95,3.443,96,4.225,97,3.443,98,2.628,142,2.119,390,2.119,823,4.225,836,3.443,932,3.443,933,5.093]],["title/miscellaneous/typealiases.html",[763,1.333,934,3.741]],["body/miscellaneous/typealiases.html",[6,0.95,7,0.388,9,0.529,14,0.943,15,0.031,50,0.027,51,0.031,52,0.027,391,3.414,400,4.586,564,3.965,713,3.949,763,2.431,935,4.761,936,5.528,937,4.761,938,4.761]],["title/miscellaneous/variables.html",[763,1.333,939,3.103]],["body/miscellaneous/variables.html",[6,0.31,7,0.127,9,0.173,14,0.803,15,0.036,23,1.818,25,1.501,27,1.371,33,1.86,44,1.643,45,1.974,46,2.17,49,2.17,50,0.009,51,0.014,52,0.009,73,0.654,82,0.719,140,0.544,158,1.114,159,3.23,163,0.984,195,1.632,204,1.787,219,2.307,235,2.584,260,2.649,261,2.656,262,2.656,263,2.061,264,2.061,266,2.61,279,2.271,280,2.271,281,1.289,282,1.114,283,2.006,308,1.289,317,1.289,335,4.128,394,1.289,472,1.114,525,0.654,574,1.114,654,1.114,682,1.114,716,1.289,717,2.627,718,2.086,719,2.086,728,1.289,729,3.019,730,1.289,731,1.289,732,2.086,763,0.793,931,2.627,939,1.289,940,4.278,941,3.167,942,3.167,943,3.167,944,1.553,945,1.553,946,2.514,947,2.514,948,2.514,949,1.553,950,1.553,951,1.553,952,1.553,953,6.263,954,6.263,955,6.263,956,6.263,957,1.553,958,1.553,959,1.553,960,1.553,961,1.553,962,1.553,963,1.553,964,1.553,965,1.553,966,1.553,967,1.553,968,1.553,969,1.553,970,1.553,971,1.553,972,1.553,973,1.553,974,1.553,975,1.553,976,1.553,977,1.553,978,1.553,979,4.69,980,1.553,981,4.69,982,1.553,983,1.553,984,1.553,985,1.553,986,1.553,987,1.553,988,1.553,989,1.553,990,1.553,991,1.553,992,3.167,993,3.167,994,1.553,995,1.553,996,1.553,997,1.553,998,1.553,999,1.553,1000,1.553,1001,1.553,1002,1.553,1003,1.553,1004,1.553,1005,1.553,1006,1.553,1007,1.553,1008,1.553,1009,1.553,1010,1.553,1011,1.553,1012,1.553,1013,1.553,1014,1.553,1015,1.553,1016,1.553,1017,1.553,1018,1.553,1019,1.553,1020,1.553,1021,1.553,1022,1.553,1023,1.553,1024,1.553,1025,1.553,1026,1.553,1027,1.553,1028,1.553,1029,1.553,1030,1.553,1031,1.553,1032,1.553,1033,1.553,1034,1.553,1035,1.553,1036,1.553,1037,1.553,1038,1.553,1039,1.553,1040,1.553,1041,1.553,1042,1.553,1043,1.553,1044,1.553,1045,1.553,1046,1.553,1047,1.553,1048,1.553,1049,1.553]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":479,"title":{},"body":{"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{},"coverage.html":{}}}],["0.0.6",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["0.11.10",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":196,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["000000",{"_index":628,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["000000000000",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0451",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":484,"title":{},"body":{"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["1.1.0",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["1.35.0",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["1.9.1",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["1.9.2",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":703,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["10px",{"_index":492,"title":{},"body":{"components/DashboardComponent.html":{}}}],["11.2.0",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["112px",{"_index":656,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["120px",{"_index":182,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["14",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":489,"title":{},"body":{"components/DashboardComponent.html":{}}}],["16px",{"_index":576,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["17",{"_index":630,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["2",{"_index":823,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.0.0",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["2.a",{"_index":779,"title":{},"body":{"index.html":{}}}],["2.b",{"_index":799,"title":{},"body":{"index.html":{}}}],["2017",{"_index":864,"title":{},"body":{"index.html":{},"license.html":{}}}],["20px",{"_index":487,"title":{},"body":{"components/DashboardComponent.html":{}}}],["21/31",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["214px",{"_index":657,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["222px",{"_index":180,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["24px",{"_index":185,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["255px",{"_index":193,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["258px",{"_index":659,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["3",{"_index":826,"title":{},"body":{"index.html":{}}}],["32px",{"_index":494,"title":{},"body":{"components/DashboardComponent.html":{}}}],["38px",{"_index":194,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["4",{"_index":831,"title":{},"body":{"index.html":{}}}],["4000",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40px",{"_index":475,"title":{},"body":{"components/DashboardComponent.html":{}}}],["4933",{"_index":606,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["5",{"_index":836,"title":{},"body":{"index.html":{},"overview.html":{}}}],["52ffa9740042",{"_index":608,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["55px",{"_index":658,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["5em",{"_index":176,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["5px",{"_index":190,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{}}}],["6",{"_index":933,"title":{},"body":{"overview.html":{}}}],["6.6.3",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["67",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["700px",{"_index":477,"title":{},"body":{"components/DashboardComponent.html":{}}}],["90px",{"_index":188,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["9b10",{"_index":607,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["9b35",{"_index":605,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["__register__",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_config",{"_index":393,"title":{},"body":{"injectables/BleService.html":{}}}],["abandonware/noble",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":896,"title":{},"body":{"index.html":{},"license.html":{}}}],["absolute",{"_index":178,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["abstract",{"_index":809,"title":{},"body":{"index.html":{}}}],["accelerometer",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acceptalldevices",{"_index":820,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":215,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["action",{"_index":921,"title":{},"body":{"index.html":{},"license.html":{}}}],["actual_component",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["ad",{"_index":286,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["addeventlistener",{"_index":500,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["addeventlistener(type",{"_index":509,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["address",{"_index":317,"title":{},"body":{"components/BatteryLevelComponent.html":{},"miscellaneous/variables.html":{}}}],["advanced",{"_index":800,"title":{},"body":{"index.html":{}}}],["advertised",{"_index":328,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["aliases",{"_index":935,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":172,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["and/or",{"_index":888,"title":{},"body":{"index.html":{},"license.html":{}}}],["angular",{"_index":465,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common",{"_index":22,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":253,"title":{},"body":{"components/BatteryLevelComponent.html":{},"dependencies.html":{}}}],["angular/core",{"_index":20,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["angular/material/toolbar",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["annotated",{"_index":785,"title":{},"body":{"index.html":{}}}],["api",{"_index":837,"title":{},"body":{"index.html":{}}}],["app",{"_index":852,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":54,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":86,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":141,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["args",{"_index":446,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["arising",{"_index":925,"title":{},"body":{"index.html":{},"license.html":{}}}],["ask",{"_index":832,"title":{},"body":{"index.html":{}}}],["associated",{"_index":875,"title":{},"body":{"index.html":{},"license.html":{}}}],["authors",{"_index":914,"title":{},"body":{"index.html":{},"license.html":{}}}],["auto",{"_index":480,"title":{},"body":{"components/DashboardComponent.html":{}}}],["available",{"_index":931,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["awboptions",{"_index":1,"title":{"interfaces/AWBOptions.html":{}},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["b",{"_index":261,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["b000",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["barometer",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["battery",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["battery_charging_full",{"_index":197,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["battery_level",{"_index":302,"title":{},"body":{"components/BatteryLevelComponent.html":{},"index.html":{}}}],["battery_service",{"_index":300,"title":{},"body":{"components/BatteryLevelComponent.html":{},"index.html":{}}}],["batterylevelcomponent",{"_index":72,"title":{"components/BatteryLevelComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["batterylevelservice",{"_index":788,"title":{},"body":{"index.html":{}}}],["batterylevelservice.gatt_characteristic_battery_level",{"_index":830,"title":{},"body":{"index.html":{}}}],["batterylevelservice.gatt_primary_service",{"_index":822,"title":{},"body":{"index.html":{}}}],["beacon",{"_index":282,"title":{},"body":{"components/BatteryLevelComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["beaconscanner",{"_index":280,"title":{},"body":{"components/BatteryLevelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["beaconscanner({'noble",{"_index":284,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["becons",{"_index":306,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["ble",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["ble.service",{"_index":258,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["blecore",{"_index":260,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bleservice",{"_index":219,"title":{"injectables/BleService.html":{}},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bleservice(b",{"_index":264,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["block",{"_index":183,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["blog",{"_index":850,"title":{},"body":{"index.html":{}}}],["bluetooth",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"dependencies.html":{},"index.html":{}}}],["bluetooth.service",{"_index":24,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["bluetooth/src/lib/bluetooth.module.ts",{"_index":8,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["bluetooth/src/lib/bluetooth.module.ts:32",{"_index":705,"title":{},"body":{"modules/WebBluetoothModule.html":{}}}],["bluetooth/src/lib/bluetooth.service.ts",{"_index":713,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["bluetooth/src/lib/lang/uuids/ti",{"_index":716,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bluetooth/src/lib/logger.service.ts",{"_index":442,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"coverage.html":{}}}],["bluetooth/src/lib/logger.service.ts:13",{"_index":448,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:16",{"_index":445,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:19",{"_index":450,"title":{},"body":{"injectables/ConsoleLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:28",{"_index":647,"title":{},"body":{"injectables/NoLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:29",{"_index":646,"title":{},"body":{"injectables/NoLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:30",{"_index":648,"title":{},"body":{"injectables/NoLoggerService.html":{}}}],["bluetooth/src/lib/logger.service.ts:4",{"_index":644,"title":{},"body":{"interfaces/Logger.html":{}}}],["bluetooth/src/lib/logger.service.ts:5",{"_index":643,"title":{},"body":{"interfaces/Logger.html":{}}}],["bluetooth/src/lib/logger.service.ts:6",{"_index":645,"title":{},"body":{"interfaces/Logger.html":{}}}],["bluetooth/src/lib/platform/browser.ts",{"_index":426,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"coverage.html":{}}}],["bluetooth/src/lib/platform/browser.ts:14",{"_index":431,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["bluetooth/src/lib/platform/browser.ts:5",{"_index":428,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["bluetooth/src/lib/platform/server.ts",{"_index":650,"title":{},"body":{"injectables/ServerWebBluetooth.html":{},"coverage.html":{}}}],["bluetooth/src/lib/platform/server.ts:5",{"_index":651,"title":{},"body":{"injectables/ServerWebBluetooth.html":{}}}],["bluetooth/src/lib/test.utils.ts",{"_index":496,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"coverage.html":{}}}],["bluetooth/src/lib/test.utils.ts:103",{"_index":560,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:12",{"_index":503,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:14",{"_index":506,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:17",{"_index":512,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:24",{"_index":514,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:29",{"_index":513,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:39",{"_index":565,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["bluetooth/src/lib/test.utils.ts:41",{"_index":566,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["bluetooth/src/lib/test.utils.ts:45",{"_index":567,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["bluetooth/src/lib/test.utils.ts:50",{"_index":569,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["bluetooth/src/lib/test.utils.ts:54",{"_index":568,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["bluetooth/src/lib/test.utils.ts:60",{"_index":571,"title":{},"body":{"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetooth/src/lib/test.utils.ts:61",{"_index":572,"title":{},"body":{"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetooth/src/lib/test.utils.ts:65",{"_index":573,"title":{},"body":{"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetooth/src/lib/test.utils.ts:7",{"_index":505,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:71",{"_index":557,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:72",{"_index":556,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:73",{"_index":554,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:74",{"_index":555,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:78",{"_index":552,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:8",{"_index":508,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["bluetooth/src/lib/test.utils.ts:86",{"_index":561,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:90",{"_index":558,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/lib/test.utils.ts:97",{"_index":559,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["bluetooth/src/public_api",{"_index":256,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["bluetooth_disabled",{"_index":470,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bluetooth_searching",{"_index":468,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bluetoothcharacteristicproperties",{"_index":540,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetoothcharacteristicuuid",{"_index":537,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["bluetoothcore",{"_index":23,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bluetoothcore(b",{"_index":263,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["bluetoothremotegattcharacteristic",{"_index":834,"title":{},"body":{"index.html":{}}}],["bluetoothremotegattserver",{"_index":504,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["bluetoothremotegattservice",{"_index":828,"title":{},"body":{"index.html":{}}}],["bluetoothserviceuuid",{"_index":530,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["boolean",{"_index":13,"title":{},"body":{"interfaces/AWBOptions.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"modules/WebBluetoothModule.html":{}}}],["bootstrap",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bordervisible",{"_index":626,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["bottom",{"_index":192,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["browse",{"_index":929,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/BrowserWebBluetooth.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser's",{"_index":778,"title":{},"body":{"index.html":{}}}],["browser.get(browser.baseurl",{"_index":153,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["browserwebbluetooth",{"_index":25,"title":{"injectables/BrowserWebBluetooth.html":{}},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BrowserWebBluetooth.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":491,"title":{},"body":{"components/DashboardComponent.html":{}}}],["c",{"_index":863,"title":{},"body":{"index.html":{},"license.html":{}}}],["call",{"_index":789,"title":{},"body":{"index.html":{}}}],["can't",{"_index":808,"title":{},"body":{"index.html":{}}}],["canvas",{"_index":575,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["card",{"_index":488,"title":{},"body":{"components/DashboardComponent.html":{}}}],["catch((error",{"_index":293,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["cc2650",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["center",{"_index":168,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["changelog",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["changevalue",{"_index":551,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["changevalue(value",{"_index":549,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["characteristic",{"_index":301,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["characteristics",{"_index":534,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["characteristicvaluechanged",{"_index":543,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["charge",{"_index":870,"title":{},"body":{"index.html":{},"license.html":{}}}],["chart",{"_index":577,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["chartref",{"_index":578,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["checkout",{"_index":848,"title":{},"body":{"index.html":{}}}],["chegham",{"_index":866,"title":{},"body":{"index.html":{},"license.html":{}}}],["claim",{"_index":917,"title":{},"body":{"index.html":{},"license.html":{}}}],["class",{"_index":40,"title":{"classes/AppPage.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":142,"title":{},"body":{"classes/AppPage.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"overview.html":{}}}],["clear",{"_index":501,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["close",{"_index":385,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["cluster_appmodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["color",{"_index":198,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["command",{"_index":845,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":21,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["compileshallowmodulemetadata",{"_index":252,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["component",{"_index":53,"title":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["components",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"overview.html":{}}}],["conditions",{"_index":895,"title":{},"body":{"index.html":{},"license.html":{}}}],["config",{"_index":394,"title":{},"body":{"injectables/BleService.html":{},"miscellaneous/variables.html":{}}}],["config(options",{"_index":399,"title":{},"body":{"injectables/BleService.html":{}}}],["configuration",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":469,"title":{},"body":{"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["connectable",{"_index":318,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["connected",{"_index":373,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["connection",{"_index":926,"title":{},"body":{"index.html":{},"license.html":{}}}],["console",{"_index":200,"title":{},"body":{"components/BatteryLevelComponent.html":{},"index.html":{}}}],["console.error(error",{"_index":294,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["console.error.apply(console",{"_index":456,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["console.log",{"_index":347,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["console.log(\"device",{"_index":370,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["console.log(\"this",{"_index":368,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["console.log('\\tcan",{"_index":325,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["console.log('\\thello",{"_index":322,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["console.log('\\there",{"_index":334,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["console.log('\\tmy",{"_index":343,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["console.log('getting",{"_index":798,"title":{},"body":{"index.html":{}}}],["console.log('reading",{"_index":638,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["console.log('started",{"_index":291,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["console.log(`\\t\\t${json.stringify(peripheral.advertisement.manufacturerdata.tostring('hex",{"_index":340,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["console.log(`\\t\\t${json.stringify(peripheral.advertisement.serviceuuids",{"_index":330,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["console.log(`\\t\\t${json.stringify(servicedata[i].uuid",{"_index":336,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["console.log(`\\t\\t${peripheral.advertisement.localname",{"_index":324,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["console.log(`\\t\\t${peripheral.advertisement.txpowerlevel",{"_index":346,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["console.log(`peripheral",{"_index":314,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["console.log(json.stringify(ad",{"_index":287,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["console.log(value",{"_index":378,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["console.log.apply(console",{"_index":455,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["console.warn.apply(console",{"_index":457,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["consoleloggerservice",{"_index":27,"title":{"injectables/ConsoleLoggerService.html":{}},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consoleloggerserviceconfig",{"_index":48,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["consoleloggerserviceconfig(options",{"_index":34,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["const",{"_index":259,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["constructor",{"_index":217,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["constructor(ble",{"_index":397,"title":{},"body":{"injectables/BleService.html":{}}}],["constructor(device",{"_index":563,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["constructor(id",{"_index":502,"title":{},"body":{"classes/FakeBluetoothDevice.html":{}}}],["constructor(properties",{"_index":544,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["constructor(public",{"_index":416,"title":{},"body":{"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["constructor(service",{"_index":218,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["container",{"_index":486,"title":{},"body":{"components/DashboardComponent.html":{}}}],["content",{"_index":155,"title":{},"body":{"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{}}}],["contract",{"_index":922,"title":{},"body":{"index.html":{},"license.html":{}}}],["contributions",{"_index":854,"title":{},"body":{"index.html":{}}}],["control",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copies",{"_index":890,"title":{},"body":{"index.html":{},"license.html":{}}}],["copy",{"_index":873,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":862,"title":{},"body":{"index.html":{},"license.html":{}}}],["correctly",{"_index":774,"title":{},"body":{"index.html":{}}}],["count",{"_index":674,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["counter",{"_index":680,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["coverage",{"_index":706,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":277,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["current_used_parameters",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentobj",{"_index":356,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["d",{"_index":380,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["damages",{"_index":918,"title":{},"body":{"index.html":{},"license.html":{}}}],["dashboard",{"_index":459,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["dashboard.component.css",{"_index":461,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":463,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/dashboard.component",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboardcomponent",{"_index":75,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":335,"title":{},"body":{"components/BatteryLevelComponent.html":{},"miscellaneous/variables.html":{}}}],["dataview",{"_index":298,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["deal",{"_index":877,"title":{},"body":{"index.html":{},"license.html":{}}}],["dealings",{"_index":927,"title":{},"body":{"index.html":{},"license.html":{}}}],["decimal",{"_index":701,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["declarations",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declare",{"_index":265,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["decoder",{"_index":297,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["decoder(value",{"_index":409,"title":{},"body":{"injectables/BleService.html":{}}}],["decorators",{"_index":592,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["default",{"_index":235,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"components/StepCounterComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":147,"title":{},"body":{"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["demo",{"_index":466,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dependencies",{"_index":88,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":49,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/variables.html":{}}}],["details",{"_index":440,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["determinate",{"_index":242,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["dev.to",{"_index":851,"title":{},"body":{"index.html":{}}}],["developer",{"_index":811,"title":{},"body":{"index.html":{}}}],["device",{"_index":216,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["device\",device",{"_index":369,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["device.gatt",{"_index":526,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["device.name",{"_index":471,"title":{},"body":{"components/DashboardComponent.html":{}}}],["device_id",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["device_information",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["devicesubscription",{"_index":201,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["direction",{"_index":169,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["directions_walk",{"_index":660,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["directive",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["directives",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["disconnect",{"_index":208,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["disconnect_request",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disconnectdevice",{"_index":395,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["disconnected",{"_index":374,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["discover",{"_index":817,"title":{},"body":{"index.html":{}}}],["discovered",{"_index":315,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["discovery",{"_index":819,"title":{},"body":{"index.html":{}}}],["display",{"_index":165,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["distribute",{"_index":886,"title":{},"body":{"index.html":{},"license.html":{}}}],["documentation",{"_index":707,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["dynamic",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/app.po.ts",{"_index":143,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":151,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":148,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":271,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["easiest",{"_index":782,"title":{},"body":{"index.html":{}}}],["ef680200",{"_index":604,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["ef680201",{"_index":699,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["ef680203",{"_index":609,"title":{},"body":{"components/HumidityComponent.html":{}}}],["ef680400",{"_index":678,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["ef680405",{"_index":679,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["element",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["element(by.css('app",{"_index":154,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":591,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["elsewhere",{"_index":810,"title":{},"body":{"index.html":{}}}],["emites",{"_index":814,"title":{},"body":{"index.html":{}}}],["emitted",{"_index":792,"title":{},"body":{"index.html":{}}}],["enable",{"_index":776,"title":{},"body":{"index.html":{}}}],["enabletracing",{"_index":12,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["environment",{"_index":729,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":229,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["error('your",{"_index":434,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["error(...args",{"_index":444,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["error(args",{"_index":453,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["event",{"_index":304,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{},"license.html":{}}}],["eventlistener",{"_index":511,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["example",{"_index":786,"title":{},"body":{"index.html":{}}}],["exit",{"_index":254,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["export",{"_index":30,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["exports",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":905,"title":{},"body":{"index.html":{},"license.html":{}}}],["f000180a",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000180f",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a19",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a23",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a24",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a25",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a26",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a27",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a28",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a29",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a2a",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0002a50",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa00",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa01",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa02",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa03",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa10",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa11",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa12",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa13",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa20",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa21",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa22",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa23",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa30",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa31",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa32",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa33",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa40",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa41",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa42",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa44",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa50",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa51",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa52",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa53",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa64",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa65",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa66",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa70",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa71",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa72",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa73",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa80",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa81",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa82",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000aa83",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac00",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac01",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac02",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ac03",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc0",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc1",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc2",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ccc3",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc0",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc1",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc2",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc3",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffc4",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffe0",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f000ffe1",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fakebluetoothdevice",{"_index":495,"title":{"classes/FakeBluetoothDevice.html":{}},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"coverage.html":{}}}],["fakebluetoothremotegattcharacteristic",{"_index":539,"title":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"coverage.html":{}}}],["fakebluetoothremotegattserver",{"_index":524,"title":{"classes/FakeBluetoothRemoteGATTServer.html":{}},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"coverage.html":{}}}],["fakebluetoothremotegattservice",{"_index":533,"title":{"classes/FakeBluetoothRemoteGATTService.html":{}},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"coverage.html":{}}}],["false",{"_index":525,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["few",{"_index":856,"title":{},"body":{"index.html":{}}}],["ff0000",{"_index":634,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["ffffff",{"_index":623,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["files",{"_index":876,"title":{},"body":{"index.html":{},"license.html":{}}}],["fillstyle",{"_index":622,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["firmware_rev",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fitness",{"_index":910,"title":{},"body":{"index.html":{},"license.html":{}}}],["flex",{"_index":166,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["following",{"_index":327,"title":{},"body":{"components/BatteryLevelComponent.html":{},"index.html":{},"license.html":{}}}],["font",{"_index":174,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["fontsize",{"_index":629,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["forroot",{"_index":704,"title":{},"body":{"modules/WebBluetoothModule.html":{}}}],["forroot(options",{"_index":43,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["found",{"_index":838,"title":{},"body":{"index.html":{}}}],["free",{"_index":812,"title":{},"body":{"index.html":{},"license.html":{}}}],["full",{"_index":849,"title":{},"body":{"index.html":{}}}],["function",{"_index":31,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["functions",{"_index":764,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":893,"title":{},"body":{"index.html":{},"license.html":{}}}],["gatt",{"_index":497,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["gatt_characteristic_battery_level",{"_index":802,"title":{},"body":{"index.html":{}}}],["gatt_primary_service",{"_index":803,"title":{},"body":{"index.html":{}}}],["gattserverdisconnected",{"_index":507,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["getcharacteristic",{"_index":570,"title":{},"body":{"classes/FakeBluetoothRemoteGATTService.html":{}}}],["getcharacteristic(characteristic",{"_index":536,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["getdevice",{"_index":250,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["getdevicestatus",{"_index":209,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["getmethods",{"_index":202,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["getprimaryservice",{"_index":562,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{}}}],["getprimaryservice(service",{"_index":529,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["getting",{"_index":766,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["gettitletext",{"_index":145,"title":{},"body":{"classes/AppPage.html":{}}}],["given",{"_index":793,"title":{},"body":{"index.html":{}}}],["global",{"_index":732,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["granted",{"_index":869,"title":{},"body":{"index.html":{},"license.html":{}}}],["graph",{"_index":930,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":485,"title":{},"body":{"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["gyroscope",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handler",{"_index":305,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["hardware_rev",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haserror",{"_index":210,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["haserror(error",{"_index":226,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["help",{"_index":859,"title":{},"body":{"index.html":{}}}],["here",{"_index":784,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":868,"title":{},"body":{"index.html":{},"license.html":{}}}],["holders",{"_index":915,"title":{},"body":{"index.html":{},"license.html":{}}}],["host",{"_index":164,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["html",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["http://caniuse.com/#search=bluetooth",{"_index":438,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["https://manekinekko.github.io/angular",{"_index":839,"title":{},"body":{"index.html":{}}}],["humidity",{"_index":472,"title":{},"body":{"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"miscellaneous/variables.html":{}}}],["humidity'},{'name",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["humiditycomponent",{"_index":77,"title":{"components/HumidityComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["icon",{"_index":191,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["id",{"_index":498,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["id:\",device.id",{"_index":372,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["identifier",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["ieee11073",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_block_request",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_count",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_notify",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image_status",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["img",{"_index":493,"title":{},"body":{"components/DashboardComponent.html":{}}}],["implements",{"_index":160,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/ConsoleLoggerService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["implied",{"_index":906,"title":{},"body":{"index.html":{},"license.html":{}}}],["import",{"_index":16,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["imports",{"_index":39,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["included",{"_index":899,"title":{},"body":{"index.html":{},"license.html":{}}}],["including",{"_index":880,"title":{},"body":{"index.html":{},"license.html":{}}}],["indeterminate",{"_index":366,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/AWBOptions.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["initchart",{"_index":580,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["initialvalue",{"_index":542,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["injectable",{"_index":389,"title":{"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{}},"body":{"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"coverage.html":{},"index.html":{}}}],["injectables",{"_index":390,"title":{},"body":{"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"overview.html":{}}}],["injectiontoken",{"_index":19,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["injectiontoken('awboptions",{"_index":38,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["install",{"_index":769,"title":{},"body":{"index.html":{}}}],["installed",{"_index":773,"title":{},"body":{"index.html":{}}}],["instance",{"_index":270,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["integer",{"_index":700,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["interest",{"_index":326,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{}},"body":{"interfaces/AWBOptions.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AWBOptions.html":{},"interfaces/Logger.html":{},"overview.html":{}}}],["interpolation",{"_index":620,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["io",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issues",{"_index":858,"title":{},"body":{"index.html":{}}}],["it/conventional",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["json.stringify(servicedata[i].data.tostring('hex",{"_index":337,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["justify",{"_index":167,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["key",{"_index":410,"title":{},"body":{"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["keypress",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":904,"title":{},"body":{"index.html":{},"license.html":{}}}],["l",{"_index":262,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["labels",{"_index":627,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["layoutmodule",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["left",{"_index":189,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["legend",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"overview.html":{}}}],["length",{"_index":617,"title":{},"body":{"components/HumidityComponent.html":{}}}],["level",{"_index":163,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["level'},{'name",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["level.component",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["level.component.ts",{"_index":159,"title":{},"body":{"components/BatteryLevelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["level.component.ts:101",{"_index":244,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:102",{"_index":245,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:103",{"_index":238,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:113",{"_index":231,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:160",{"_index":241,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:168",{"_index":225,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:187",{"_index":232,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:195",{"_index":234,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:201",{"_index":223,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:207",{"_index":228,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:211",{"_index":230,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:78",{"_index":248,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:79",{"_index":243,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:80",{"_index":237,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:81",{"_index":249,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:82",{"_index":246,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:83",{"_index":240,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:85",{"_index":251,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:98",{"_index":221,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["liability",{"_index":919,"title":{},"body":{"index.html":{},"license.html":{}}}],["liable",{"_index":916,"title":{},"body":{"index.html":{},"license.html":{}}}],["license",{"_index":860,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["light",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limitation",{"_index":881,"title":{},"body":{"index.html":{},"license.html":{}}}],["limited",{"_index":907,"title":{},"body":{"index.html":{},"license.html":{}}}],["line",{"_index":414,"title":{},"body":{"injectables/BleService.html":{},"components/HumidityComponent.html":{}}}],["linewidth",{"_index":633,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["linking",{"_index":278,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["list",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["listener",{"_index":510,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["listener(mockedevent",{"_index":520,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["listeners",{"_index":499,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["literal",{"_index":564,"title":{},"body":{"classes/FakeBluetoothRemoteGATTServer.html":{},"components/StepCounterComponent.html":{},"miscellaneous/typealiases.html":{}}}],["local",{"_index":323,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["log",{"_index":443,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["log(...args",{"_index":447,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["log(args",{"_index":452,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["logger",{"_index":451,"title":{"interfaces/Logger.html":{}},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"coverage.html":{}}}],["logger.service",{"_index":29,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["logic",{"_index":806,"title":{},"body":{"index.html":{}}}],["logs",{"_index":777,"title":{},"body":{"index.html":{}}}],["magnetometer",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["make",{"_index":267,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["makemetokeninjector",{"_index":37,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["manekinekko/angular",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["manifacturer",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manufacturer",{"_index":339,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["map",{"_index":407,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["map((value",{"_index":794,"title":{},"body":{"index.html":{}}}],["map(this._config.decoder",{"_index":420,"title":{},"body":{"injectables/BleService.html":{}}}],["margin",{"_index":478,"title":{},"body":{"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["mat",{"_index":186,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["matbuttonmodule",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":51,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodule",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":220,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["matsnackbarmodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":476,"title":{},"body":{"components/DashboardComponent.html":{},"components/HumidityComponent.html":{}}}],["merchantability",{"_index":909,"title":{},"body":{"index.html":{},"license.html":{}}}],["merge",{"_index":884,"title":{},"body":{"index.html":{},"license.html":{}}}],["mergemap",{"_index":801,"title":{},"body":{"index.html":{}}}],["mergemap((characteristic",{"_index":833,"title":{},"body":{"index.html":{}}}],["mergemap((gatt",{"_index":824,"title":{},"body":{"index.html":{}}}],["mergemap((primaryservice",{"_index":827,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["method",{"_index":790,"title":{},"body":{"index.html":{}}}],["methods",{"_index":144,"title":{},"body":{"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["miscellaneous",{"_index":763,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":768,"title":{},"body":{"index.html":{}}}],["mit",{"_index":861,"title":{},"body":{"index.html":{},"license.html":{}}}],["mocked",{"_index":652,"title":{},"body":{"injectables/ServerWebBluetooth.html":{}}}],["mockedevent",{"_index":516,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["mode",{"_index":203,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["model",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model_number",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":883,"title":{},"body":{"index.html":{},"license.html":{}}}],["module",{"_index":85,"title":{"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":87,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":18,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["more",{"_index":439,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"components/DashboardComponent.html":{}}}],["more_vert",{"_index":467,"title":{},"body":{"components/DashboardComponent.html":{}}}],["movement",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["name:\",device.name",{"_index":371,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["navigateto",{"_index":146,"title":{},"body":{"classes/AppPage.html":{}}}],["navigator.bluetooth",{"_index":432,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["need",{"_index":840,"title":{},"body":{"index.html":{}}}],["new",{"_index":33,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BrowserWebBluetooth.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":413,"title":{},"body":{"injectables/BleService.html":{},"components/HumidityComponent.html":{},"dependencies.html":{}}}],["nexttick",{"_index":274,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["ngmodule",{"_index":17,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":211,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["ngoninit",{"_index":212,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["noble",{"_index":272,"title":{},"body":{"components/BatteryLevelComponent.html":{},"dependencies.html":{}}}],["noble.on('discover",{"_index":312,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["noble.on('statechange",{"_index":307,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["noble.startscanning",{"_index":310,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["noble.stopscanning",{"_index":311,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["node",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["node_modules",{"_index":775,"title":{},"body":{"index.html":{}}}],["nologgerservice",{"_index":28,"title":{"injectables/NoLoggerService.html":{}},"body":{"interfaces/AWBOptions.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{}}}],["noninfringement",{"_index":913,"title":{},"body":{"index.html":{},"license.html":{}}}],["note",{"_index":772,"title":{},"body":{"index.html":{}}}],["notice",{"_index":897,"title":{},"body":{"index.html":{},"license.html":{}}}],["notifications",{"_index":797,"title":{},"body":{"index.html":{}}}],["now",{"_index":653,"title":{},"body":{"injectables/ServerWebBluetooth.html":{}}}],["npm",{"_index":770,"title":{},"body":{"index.html":{}}}],["null",{"_index":247,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["number",{"_index":352,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["oad",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj",{"_index":355,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["object",{"_index":279,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/ServerWebBluetooth.html":{},"miscellaneous/variables.html":{}}}],["object.getownpropertynames(currentobj).map(item",{"_index":357,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["object.getprototypeof(currentobj",{"_index":359,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["object.keys(titag).map(key",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obtaining",{"_index":872,"title":{},"body":{"index.html":{},"license.html":{}}}],["of(this.haserror.bind(this",{"_index":613,"title":{},"body":{"components/HumidityComponent.html":{}}}],["ondestroy",{"_index":162,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["oninit",{"_index":161,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["open",{"_index":857,"title":{},"body":{"index.html":{}}}],["optional",{"_index":11,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["optionalservices",{"_index":821,"title":{},"body":{"index.html":{}}}],["options",{"_index":35,"title":{},"body":{"interfaces/AWBOptions.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["options.enabletracing",{"_index":36,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["otherwise",{"_index":924,"title":{},"body":{"index.html":{},"license.html":{}}}],["out",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":932,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":735,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":474,"title":{},"body":{"components/DashboardComponent.html":{}}}],["parameters",{"_index":222,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":911,"title":{},"body":{"index.html":{},"license.html":{}}}],["period",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["peripheral",{"_index":313,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["peripheral.advertisement.manufacturerdata",{"_index":338,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["peripheral.advertisement.servicedata",{"_index":332,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["peripheral.advertisement.txpowerlevel",{"_index":341,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["peripheral.connectable",{"_index":319,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["peripheral.id",{"_index":316,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["peripheral.rssi",{"_index":321,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["permission",{"_index":867,"title":{},"body":{"index.html":{},"license.html":{}}}],["permit",{"_index":891,"title":{},"body":{"index.html":{},"license.html":{}}}],["person",{"_index":871,"title":{},"body":{"index.html":{},"license.html":{}}}],["persons",{"_index":892,"title":{},"body":{"index.html":{},"license.html":{}}}],["pipe",{"_index":424,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["platform/browser",{"_index":26,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["pnp_id",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":901,"title":{},"body":{"index.html":{},"license.html":{}}}],["position",{"_index":177,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["post",{"_index":847,"title":{},"body":{"index.html":{}}}],["power",{"_index":345,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["poweredon",{"_index":309,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["pr",{"_index":853,"title":{},"body":{"index.html":{}}}],["primary",{"_index":236,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["private",{"_index":392,"title":{},"body":{"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["process",{"_index":255,"title":{},"body":{"components/BatteryLevelComponent.html":{},"dependencies.html":{},"index.html":{}}}],["production",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":187,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["project",{"_index":842,"title":{},"body":{"index.html":{}}}],["projects/.../bluetooth.module.ts",{"_index":765,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../bluetooth.service.ts",{"_index":937,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../ti",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/manekinekko/angular",{"_index":6,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":150,"title":{},"body":{"classes/AppPage.html":{},"injectables/BrowserWebBluetooth.html":{}}}],["promise.resolve(this",{"_index":528,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["promise.resolve(this.characteristics[characteristic",{"_index":538,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["promise.resolve(this.services[service].service",{"_index":531,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["promise.resolve(this.value",{"_index":548,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["properties.add(item",{"_index":358,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["properties.keys",{"_index":360,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["protractor",{"_index":152,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":45,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":902,"title":{},"body":{"index.html":{},"license.html":{}}}],["providedin",{"_index":411,"title":{},"body":{"injectables/BleService.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"index.html":{}}}],["providers",{"_index":44,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":199,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["publish",{"_index":885,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":912,"title":{},"body":{"index.html":{},"license.html":{}}}],["read",{"_index":816,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":541,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"index.html":{}}}],["readvalue",{"_index":547,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["readvalueoptions",{"_index":936,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["release",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["request_new_parameters",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestdevice",{"_index":427,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["requestdevice(options",{"_index":429,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["requestdeviceoptions",{"_index":430,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["requested",{"_index":815,"title":{},"body":{"index.html":{}}}],["requestvalue",{"_index":213,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["require",{"_index":266,"title":{},"body":{"components/BatteryLevelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require('next",{"_index":275,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["require('noble",{"_index":273,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["require('node",{"_index":281,"title":{},"body":{"components/BatteryLevelComponent.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["restriction",{"_index":879,"title":{},"body":{"index.html":{},"license.html":{}}}],["result",{"_index":50,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":52,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":32,"title":{},"body":{"interfaces/AWBOptions.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["returns",{"_index":149,"title":{},"body":{"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["rgba(119,119,119,0.18",{"_index":625,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["rgba(255,161,161,0.30",{"_index":635,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["right",{"_index":490,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["rights",{"_index":882,"title":{},"body":{"index.html":{},"license.html":{}}}],["root",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/BleService.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"index.html":{}}}],["root'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["row",{"_index":170,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["rssi",{"_index":320,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["run",{"_index":844,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":257,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":408,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["s",{"_index":771,"title":{},"body":{"index.html":{}}}],["scan",{"_index":292,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["scanner",{"_index":283,"title":{},"body":{"components/BatteryLevelComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["scanner.onadvertisement",{"_index":285,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["scanner.startscan().then",{"_index":290,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["scanning",{"_index":289,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["section",{"_index":473,"title":{},"body":{"components/DashboardComponent.html":{}}}],["see",{"_index":437,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["selector",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["sell",{"_index":889,"title":{},"body":{"index.html":{},"license.html":{}}}],["sensortag2.ts",{"_index":717,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serial_number",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["series",{"_index":579,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["serverwebbluetooth",{"_index":649,"title":{"injectables/ServerWebBluetooth.html":{}},"body":{"injectables/ServerWebBluetooth.html":{},"coverage.html":{}}}],["serves",{"_index":843,"title":{},"body":{"index.html":{}}}],["service",{"_index":204,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["service.config",{"_index":296,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["service/component",{"_index":781,"title":{},"body":{"index.html":{}}}],["servicedata",{"_index":331,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["servicedata.length",{"_index":333,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["serviceoptions",{"_index":400,"title":{},"body":{"injectables/BleService.html":{},"miscellaneous/typealiases.html":{}}}],["services",{"_index":329,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["set",{"_index":303,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["shall",{"_index":898,"title":{},"body":{"index.html":{},"license.html":{}}}],["singleton",{"_index":269,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["size",{"_index":175,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["smart",{"_index":436,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["smoothie",{"_index":603,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"dependencies.html":{}}}],["smoothiechart",{"_index":589,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["snackbar",{"_index":205,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["software",{"_index":874,"title":{},"body":{"index.html":{},"license.html":{}}}],["software_rev",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{}}}],["span",{"_index":173,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{}}}],["span')).gettext",{"_index":156,"title":{},"body":{"classes/AppPage.html":{}}}],["specific",{"_index":807,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{}}}],["src/.../battery",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ble.service.ts",{"_index":938,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../humidity.component.ts",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../polyfills.ts",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stepcounter.component.ts",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../temperature.component.ts",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/ble.service.ts",{"_index":391,"title":{},"body":{"injectables/BleService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ble.service.ts:17",{"_index":398,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:19",{"_index":406,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:21",{"_index":401,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:25",{"_index":403,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:29",{"_index":404,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:35",{"_index":405,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/ble.service.ts:46",{"_index":402,"title":{},"body":{"injectables/BleService.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":458,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:8",{"_index":464,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/thingy52/battery",{"_index":158,"title":{},"body":{"components/BatteryLevelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/thingy52/humidity.component.ts",{"_index":574,"title":{},"body":{"components/HumidityComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/thingy52/humidity.component.ts:104",{"_index":583,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:108",{"_index":585,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:38",{"_index":596,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:39",{"_index":590,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:40",{"_index":600,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:41",{"_index":599,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:44",{"_index":594,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:46",{"_index":601,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:48",{"_index":581,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:51",{"_index":597,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:52",{"_index":598,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:61",{"_index":586,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:71",{"_index":584,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:81",{"_index":587,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:90",{"_index":588,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/humidity.component.ts:97",{"_index":582,"title":{},"body":{"components/HumidityComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts",{"_index":654,"title":{},"body":{"components/StepCounterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/thingy52/stepcounter.component.ts:50",{"_index":672,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:51",{"_index":670,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:52",{"_index":671,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:54",{"_index":673,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:56",{"_index":661,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:59",{"_index":668,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:60",{"_index":669,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:75",{"_index":665,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:80",{"_index":666,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:85",{"_index":667,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:90",{"_index":662,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:95",{"_index":663,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/stepcounter.component.ts:99",{"_index":664,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["src/app/thingy52/temperature.component.ts",{"_index":682,"title":{},"body":{"components/TemperatureComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/thingy52/temperature.component.ts:105",{"_index":684,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:112",{"_index":685,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:116",{"_index":687,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:38",{"_index":693,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:39",{"_index":691,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:40",{"_index":697,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:41",{"_index":696,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:44",{"_index":692,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:46",{"_index":698,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:48",{"_index":683,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:51",{"_index":694,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:52",{"_index":695,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:66",{"_index":688,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:73",{"_index":686,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:94",{"_index":689,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/app/thingy52/temperature.component.ts:99",{"_index":690,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":728,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":730,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/polyfills.ts",{"_index":731,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":288,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["startblog",{"_index":846,"title":{},"body":{"index.html":{}}}],["started",{"_index":767,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starter",{"_index":841,"title":{},"body":{"index.html":{}}}],["state",{"_index":308,"title":{},"body":{"components/BatteryLevelComponent.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":42,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/HumidityComponent.html":{},"injectables/ServerWebBluetooth.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"index.html":{}}}],["step",{"_index":621,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["stepcounter",{"_index":655,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["stepcounter'},{'name",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["stepcountercomponent",{"_index":79,"title":{"components/StepCounterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sticky",{"_index":482,"title":{},"body":{"components/DashboardComponent.html":{}}}],["stop",{"_index":795,"title":{},"body":{"index.html":{}}}],["stream",{"_index":396,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["streamsubscription",{"_index":206,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["string",{"_index":227,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["strokestyle",{"_index":624,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["styles",{"_index":157,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["styleurls",{"_index":460,"title":{},"body":{"components/DashboardComponent.html":{}}}],["subject",{"_index":894,"title":{},"body":{"index.html":{},"license.html":{}}}],["sublicense",{"_index":887,"title":{},"body":{"index.html":{},"license.html":{}}}],["subscribe",{"_index":611,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["subscribe((value",{"_index":351,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["subscribe(device",{"_index":362,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["subscribed",{"_index":796,"title":{},"body":{"index.html":{}}}],["subscription",{"_index":239,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["substantial",{"_index":900,"title":{},"body":{"index.html":{},"license.html":{}}}],["sup",{"_index":184,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["support",{"_index":435,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{},"modules.html":{}}}],["sure",{"_index":268,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["svg",{"_index":928,"title":{},"body":{"modules.html":{}}}],["system_id",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":517,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["temperature",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"miscellaneous/variables.html":{}}}],["temperaturecomponent",{"_index":81,"title":{"components/TemperatureComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"coverage.html":{},"overview.html":{}}}],["template",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["templateurl",{"_index":462,"title":{},"body":{"components/DashboardComponent.html":{}}}],["text",{"_index":171,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["thingy52/battery",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["thingy52/humidity.component",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["thingy52/stepcounter.component",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["thingy52/temperature.component",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["this._config",{"_index":417,"title":{},"body":{"injectables/BleService.html":{}}}],["this._config.characteristic",{"_index":423,"title":{},"body":{"injectables/BleService.html":{}}}],["this._config.service",{"_index":422,"title":{},"body":{"injectables/BleService.html":{}}}],["this.ble",{"_index":421,"title":{},"body":{"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"index.html":{}}}],["this.ble.disconnectdevice",{"_index":425,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["this.ble.getcharacteristic$(primaryservice",{"_index":829,"title":{},"body":{"index.html":{}}}],["this.ble.getdevice",{"_index":418,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["this.ble.getprimaryservice$(gatt",{"_index":825,"title":{},"body":{"index.html":{}}}],["this.ble.readvalue$(characteristic",{"_index":835,"title":{},"body":{"index.html":{}}}],["this.ble.requestdevice(options",{"_index":441,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["this.ble.streamvalues$().pipe",{"_index":419,"title":{},"body":{"injectables/BleService.html":{},"index.html":{}}}],["this.ble.streamvalues$().pipe(map((value",{"_index":804,"title":{},"body":{"index.html":{}}}],["this.characteristics.service",{"_index":535,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.chart",{"_index":618,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.chart.addtimeseries(this.series",{"_index":632,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.chart.start",{"_index":640,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.chart.stop",{"_index":637,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.chart.streamto(canvas",{"_index":636,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.chartref.nativeelement",{"_index":616,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.color",{"_index":363,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.connected",{"_index":527,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.console.log('reading",{"_index":379,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.device.disconnect",{"_index":532,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.devicesubscription",{"_index":361,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.devicesubscription.unsubscribe",{"_index":382,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.devicesubscription?.unsubscribe",{"_index":387,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.getdevicestatus",{"_index":348,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.haserror(error",{"_index":354,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.haserror.bind(this",{"_index":375,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.id",{"_index":521,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.initchart",{"_index":610,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.initialvalue",{"_index":546,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.listeners",{"_index":523,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.listeners.characteristicvaluechanged.foreach(listener",{"_index":550,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.listeners.gattserverdisconnected.foreach(listener",{"_index":519,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.listeners[type",{"_index":515,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.mode",{"_index":365,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.name",{"_index":522,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.properties",{"_index":545,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["this.series",{"_index":614,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.series.append(date.now",{"_index":639,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.series.clear",{"_index":641,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.service.disconnectdevice",{"_index":381,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.service.getdevice",{"_index":295,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.service.stream",{"_index":350,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.service.value",{"_index":377,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.snackbar.open(error",{"_index":384,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.streamsubscription",{"_index":349,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.streamsubscription.unsubscribe",{"_index":642,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.streamsubscription?.unsubscribe",{"_index":388,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.updatevalue(value",{"_index":353,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.updatevalue.bind(this",{"_index":612,"title":{},"body":{"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.value",{"_index":367,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/StepCounterComponent.html":{}}}],["this.valuessubscription",{"_index":376,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.valuessubscription.unsubscribe",{"_index":383,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["this.valuessubscription?.unsubscribe",{"_index":386,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["throw",{"_index":433,"title":{},"body":{"injectables/BrowserWebBluetooth.html":{}}}],["ti_sensorag_services",{"_index":718,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tick",{"_index":276,"title":{},"body":{"components/BatteryLevelComponent.html":{},"dependencies.html":{}}}],["time",{"_index":676,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["timeseries",{"_index":595,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["titag",{"_index":719,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["titag[key].service",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toolbar.mat",{"_index":481,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tooltip",{"_index":631,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["top",{"_index":179,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["tort",{"_index":923,"title":{},"body":{"index.html":{},"license.html":{}}}],["tree",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["trigger",{"_index":818,"title":{},"body":{"index.html":{}}}],["true",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":412,"title":{},"body":{"injectables/BleService.html":{},"components/HumidityComponent.html":{}}}],["tx",{"_index":344,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":934,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/web",{"_index":750,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["undefined",{"_index":342,"title":{},"body":{"components/BatteryLevelComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["unknown",{"_index":518,"title":{},"body":{"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{}}}],["updatevalue",{"_index":214,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["updatevalue(value",{"_index":233,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["use",{"_index":780,"title":{},"body":{"index.html":{},"license.html":{}}}],["usefactory",{"_index":46,"title":{},"body":{"interfaces/AWBOptions.html":{},"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"miscellaneous/variables.html":{}}}],["usevalue",{"_index":47,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/WebBluetoothModule.html":{}}}],["using",{"_index":787,"title":{},"body":{"index.html":{}}}],["value",{"_index":195,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value.count",{"_index":681,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["value.getint8(0",{"_index":299,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{},"index.html":{}}}],["value.getuint32(0",{"_index":675,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["value.getuint32(4",{"_index":677,"title":{},"body":{"components/StepCounterComponent.html":{}}}],["value.getuint8(0",{"_index":805,"title":{},"body":{"index.html":{}}}],["value.getuint8(1",{"_index":702,"title":{},"body":{"components/TemperatureComponent.html":{}}}],["values",{"_index":791,"title":{},"body":{"index.html":{}}}],["valuessubscription",{"_index":207,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["var",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/HumidityComponent.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["variable",{"_index":415,"title":{},"body":{"injectables/BleService.html":{},"coverage.html":{}}}],["variables",{"_index":939,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["viewchild",{"_index":602,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["viewchild('chart",{"_index":593,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["void",{"_index":224,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/ConsoleLoggerService.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{}}}],["want",{"_index":813,"title":{},"body":{"index.html":{}}}],["warn",{"_index":364,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["warn(...args",{"_index":449,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["warn(args",{"_index":454,"title":{},"body":{"injectables/ConsoleLoggerService.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{}}}],["warranties",{"_index":908,"title":{},"body":{"index.html":{},"license.html":{}}}],["warranty",{"_index":903,"title":{},"body":{"index.html":{},"license.html":{}}}],["wassim",{"_index":865,"title":{},"body":{"index.html":{},"license.html":{}}}],["way",{"_index":783,"title":{},"body":{"index.html":{}}}],["web",{"_index":7,"title":{},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BleService.html":{},"injectables/BrowserWebBluetooth.html":{},"injectables/ConsoleLoggerService.html":{},"components/DashboardComponent.html":{},"classes/FakeBluetoothDevice.html":{},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{},"classes/FakeBluetoothRemoteGATTServer.html":{},"classes/FakeBluetoothRemoteGATTService.html":{},"components/HumidityComponent.html":{},"interfaces/Logger.html":{},"injectables/NoLoggerService.html":{},"injectables/ServerWebBluetooth.html":{},"components/StepCounterComponent.html":{},"components/TemperatureComponent.html":{},"modules/WebBluetoothModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["webbluetoothmodule",{"_index":41,"title":{"modules/WebBluetoothModule.html":{}},"body":{"interfaces/AWBOptions.html":{},"modules/AppModule.html":{},"modules/WebBluetoothModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["webbluetoothmodule.forroot",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["welcome",{"_index":855,"title":{},"body":{"index.html":{}}}],["whether",{"_index":920,"title":{},"body":{"index.html":{},"license.html":{}}}],["width",{"_index":181,"title":{},"body":{"components/BatteryLevelComponent.html":{},"components/DashboardComponent.html":{},"components/StepCounterComponent.html":{}}}],["window.smoothiechart",{"_index":619,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["window.timeseries",{"_index":615,"title":{},"body":{"components/HumidityComponent.html":{},"components/TemperatureComponent.html":{}}}],["without",{"_index":878,"title":{},"body":{"index.html":{},"license.html":{}}}],["yes",{"_index":553,"title":{},"body":{"classes/FakeBluetoothRemoteGATTCharacteristic.html":{}}}],["z",{"_index":483,"title":{},"body":{"components/DashboardComponent.html":{}}}],["zone.js",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AWBOptions.html":{"url":"interfaces/AWBOptions.html","title":"interface - AWBOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AWBOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        enableTracing\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enableTracing\n                                    \n                                \n                                \n                                    \n                                        enableTracing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BluetoothCore } from './bluetooth.service';\nimport { BrowserWebBluetooth } from './platform/browser';\n\nimport { ConsoleLoggerService, NoLoggerService } from './logger.service';\n\nexport interface AWBOptions {\n  enableTracing?: boolean;\n}\n\nexport function browserWebBluetooth() {\n  return new BrowserWebBluetooth();\n}\n\nexport function consoleLoggerServiceConfig(options: AWBOptions) {\n  if (options && options.enableTracing) {\n    return new ConsoleLoggerService();\n  } else {\n    return new NoLoggerService();\n  }\n}\nexport function makeMeTokenInjector() {\n  return new InjectionToken('AWBOptions');\n}\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class WebBluetoothModule {\n  static forRoot(options: AWBOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: WebBluetoothModule,\n      providers: [\n        BluetoothCore,\n        {\n          provide: BrowserWebBluetooth,\n          useFactory: browserWebBluetooth\n        },\n        {\n          provide: makeMeTokenInjector,\n          useValue: options\n        },\n        {\n          provide: ConsoleLoggerService,\n          useFactory: consoleLoggerServiceConfig,\n          deps: [makeMeTokenInjector]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ble-root\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ble-root',\n  template: `\n   \n  `\n})\nexport class AppComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBatteryLevelComponent\n\nBatteryLevelComponent\n\nAppModule -->\n\nBatteryLevelComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nHumidityComponent\n\nHumidityComponent\n\nAppModule -->\n\nHumidityComponent->AppModule\n\n\n\n\n\nStepCounterComponent\n\nStepCounterComponent\n\nAppModule -->\n\nStepCounterComponent->AppModule\n\n\n\n\n\nTemperatureComponent\n\nTemperatureComponent\n\nAppModule -->\n\nTemperatureComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nWebBluetoothModule\n\nWebBluetoothModule\n\nAppModule -->\n\nWebBluetoothModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            BatteryLevelComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            HumidityComponent\n                        \n                        \n                            StepCounterComponent\n                        \n                        \n                            TemperatureComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WebBluetoothModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { LayoutModule } from '@angular/cdk/layout';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { WebBluetoothModule } from '@manekinekko/angular-web-bluetooth';\nimport { AppComponent } from './app.component';\nimport { BatteryLevelComponent } from './thingy52/battery-level.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HumidityComponent } from './thingy52/humidity.component';\nimport { StepCounterComponent } from './thingy52/stepcounter.component';\nimport { TemperatureComponent } from './thingy52/temperature.component';\nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BatteryLevelComponent,\n    TemperatureComponent,\n    HumidityComponent,\n    StepCounterComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    WebBluetoothModule.forRoot({\n      enableTracing: true\n    }),\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BatteryLevelComponent.html":{"url":"components/BatteryLevelComponent.html","title":"component - BatteryLevelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BatteryLevelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thingy52/battery-level.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-battery-level\n            \n\n\n            \n                styles\n                \n  :host {\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    text-align: center;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 222px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  sup {\n    font-size: 24px;\n  }\n  mat-progress-spinner {\n    top: 90px;\n    left: 5px;\n  }\n  mat-icon {\n    position: absolute;\n    bottom: 255px;\n    font-size: 38px;\n  }\n  \n            \n\n            \n                template\n                {{ value || \"000\" }}%\n\n\nbattery_charging_full\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                    Public\n                                console\n                            \n                            \n                                deviceSubscription\n                            \n                            \n                                getMethods\n                            \n                            \n                                mode\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                streamSubscription\n                            \n                            \n                                value\n                            \n                            \n                                valuesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                            \n                                getDeviceStatus\n                            \n                            \n                                hasError\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                requestValue\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    device\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BleService, snackBar: MatSnackBar, console: ConsoleLoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/thingy52/battery-level.component.ts:98\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        console\n                                                  \n                                                        \n                                                                        ConsoleLoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDeviceStatus\n                        \n                        \n                    \n                \n            \n            \n                \ngetDeviceStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasError\n                        \n                        \n                    \n                \n            \n            \n                \nhasError(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestValue\n                        \n                        \n                    \n                \n            \n            \n                \nrequestValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/battery-level.component.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'primary'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/battery-level.component.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            console\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConsoleLoggerService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/battery-level.component.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deviceSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/battery-level.component.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMethods\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/battery-level.component.ts:160\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'determinate'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/battery-level.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BleService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/battery-level.component.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/battery-level.component.ts:102\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            streamSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/battery-level.component.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/battery-level.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valuesSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/battery-level.component.ts:81\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        device\n                    \n                \n\n                \n                    \n                        getdevice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/thingy52/battery-level.component.ts:85\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { CompileShallowModuleMetadata } from '@angular/compiler';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\nimport { exit } from 'process';\nimport { consoleLoggerServiceConfig } from 'projects/manekinekko/angular-web-bluetooth/src/public_api';\nimport { Subscription } from 'rxjs';\nimport { BleService } from '../ble.service';\n\nexport const bleCore = (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l);\nexport const bleService = (b: BluetoothCore) => new BleService(b);\ndeclare var require: any;\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}];\n/*\nconst noble = require('noble');\nconst nextTick = require('next-tick');\n\n// Create a Linking object\nconst BeaconScanner = require('node-beacon-scanner');\nconst scanner = new BeaconScanner({'noble': noble});\n*/\nconst BeaconScanner = require('node-beacon-scanner');\nconst scanner = new BeaconScanner();\n@Component({\n  selector: 'ble-battery-level',\n  template: `\n    {{ value || \"000\" }}%\n    \n    \n    battery_charging_full\n  `,\n  styles: [`\n  :host {\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    text-align: center;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 222px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  sup {\n    font-size: 24px;\n  }\n  mat-progress-spinner {\n    top: 90px;\n    left: 5px;\n  }\n  mat-icon {\n    position: absolute;\n    bottom: 255px;\n    font-size: 38px;\n  }\n  `],\n  providers: PROVIDERS\n})\nexport class BatteryLevelComponent implements OnInit, OnDestroy {\n  value = null;\n  mode = 'determinate';\n  color = 'primary';\n  valuesSubscription: Subscription;\n  streamSubscription: Subscription;\n  deviceSubscription: Subscription;\n\n  get device() {\n    /*\n    scanner.onadvertisement = (ad) => {\n      console.log(JSON.stringify(ad, null, '  '));\n    };\n    \n    // Start scanning\n    scanner.startScan().then(() => {\n      console.log('Started to scan.')  ;\n    }).catch((error) => {\n      console.error(error);\n    });*/\n    return this.service.getDevice();\n  }\n\n  constructor(\n    public service: BleService,\n    public snackBar: MatSnackBar,\n    public console: ConsoleLoggerService) {\n\n    service.config({\n      decoder: (value: DataView) =>\n      value.getInt8(0),\n      service: 'battery_service',\n      characteristic: 'battery_level'\n    });\n  }\n\n  ngOnInit() {\n    // Set an Event handler for becons\n\n    /*\n    noble.on('stateChange', function (state) {\n      if (state === 'poweredOn') {\n        noble.startScanning();\n      } else {\n        noble.stopScanning();\n      }\n    });\n    \n    noble.on('discover', function (peripheral) {\n      console.log(`peripheral discovered (${peripheral.id} with address , connectable ${peripheral.connectable}, RSSI ${peripheral.rssi}:`);\n      console.log('\\thello my local name is:');\n      console.log(`\\t\\t${peripheral.advertisement.localName}`);\n      console.log('\\tcan I interest you in any of the following advertised services:');\n      console.log(`\\t\\t${JSON.stringify(peripheral.advertisement.serviceUuids)}`);\n    \n      const serviceData = peripheral.advertisement.serviceData;\n      if (serviceData && serviceData.length) {\n        console.log('\\there is my service data:');\n        for (const i in serviceData) {\n          console.log(`\\t\\t${JSON.stringify(serviceData[i].uuid)}: ${JSON.stringify(serviceData[i].data.toString('hex'))}`);\n        }\n      }\n      if (peripheral.advertisement.manufacturerData) {\n        console.log('\\there is my manufacturer data:');\n        console.log(`\\t\\t${JSON.stringify(peripheral.advertisement.manufacturerData.toString('hex'))}`);\n      }\n      if (peripheral.advertisement.txPowerLevel !== undefined) {\n        console.log('\\tmy TX power level is:');\n        console.log(`\\t\\t${peripheral.advertisement.txPowerLevel}`);\n      }\n    \n      console.log();\n    });\n    */\n    this.getDeviceStatus();\n\n    this.streamSubscription = this.service.stream()\n      .subscribe((value: number) => {\n        this.updateValue(value);\n      }, error => this.hasError(error));\n\n  }\n\n  getMethods = (obj) => {\n    let properties = new Set()\n    let currentObj = obj\n    do {\n      Object.getOwnPropertyNames(currentObj).map(item => properties.add(item))\n    } while ((currentObj = Object.getPrototypeOf(currentObj)))\n    return [...properties.keys()]\n  }\n  getDeviceStatus() {\n    this.deviceSubscription = this.service.getDevice()\n      .subscribe(device => {\n        if (device) {\n          this.color = 'warn';\n          this.mode = 'indeterminate';\n          this.value = null;\n          console.log(\"this is my device\",device);\n          console.log(\"device name:\",device.name);\n          console.log(\"device id:\",device.id);\n        } else {\n          // device not connected or disconnected\n          this.value = null;\n          this.mode = 'determinate';\n          this.color = 'primary';\n        }\n      }, this.hasError.bind(this));\n  }\n\n  requestValue() {\n    this.valuesSubscription = this.service.value()\n      .subscribe((value) => {\n        console.log(value),\n        this.updateValue(value)}\n        , error => this.hasError(error));\n  }\n\n  updateValue(value) {\n    this.console.log('Reading battery level %d', value);\n    this.value = value;\n    this.mode = 'determinate';\n  }\n\n  disconnect() {\n    this.service.disconnectDevice();\n    this.deviceSubscription.unsubscribe();\n    this.valuesSubscription.unsubscribe();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n\n  ngOnDestroy() {\n    this.valuesSubscription?.unsubscribe();\n    this.deviceSubscription?.unsubscribe();\n    this.streamSubscription?.unsubscribe();\n  }\n}\n\n\n    \n\n\n    \n            \n  :host {\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    text-align: center;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 222px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  sup {\n    font-size: 24px;\n  }\n  mat-progress-spinner {\n    top: 90px;\n    left: 5px;\n  }\n  mat-icon {\n    position: absolute;\n    bottom: 255px;\n    font-size: 38px;\n  }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ value || \"000\" }}%battery_charging_full'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BatteryLevelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BleService.html":{"url":"injectables/BleService.html","title":"injectable - BleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ble.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _config\n                            \n                            \n                                    Public\n                                ble\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                disconnectDevice\n                            \n                            \n                                getDevice\n                            \n                            \n                                stream\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ble: BluetoothCore)\n                    \n                \n                        \n                            \n                                Defined in src/app/ble.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ble\n                                                  \n                                                        \n                                                                        BluetoothCore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            config\n                        \n                        \n                    \n                \n            \n            \n                \nconfig(options: ServiceOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ble.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ServiceOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnectDevice\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnectDevice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ble.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDevice\n                        \n                        \n                    \n                \n            \n            \n                \ngetDevice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ble.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stream\n                        \n                        \n                    \n                \n            \n            \n                \nstream()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ble.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            value\n                        \n                        \n                    \n                \n            \n            \n                \nvalue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ble.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ServiceOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ble.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ble\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BluetoothCore\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ble.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\nimport { map } from 'rxjs/operators';\n\ntype ServiceOptions = {\n    characteristic: string;\n    service: string,\n    decoder(value: DataView): number | {[key: string]: number}\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BleService {\n\n    // tslint:disable-next-line: variable-name\n    private _config: ServiceOptions;\n\n  constructor(public ble: BluetoothCore) {}\n\n  config(options: ServiceOptions) {\n    this._config = options;\n  }\n\n  getDevice() {\n    return this.ble.getDevice$();\n  }\n\n  stream() {\n    return this.ble.streamValues$().pipe(\n      map(this._config.decoder)\n    );\n  }\n\n  value() {\n    return this.ble\n      .value$({\n        service: this._config.service,\n        characteristic: this._config.characteristic\n      })\n      .pipe(\n        map(this._config.decoder)\n      );\n  }\n\n  disconnectDevice() {\n    this.ble.disconnectDevice();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BrowserWebBluetooth.html":{"url":"injectables/BrowserWebBluetooth.html","title":"injectable - BrowserWebBluetooth","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BrowserWebBluetooth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ble\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                requestDevice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestDevice\n                        \n                        \n                    \n                \n            \n            \n                \nrequestDevice(options: RequestDeviceOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            RequestDeviceOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ble\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BrowserWebBluetooth {\n  private ble;\n\n  constructor() {\n    this.ble = navigator.bluetooth;\n    if (!this.ble) {\n      throw new Error('Your browser does not support Smart Bluetooth. See http://caniuse.com/#search=Bluetooth for more details.');\n    }\n  }\n\n  requestDevice(options: RequestDeviceOptions): Promise {\n    return this.ble.requestDevice(options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleLoggerService.html":{"url":"injectables/ConsoleLoggerService.html","title":"injectable - ConsoleLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Logger {\n  log(args: string[]): void;\n  error(args: string[]): void;\n  warn(args: string[]): void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsoleLoggerService implements Logger {\n  log(...args) {\n    console.log.apply(console, args);\n  }\n  error(...args) {\n    console.error.apply(console, args);\n  }\n  warn(...args) {\n    console.warn.apply(console, args);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoggerService implements Logger {\n  log(...args) {}\n  error(...args) {}\n  warn(...args) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ble-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ble-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent {\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n  Angular Web BLE Demo\n\n\n\n  \n\n    \n\n    \n      \n        \n          \n            Battery Level\n            \n              more_vert\n            \n            \n              \n                bluetooth_searching\n                Connect\n              \n              \n                bluetooth_disabled\n                Disconnect\n              \n            \n          \n          \n            {{ device.name }}\n          \n        \n        \n          \n        \n      \n    \n\n    \n\n    \n      \n        \n          \n            Humidity Level\n            \n              more_vert\n            \n            \n              \n                bluetooth_searching\n                Connect\n              \n              \n                bluetooth_disabled\n                Disconnect\n              \n            \n          \n          \n            {{ device.name }}\n          \n        \n        \n          \n        \n      \n    \n\n    \n\n    \n      \n        \n          \n            Temperature\n            \n              more_vert\n            \n            \n              \n                bluetooth_searching\n                Connect\n              \n              \n                bluetooth_disabled\n                Disconnect\n              \n            \n          \n          \n            {{ device.name }}\n          \n        \n        \n          \n        \n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./dashboard.component.css\n                \n                section {\n  padding: 40px;\n  max-width: 700px;\n  margin: 0 auto;\n}\n\n.mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n\n.grid-container {\n  margin: 20px;\n}\n\n.dashboard-card {\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  right: 15px;\n  bottom: 15px;\n}\n\n.more-button {\n  position: absolute;\n  top: 5px;\n  right: 10px;\n}\n\n.dashboard-card-content {\n  text-align: center;\n}\n\n\nimg {\n  width: 32px;\n  margin: 0 10px;\n}\n\n.mat-icon {\n  margin: 0 10px 0 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Angular Web BLE Demo                                              Battery Level                          more_vert                                                      bluetooth_searching                Connect                                            bluetooth_disabled                Disconnect                                                          {{ device.name }}                                                                                                  Humidity Level                          more_vert                                                      bluetooth_searching                Connect                                            bluetooth_disabled                Disconnect                                                          {{ device.name }}                                                                                                  Temperature                          more_vert                                                      bluetooth_searching                Connect                                            bluetooth_disabled                Disconnect                                                          {{ device.name }}                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FakeBluetoothDevice.html":{"url":"classes/FakeBluetoothDevice.html","title":"class - FakeBluetoothDevice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FakeBluetoothDevice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gatt\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Private\n                                listeners\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEventListener\n                            \n                            \n                                clear\n                            \n                            \n                                disconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, name: string)\n                    \n                \n                        \n                            \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gatt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BluetoothRemoteGATTServer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            listeners\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n    gattserverdisconnected: []\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEventListener\n                        \n                        \n                    \n                \n            \n            \n                \naddEventListener(type: string, listener: EventListener)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listener\n                                    \n                                            EventListener\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FakeBluetoothDevice {\n  gatt: BluetoothRemoteGATTServer;\n  private listeners: {\n    [key in 'gattserverdisconnected']: EventListener[]\n  } = {\n    gattserverdisconnected: []\n  };\n\n  constructor(public id: string, public name: string) {\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  disconnect() {\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.gattserverdisconnected.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.id = undefined;\n    this.name = undefined;\n    this.listeners = {\n      gattserverdisconnected: []\n    };\n  }\n}\n\nexport class FakeBluetoothRemoteGATTServer {\n  connected = false;\n\n  constructor(public device, public services: { [key: string]: { service, primary: boolean } }) {\n    device.gatt = this;\n  }\n\n  connect() {\n    this.connected = true;\n    return Promise.resolve(this);\n  }\n\n  getPrimaryService(service: BluetoothServiceUUID) {\n    return Promise.resolve(this.services[service].service);\n  }\n\n  disconnect() {\n    this.device.disconnect();\n    this.connected = false;\n  }\n}\n\nexport class FakeBluetoothRemoteGATTService {\n  constructor(public device, public characteristics) {\n    this.characteristics.service = this;\n  }\n\n  getCharacteristic(characteristic: BluetoothCharacteristicUUID) {\n    return Promise.resolve(this.characteristics[characteristic]);\n  }\n}\n\nexport class FakeBluetoothRemoteGATTCharacteristic {\n  value: DataView;\n  properties: BluetoothCharacteristicProperties;\n  private readonly initialValue: DataView;\n  private listeners: {\n    [key in 'characteristicvaluechanged']: EventListener[]\n  } = {\n    characteristicvaluechanged: []\n  };\n\n  constructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView) {\n    this.properties = properties;\n    this.value = initialValue;\n    this.initialValue = initialValue;\n  }\n\n  readValue() {\n    return Promise.resolve(this.value);\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  changeValue(value: DataView) {\n    this.value = value;\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.characteristicvaluechanged.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.value = this.initialValue;\n    this.listeners = {\n      characteristicvaluechanged: []\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FakeBluetoothRemoteGATTCharacteristic.html":{"url":"classes/FakeBluetoothRemoteGATTCharacteristic.html","title":"class - FakeBluetoothRemoteGATTCharacteristic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FakeBluetoothRemoteGATTCharacteristic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                initialValue\n                            \n                            \n                                    Private\n                                listeners\n                            \n                            \n                                properties\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEventListener\n                            \n                            \n                                changeValue\n                            \n                            \n                                clear\n                            \n                            \n                                readValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView)\n                    \n                \n                        \n                            \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                    BluetoothCharacteristicProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initialValue\n                                                  \n                                                        \n                                                                    DataView\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            initialValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataView\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            listeners\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n    characteristicvaluechanged: []\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BluetoothCharacteristicProperties\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataView\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:71\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEventListener\n                        \n                        \n                    \n                \n            \n            \n                \naddEventListener(type: string, listener: EventListener)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listener\n                                    \n                                            EventListener\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeValue\n                        \n                        \n                    \n                \n            \n            \n                \nchangeValue(value: DataView)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            DataView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readValue\n                        \n                        \n                    \n                \n            \n            \n                \nreadValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FakeBluetoothDevice {\n  gatt: BluetoothRemoteGATTServer;\n  private listeners: {\n    [key in 'gattserverdisconnected']: EventListener[]\n  } = {\n    gattserverdisconnected: []\n  };\n\n  constructor(public id: string, public name: string) {\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  disconnect() {\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.gattserverdisconnected.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.id = undefined;\n    this.name = undefined;\n    this.listeners = {\n      gattserverdisconnected: []\n    };\n  }\n}\n\nexport class FakeBluetoothRemoteGATTServer {\n  connected = false;\n\n  constructor(public device, public services: { [key: string]: { service, primary: boolean } }) {\n    device.gatt = this;\n  }\n\n  connect() {\n    this.connected = true;\n    return Promise.resolve(this);\n  }\n\n  getPrimaryService(service: BluetoothServiceUUID) {\n    return Promise.resolve(this.services[service].service);\n  }\n\n  disconnect() {\n    this.device.disconnect();\n    this.connected = false;\n  }\n}\n\nexport class FakeBluetoothRemoteGATTService {\n  constructor(public device, public characteristics) {\n    this.characteristics.service = this;\n  }\n\n  getCharacteristic(characteristic: BluetoothCharacteristicUUID) {\n    return Promise.resolve(this.characteristics[characteristic]);\n  }\n}\n\nexport class FakeBluetoothRemoteGATTCharacteristic {\n  value: DataView;\n  properties: BluetoothCharacteristicProperties;\n  private readonly initialValue: DataView;\n  private listeners: {\n    [key in 'characteristicvaluechanged']: EventListener[]\n  } = {\n    characteristicvaluechanged: []\n  };\n\n  constructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView) {\n    this.properties = properties;\n    this.value = initialValue;\n    this.initialValue = initialValue;\n  }\n\n  readValue() {\n    return Promise.resolve(this.value);\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  changeValue(value: DataView) {\n    this.value = value;\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.characteristicvaluechanged.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.value = this.initialValue;\n    this.listeners = {\n      characteristicvaluechanged: []\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FakeBluetoothRemoteGATTServer.html":{"url":"classes/FakeBluetoothRemoteGATTServer.html","title":"class - FakeBluetoothRemoteGATTServer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FakeBluetoothRemoteGATTServer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connected\n                            \n                            \n                                    Public\n                                device\n                            \n                            \n                                    Public\n                                services\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                getPrimaryService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(device, services: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        device\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        services\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connected\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            services\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:41\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPrimaryService\n                        \n                        \n                    \n                \n            \n            \n                \ngetPrimaryService(service: BluetoothServiceUUID)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    service\n                                    \n                                            BluetoothServiceUUID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FakeBluetoothDevice {\n  gatt: BluetoothRemoteGATTServer;\n  private listeners: {\n    [key in 'gattserverdisconnected']: EventListener[]\n  } = {\n    gattserverdisconnected: []\n  };\n\n  constructor(public id: string, public name: string) {\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  disconnect() {\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.gattserverdisconnected.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.id = undefined;\n    this.name = undefined;\n    this.listeners = {\n      gattserverdisconnected: []\n    };\n  }\n}\n\nexport class FakeBluetoothRemoteGATTServer {\n  connected = false;\n\n  constructor(public device, public services: { [key: string]: { service, primary: boolean } }) {\n    device.gatt = this;\n  }\n\n  connect() {\n    this.connected = true;\n    return Promise.resolve(this);\n  }\n\n  getPrimaryService(service: BluetoothServiceUUID) {\n    return Promise.resolve(this.services[service].service);\n  }\n\n  disconnect() {\n    this.device.disconnect();\n    this.connected = false;\n  }\n}\n\nexport class FakeBluetoothRemoteGATTService {\n  constructor(public device, public characteristics) {\n    this.characteristics.service = this;\n  }\n\n  getCharacteristic(characteristic: BluetoothCharacteristicUUID) {\n    return Promise.resolve(this.characteristics[characteristic]);\n  }\n}\n\nexport class FakeBluetoothRemoteGATTCharacteristic {\n  value: DataView;\n  properties: BluetoothCharacteristicProperties;\n  private readonly initialValue: DataView;\n  private listeners: {\n    [key in 'characteristicvaluechanged']: EventListener[]\n  } = {\n    characteristicvaluechanged: []\n  };\n\n  constructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView) {\n    this.properties = properties;\n    this.value = initialValue;\n    this.initialValue = initialValue;\n  }\n\n  readValue() {\n    return Promise.resolve(this.value);\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  changeValue(value: DataView) {\n    this.value = value;\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.characteristicvaluechanged.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.value = this.initialValue;\n    this.listeners = {\n      characteristicvaluechanged: []\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FakeBluetoothRemoteGATTService.html":{"url":"classes/FakeBluetoothRemoteGATTService.html","title":"class - FakeBluetoothRemoteGATTService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FakeBluetoothRemoteGATTService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                characteristics\n                            \n                            \n                                    Public\n                                device\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCharacteristic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(device, characteristics)\n                    \n                \n                        \n                            \n                                Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        device\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        characteristics\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            characteristics\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            device\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:61\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCharacteristic\n                        \n                        \n                    \n                \n            \n            \n                \ngetCharacteristic(characteristic: BluetoothCharacteristicUUID)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    characteristic\n                                    \n                                            BluetoothCharacteristicUUID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FakeBluetoothDevice {\n  gatt: BluetoothRemoteGATTServer;\n  private listeners: {\n    [key in 'gattserverdisconnected']: EventListener[]\n  } = {\n    gattserverdisconnected: []\n  };\n\n  constructor(public id: string, public name: string) {\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  disconnect() {\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.gattserverdisconnected.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.id = undefined;\n    this.name = undefined;\n    this.listeners = {\n      gattserverdisconnected: []\n    };\n  }\n}\n\nexport class FakeBluetoothRemoteGATTServer {\n  connected = false;\n\n  constructor(public device, public services: { [key: string]: { service, primary: boolean } }) {\n    device.gatt = this;\n  }\n\n  connect() {\n    this.connected = true;\n    return Promise.resolve(this);\n  }\n\n  getPrimaryService(service: BluetoothServiceUUID) {\n    return Promise.resolve(this.services[service].service);\n  }\n\n  disconnect() {\n    this.device.disconnect();\n    this.connected = false;\n  }\n}\n\nexport class FakeBluetoothRemoteGATTService {\n  constructor(public device, public characteristics) {\n    this.characteristics.service = this;\n  }\n\n  getCharacteristic(characteristic: BluetoothCharacteristicUUID) {\n    return Promise.resolve(this.characteristics[characteristic]);\n  }\n}\n\nexport class FakeBluetoothRemoteGATTCharacteristic {\n  value: DataView;\n  properties: BluetoothCharacteristicProperties;\n  private readonly initialValue: DataView;\n  private listeners: {\n    [key in 'characteristicvaluechanged']: EventListener[]\n  } = {\n    characteristicvaluechanged: []\n  };\n\n  constructor(properties: BluetoothCharacteristicProperties, initialValue?: DataView) {\n    this.properties = properties;\n    this.value = initialValue;\n    this.initialValue = initialValue;\n  }\n\n  readValue() {\n    return Promise.resolve(this.value);\n  }\n\n  addEventListener(type: string, listener: EventListener) {\n    this.listeners[type] = [\n      ...this.listeners[type],\n      listener\n    ];\n  }\n\n  changeValue(value: DataView) {\n    this.value = value;\n    const mockedEvent = {target: this} as unknown;\n    this.listeners.characteristicvaluechanged.forEach(listener => listener(mockedEvent as Event));\n  }\n\n  clear() {\n    this.value = this.initialValue;\n    this.listeners = {\n      characteristicvaluechanged: []\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HumidityComponent.html":{"url":"components/HumidityComponent.html","title":"component - HumidityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HumidityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thingy52/humidity.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-humidity\n            \n\n\n            \n                styles\n                \n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }\n            \n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                chartRef\n                            \n                            \n                                series\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                streamSubscription\n                            \n                            \n                                valuesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                            \n                                hasError\n                            \n                            \n                                initChart\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                requestValue\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    device\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BleService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/thingy52/humidity.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasError\n                        \n                        \n                    \n                \n            \n            \n                \nhasError(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initChart\n                        \n                        \n                    \n                \n            \n            \n                \ninitChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestValue\n                        \n                        \n                    \n                \n            \n            \n                \nrequestValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/humidity.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SmoothieChart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/humidity.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('chart', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/humidity.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            series\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TimeSeries\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/humidity.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BleService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/humidity.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/humidity.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            streamSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/humidity.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valuesSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/humidity.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        device\n                    \n                \n\n                \n                    \n                        getdevice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/thingy52/humidity.component.ts:46\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\nimport { of, Subscription } from 'rxjs';\nimport { SmoothieChart, TimeSeries } from 'smoothie';\nimport { BleService } from '../ble.service';\n\nexport const bleCore = (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l);\nexport const bleService = (b: BluetoothCore) => new BleService(b);\n\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}];\n\n@Component({\n  selector: 'ble-humidity',\n  template: `\n    \n  `,\n  styles: [`\n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }`],\n  providers: PROVIDERS\n})\nexport class HumidityComponent implements OnInit, OnDestroy {\n  series: TimeSeries;\n  chart: SmoothieChart;\n  valuesSubscription: Subscription;\n  streamSubscription: Subscription;\n\n  @ViewChild('chart', {static: true})\n  chartRef: ElementRef;\n\n  get device() {\n    return this.service.getDevice();\n  }\n\n  constructor(\n    public service: BleService,\n    public snackBar: MatSnackBar) {\n\n    service.config({\n      decoder: (value: DataView) => value.getInt8(0),\n      service: 'ef680200-9b35-4933-9b10-52ffa9740042',\n      characteristic: 'ef680203-9b35-4933-9b10-52ffa9740042'\n    });\n  }\n\n  ngOnInit() {\n    this.initChart();\n\n    this.streamSubscription = this.service.stream()\n    .subscribe(\n      () => this.updateValue.bind(this),\n      () => of(this.hasError.bind(this)),\n      );\n  }\n\n  initChart() {\n    this.series = new window.TimeSeries() as TimeSeries;\n    const canvas = this.chartRef.nativeElement;\n    // tslint:disable-next-line: max-line-length\n    this.chart = new window.SmoothieChart({ interpolation: 'step', grid: { fillStyle: '#ffffff', strokeStyle: 'rgba(119,119,119,0.18)', borderVisible: false }, labels: { fillStyle: '#000000', fontSize: 17 }, tooltip: true });\n    this.chart.addTimeSeries(this.series, { lineWidth: 1, strokeStyle: '#ff0000', fillStyle: 'rgba(255,161,161,0.30)' });\n    this.chart.streamTo(canvas);\n    this.chart.stop();\n  }\n\n  requestValue() {\n    this.valuesSubscription = this.service.value()\n    .subscribe(\n      () => null,\n      () => of(this.hasError.bind(this)),\n    );\n  }\n\n\n  updateValue(value: number) {\n    console.log('Reading humidity %d', value);\n    this.series.append(Date.now(), value);\n    this.chart.start();\n  }\n\n\n  disconnect() {\n    this.service.disconnectDevice();\n    this.series.clear();\n    this.chart.stop();\n    this.valuesSubscription.unsubscribe();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n\n  ngOnDestroy() {\n    this.valuesSubscription.unsubscribe();\n    this.streamSubscription.unsubscribe();\n  }\n}\n\n    \n\n\n    \n            \n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HumidityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Logger.html":{"url":"interfaces/Logger.html","title":"interface - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    error\n                                \n                                \n                                    log\n                                \n                                \n                                    warn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(args: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(args: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(args: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Logger {\n  log(args: string[]): void;\n  error(args: string[]): void;\n  warn(args: string[]): void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsoleLoggerService implements Logger {\n  log(...args) {\n    console.log.apply(console, args);\n  }\n  error(...args) {\n    console.error.apply(console, args);\n  }\n  warn(...args) {\n    console.warn.apply(console, args);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoggerService implements Logger {\n  log(...args) {}\n  error(...args) {}\n  warn(...args) {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoLoggerService.html":{"url":"injectables/NoLoggerService.html","title":"injectable - NoLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NoLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface Logger {\n  log(args: string[]): void;\n  error(args: string[]): void;\n  warn(args: string[]): void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsoleLoggerService implements Logger {\n  log(...args) {\n    console.log.apply(console, args);\n  }\n  error(...args) {\n    console.error.apply(console, args);\n  }\n  warn(...args) {\n    console.warn.apply(console, args);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoggerService implements Logger {\n  log(...args) {}\n  error(...args) {}\n  warn(...args) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerWebBluetooth.html":{"url":"injectables/ServerWebBluetooth.html","title":"injectable - ServerWebBluetooth","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ServerWebBluetooth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/platform/server.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            instance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    instance()\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/platform/server.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ServerWebBluetooth {\n  static instance() {\n    // mocked object for now\n    return {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StepCounterComponent.html":{"url":"components/StepCounterComponent.html","title":"component - StepCounterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StepCounterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thingy52/stepcounter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-stepcounter\n            \n\n\n            \n                styles\n                \n  :host {\n    display: block;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 112px;\n    left: 214px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  mat-icon {\n    position: absolute;\n    bottom: 55px;\n    left: 258px;\n    font-size: 38px;\n  }\n            \n\n            \n                template\n                {{ value || \"000\" }}\ndirections_walk\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                streamSubscription\n                            \n                            \n                                value\n                            \n                            \n                                valuesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                            \n                                hasError\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                requestValue\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    device\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BleService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/thingy52/stepcounter.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasError\n                        \n                        \n                    \n                \n            \n            \n                \nhasError(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestValue\n                        \n                        \n                    \n                \n            \n            \n                \nrequestValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/stepcounter.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BleService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/stepcounter.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/stepcounter.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            streamSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/stepcounter.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/stepcounter.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valuesSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/stepcounter.component.ts:50\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        device\n                    \n                \n\n                \n                    \n                        getdevice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/thingy52/stepcounter.component.ts:54\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\nimport { Subscription } from 'rxjs';\nimport { BleService } from '../ble.service';\n\nexport const bleCore = (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l);\nexport const bleService = (b: BluetoothCore) => new BleService(b);\n\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}];\n\n@Component({\n  selector: 'ble-stepcounter',\n  template: `\n  {{ value || \"000\" }}\n  directions_walk\n  `,\n  styles: [`\n  :host {\n    display: block;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 112px;\n    left: 214px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  mat-icon {\n    position: absolute;\n    bottom: 55px;\n    left: 258px;\n    font-size: 38px;\n  }`],\n  providers: PROVIDERS\n})\nexport class StepCounterComponent implements OnInit, OnDestroy {\n  valuesSubscription: Subscription;\n  streamSubscription: Subscription;\n  value = 0;\n\n  get device() {\n    return this.service.getDevice();\n  }\n\n  constructor(\n    public service: BleService,\n    public snackBar: MatSnackBar) {\n\n    service.config({\n      decoder: (value: DataView) => {\n        const count = value.getUint32(0, true);\n        const time = value.getUint32(4, true);\n        return {\n          count, time\n        };\n      },\n      service: 'ef680400-9b35-4933-9b10-52ffa9740042',\n      characteristic: 'ef680405-9b35-4933-9b10-52ffa9740042'\n    });\n  }\n\n  ngOnInit() {\n    this.streamSubscription = this.service.stream()\n      .subscribe(() => this.updateValue.bind(this), error => this.hasError.bind(this));\n  }\n\n  requestValue() {\n    this.valuesSubscription = this.service.value()\n      .subscribe(() => null, error => this.hasError.bind(this));\n  }\n\n  updateValue(value: { time: number, count: number }) {\n    console.log('Reading step counter %d', value);\n    this.value = value.count;\n  }\n\n  disconnect() {\n    this.service.disconnectDevice();\n    this.valuesSubscription.unsubscribe();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n\n  ngOnDestroy() {\n    this.valuesSubscription.unsubscribe();\n    this.streamSubscription.unsubscribe();\n  }\n}\n\n\n\n    \n\n\n    \n            \n  :host {\n    display: block;\n  }\n  span {\n    font-size: 5em;\n    position: absolute;\n    top: 112px;\n    left: 214px;\n    width: 120px;\n    display: block;\n    text-align: center;\n  }\n  mat-icon {\n    position: absolute;\n    bottom: 55px;\n    left: 258px;\n    font-size: 38px;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ value || \"000\" }}directions_walk'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StepCounterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TemperatureComponent.html":{"url":"components/TemperatureComponent.html","title":"component - TemperatureComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TemperatureComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thingy52/temperature.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PROVIDERS\n                \n            \n\n\n            \n                selector\n                ble-temperature\n            \n\n\n            \n                styles\n                \n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }\n            \n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                chartRef\n                            \n                            \n                                series\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                streamSubscription\n                            \n                            \n                                valuesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                            \n                                hasError\n                            \n                            \n                                initChart\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                requestValue\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    device\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BleService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/thingy52/temperature.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasError\n                        \n                        \n                    \n                \n            \n            \n                \nhasError(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initChart\n                        \n                        \n                    \n                \n            \n            \n                \ninitChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestValue\n                        \n                        \n                    \n                \n            \n            \n                \nrequestValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thingy52/temperature.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SmoothieChart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/temperature.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('chart', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/temperature.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            series\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TimeSeries\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/temperature.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BleService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/temperature.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/temperature.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            streamSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/temperature.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valuesSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/thingy52/temperature.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        device\n                    \n                \n\n                \n                    \n                        getdevice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/thingy52/temperature.component.ts:46\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BluetoothCore, BrowserWebBluetooth, ConsoleLoggerService } from '@manekinekko/angular-web-bluetooth';\nimport { Subscription } from 'rxjs';\nimport { SmoothieChart, TimeSeries } from 'smoothie';\nimport { BleService } from '../ble.service';\n\nexport const bleCore = (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l);\nexport const bleService = (b: BluetoothCore) => new BleService(b);\n\n\n// make sure we get a singleton instance of each service\nconst PROVIDERS = [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}];\n\n@Component({\n  selector: 'ble-temperature',\n  template: `\n    \n  `,\n  styles: [`\n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }`],\n  providers: PROVIDERS\n})\nexport class TemperatureComponent implements OnInit, OnDestroy {\n  series: TimeSeries;\n  chart: SmoothieChart;\n  valuesSubscription: Subscription;\n  streamSubscription: Subscription;\n\n  @ViewChild('chart', {static: true})\n  chartRef: ElementRef;\n\n  get device() {\n    return this.service.getDevice();\n  }\n\n  constructor(\n    public service: BleService,\n    public snackBar: MatSnackBar) {\n\n    service.config({\n      characteristic: 'ef680201-9b35-4933-9b10-52ffa9740042',\n      service: 'ef680200-9b35-4933-9b10-52ffa9740042',\n      decoder: (value: DataView) => {\n        const integer = value.getInt8(0);\n        const decimal = value.getUint8(1);\n        return integer + decimal / 100;\n      }\n    });\n\n  }\n\n  ngOnInit() {\n    this.initChart();\n\n    this.streamSubscription = this.service.stream()\n      .subscribe( () => this.updateValue.bind(this), error => this.hasError.bind(this));\n  }\n\n  initChart() {\n    this.series = new window.TimeSeries() as TimeSeries;\n    const canvas = this.chartRef.nativeElement;\n    this.chart = new window.SmoothieChart({\n      interpolation: 'step',\n      grid: {\n        fillStyle: '#ffffff',\n        strokeStyle: 'rgba(119,119,119,0.18)',\n        borderVisible: false\n      },\n      labels: {\n        fillStyle: '#000000',\n        fontSize: 17\n      },\n      tooltip: true\n    });\n    this.chart.addTimeSeries(this.series, { lineWidth: 1, strokeStyle: '#ff0000', fillStyle: 'rgba(255,161,161,0.30)' });\n    this.chart.streamTo(canvas);\n    this.chart.stop();\n  }\n\n  requestValue() {\n    this.valuesSubscription = this.service.value()\n      .subscribe( () => null, error => this.hasError.bind(this));\n  }\n\n  updateValue(value: number) {\n    console.log('Reading temperature %d', value);\n    this.series.append(Date.now(), value);\n    this.chart.start();\n  }\n\n  disconnect() {\n    this.service.disconnectDevice();\n    this.series.clear();\n    this.chart.stop();\n    this.valuesSubscription.unsubscribe();\n  }\n\n  hasError(error: string) {\n    this.snackBar.open(error, 'Close');\n  }\n\n  ngOnDestroy() {\n    this.valuesSubscription.unsubscribe();\n    this.streamSubscription.unsubscribe();\n  }\n}\n\n\n\n    \n\n\n    \n            \n  :host {\n    display: block;\n  }\n  canvas {\n    margin-left: -16px;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'},{'name': 'DashboardComponent', 'selector': 'ble-dashboard'},{'name': 'HumidityComponent', 'selector': 'ble-humidity'},{'name': 'StepCounterComponent', 'selector': 'ble-stepcounter'},{'name': 'TemperatureComponent', 'selector': 'ble-temperature'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TemperatureComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WebBluetoothModule.html":{"url":"modules/WebBluetoothModule.html","title":"module - WebBluetoothModule","body":"\n                   \n\n\n\n\n    Modules\n    WebBluetoothModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: AWBOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AWBOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BluetoothCore } from './bluetooth.service';\nimport { BrowserWebBluetooth } from './platform/browser';\n\nimport { ConsoleLoggerService, NoLoggerService } from './logger.service';\n\nexport interface AWBOptions {\n  enableTracing?: boolean;\n}\n\nexport function browserWebBluetooth() {\n  return new BrowserWebBluetooth();\n}\n\nexport function consoleLoggerServiceConfig(options: AWBOptions) {\n  if (options && options.enableTracing) {\n    return new ConsoleLoggerService();\n  } else {\n    return new NoLoggerService();\n  }\n}\nexport function makeMeTokenInjector() {\n  return new InjectionToken('AWBOptions');\n}\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class WebBluetoothModule {\n  static forRoot(options: AWBOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: WebBluetoothModule,\n      providers: [\n        BluetoothCore,\n        {\n          provide: BrowserWebBluetooth,\n          useFactory: browserWebBluetooth\n        },\n        {\n          provide: makeMeTokenInjector,\n          useValue: options\n        },\n        {\n          provide: ConsoleLoggerService,\n          useFactory: consoleLoggerServiceConfig,\n          deps: [makeMeTokenInjector]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n            \n            interface\n            AWBOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n            \n            function\n            browserWebBluetooth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n            \n            function\n            consoleLoggerServiceConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n            \n            function\n            makeMeTokenInjector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.service.ts\n            \n            injectable\n            BluetoothCore\n            \n                67 %\n                (21/31)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/lang/uuids/ti-sensortag2.ts\n            \n            variable\n            TI_SENSORAG_SERVICES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/lang/uuids/ti-sensortag2.ts\n            \n            variable\n            TiTag\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n            \n            injectable\n            ConsoleLoggerService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n            \n            injectable\n            NoLoggerService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/logger.service.ts\n            \n            interface\n            Logger\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/platform/browser.ts\n            \n            injectable\n            BrowserWebBluetooth\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/platform/server.ts\n            \n            injectable\n            ServerWebBluetooth\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n            \n            class\n            FakeBluetoothDevice\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n            \n            class\n            FakeBluetoothRemoteGATTCharacteristic\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n            \n            class\n            FakeBluetoothRemoteGATTServer\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/manekinekko/angular-web-bluetooth/src/lib/test.utils.ts\n            \n            class\n            FakeBluetoothRemoteGATTService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ble.service.ts\n            \n            injectable\n            BleService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/thingy52/battery-level.component.ts\n            \n            component\n            BatteryLevelComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/thingy52/battery-level.component.ts\n            \n            variable\n            BeaconScanner\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/battery-level.component.ts\n            \n            variable\n            bleCore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/battery-level.component.ts\n            \n            variable\n            bleService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/battery-level.component.ts\n            \n            variable\n            PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/battery-level.component.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/battery-level.component.ts\n            \n            variable\n            scanner\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/humidity.component.ts\n            \n            component\n            HumidityComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/thingy52/humidity.component.ts\n            \n            variable\n            bleCore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/humidity.component.ts\n            \n            variable\n            bleService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/humidity.component.ts\n            \n            variable\n            PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/stepcounter.component.ts\n            \n            component\n            StepCounterComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/thingy52/stepcounter.component.ts\n            \n            variable\n            bleCore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/stepcounter.component.ts\n            \n            variable\n            bleService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/stepcounter.component.ts\n            \n            variable\n            PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/temperature.component.ts\n            \n            component\n            TemperatureComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/thingy52/temperature.component.ts\n            \n            variable\n            bleCore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/temperature.component.ts\n            \n            variable\n            bleService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thingy52/temperature.component.ts\n            \n            variable\n            PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/polyfills.ts\n            \n            variable\n            global\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/polyfills.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @abandonware/noble : ^1.9.2-14\n        \n            @angular/animations : ~11.2.0\n        \n            @angular/cdk : ^11.2.0\n        \n            @angular/common : ~11.2.0\n        \n            @angular/compiler : ~11.2.0\n        \n            @angular/core : ~11.2.0\n        \n            @angular/forms : ~11.2.0\n        \n            @angular/material : ^11.2.0\n        \n            @angular/platform-browser : ~11.2.0\n        \n            @angular/platform-browser-dynamic : ~11.2.0\n        \n            @angular/router : ~11.2.0\n        \n            @release-it/conventional-changelog : ^1.1.4\n        \n            @types/web-bluetooth : 0.0.6\n        \n            next-tick : ^1.1.0\n        \n            noble : ^1.9.1\n        \n            node-beacon-scanner : ^0.2.2\n        \n            process : ^0.11.10\n        \n            rxjs : ~6.6.3\n        \n            smoothie : ^1.35.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            browserWebBluetooth   (projects/.../bluetooth.module.ts)\n                        \n                        \n                            consoleLoggerServiceConfig   (projects/.../bluetooth.module.ts)\n                        \n                        \n                            makeMeTokenInjector   (projects/.../bluetooth.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            browserWebBluetooth\n                        \n                        \n                    \n                \n            \n            \n                \nbrowserWebBluetooth()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            consoleLoggerServiceConfig\n                        \n                        \n                    \n                \n            \n            \n                \nconsoleLoggerServiceConfig(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeMeTokenInjector\n                        \n                        \n                    \n                \n            \n            \n                \nmakeMeTokenInjector()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\nThe missing Web Bluetooth module for Angular\n\n\nInstall\nnpm install -S @manekinekko/angular-web-bluetooth @types/web-bluetooth\nNote: Make also sure the @types/web-bluetooth is installed correctly in your node_modules.\n\nGetting started\n1) import the WebBluetoothModule module\nimport { NgModule } from '@angular/core';\nimport { WebBluetoothModule } from '@manekinekko/angular-web-bluetooth';\n\n@NgModule({\n  imports: [\n    //...,\n    WebBluetoothModule.forRoot({\n      enableTracing: true // or false, this will enable logs in the browser's console\n    })\n  ]\n  //...\n})\nexport class AppModule {}2.a) use it in your service/component (the easiest way)\nHere is an annotated example using the BluetoothCore service:\nimport { Injectable } from '@angular/core';\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatteryLevelService {\n\n  constructor(public readonly ble: BluetoothCore) {}\n\n  getDevice() {\n    // call this method to get the connected device\n    return this.ble.getDevice$();\n  }\n\n  stream() {\n    // call this method to get a stream of values emitted by the device for a given characteristic\n    return this.ble.streamValues$().pipe(\n      map((value: DataView) => value.getInt8(0))\n    );\n  }\n\n  disconnectDevice() {\n    // call this method to disconnect from the device. This method will also stop clear all subscribed notifications\n    this.ble.disconnectDevice();\n  }\n\n  value() {\n    console.log('Getting Battery level...');\n\n    return this.ble\n      .value$({\n        service: 'battery_service',\n        characteristic: 'battery_level'\n      });\n  }\n\n}2.b) use it in your service/component (the advanced way)\nHere is an annotated example using the BluetoothCore service:\nimport { Injectable } from '@angular/core';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatteryLevelService {\n  static GATT_CHARACTERISTIC_BATTERY_LEVEL = 'battery_level';\n  static GATT_PRIMARY_SERVICE = 'battery_service';\n\n  constructor(public ble: BluetoothCore) {}\n\n  getDevice() {\n    // call this method to get the connected device\n    return this.ble.getDevice$();\n  }\n\n  stream() {\n    // call this method to get a stream of values emitted by the device\n    return this.ble.streamValues$().pipe(map((value: DataView) => value.getUint8(0)));\n  }\n\n  disconnectDevice() {\n    this.ble.disconnectDevice();\n  }\n\n  /**\n   * Get Battery Level GATT Characteristic value.\n   * This logic is specific to this service, this is why we can't abstract it elsewhere.\n   * The developer is free to provide any service, and characteristics they want.\n   *\n   * @return Emites the value of the requested service read from the device\n   */\n  value() {\n    console.log('Getting Battery level...');\n\n    return this.ble\n\n        // 1) call the discover method will trigger the discovery process (by the browser)\n        .discover$({\n          acceptAllDevices: true,\n          optionalServices: [BatteryLevelService.GATT_PRIMARY_SERVICE]\n        })\n        .pipe(\n\n          // 2) get that service\n          mergeMap((gatt: BluetoothRemoteGATTServer) => {\n            return this.ble.getPrimaryService$(gatt, BatteryLevelService.GATT_PRIMARY_SERVICE);\n          }),\n\n          // 3) get a specific characteristic on that service\n          mergeMap((primaryService: BluetoothRemoteGATTService) => {\n            return this.ble.getCharacteristic$(primaryService, BatteryLevelService.GATT_CHARACTERISTIC_BATTERY_LEVEL);\n          }),\n\n          // 4) ask for the value of that characteristic (will return a DataView)\n          mergeMap((characteristic: BluetoothRemoteGATTCharacteristic) => {\n            return this.ble.readValue$(characteristic);\n          }),\n\n          // 5) on that DataView, get the right value\n          map((value: DataView) => value.getUint8(0))\n        )\n  }\n}API documentation\nThe API documentation can be found here:  https://manekinekko.github.io/angular-web-bluetooth/\nNeed a starter?\n\n\nThis project serves also as a starter. Run the following command:\nnpm startBlog post\nCheckout my full blog post on dev.to about how to use this package in your app.\nHave a PR?\nAll contributions are welcome. Here are few open issues that I need help with ;)\nLicense\nThe MIT License (MIT) Copyright (c) 2017 - Wassim CHEGHAM\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT) Copyright (c) 2017 - Wassim CHEGHAM\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WebBluetoothModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBatteryLevelComponent\n\nBatteryLevelComponent\n\nAppModule -->\n\nBatteryLevelComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nHumidityComponent\n\nHumidityComponent\n\nAppModule -->\n\nHumidityComponent->AppModule\n\n\n\n\n\nStepCounterComponent\n\nStepCounterComponent\n\nAppModule -->\n\nStepCounterComponent->AppModule\n\n\n\n\n\nTemperatureComponent\n\nTemperatureComponent\n\nAppModule -->\n\nTemperatureComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nWebBluetoothModule\n\nWebBluetoothModule\n\nAppModule -->\n\nWebBluetoothModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ReadValueOptions   (projects/.../bluetooth.service.ts)\n                        \n                        \n                            ServiceOptions   (src/.../ble.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/manekinekko/angular-web-bluetooth/src/lib/bluetooth.service.ts\n    \n    \n        \n            \n                \n                    \n                    ReadValueOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/ble.service.ts\n    \n    \n        \n            \n                \n                    \n                    ServiceOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BeaconScanner   (src/.../battery-level.component.ts)\n                        \n                        \n                            bleCore   (src/.../battery-level.component.ts)\n                        \n                        \n                            bleCore   (src/.../humidity.component.ts)\n                        \n                        \n                            bleCore   (src/.../stepcounter.component.ts)\n                        \n                        \n                            bleCore   (src/.../temperature.component.ts)\n                        \n                        \n                            bleService   (src/.../battery-level.component.ts)\n                        \n                        \n                            bleService   (src/.../humidity.component.ts)\n                        \n                        \n                            bleService   (src/.../stepcounter.component.ts)\n                        \n                        \n                            bleService   (src/.../temperature.component.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            global   (src/.../polyfills.ts)\n                        \n                        \n                            PROVIDERS   (src/.../battery-level.component.ts)\n                        \n                        \n                            PROVIDERS   (src/.../humidity.component.ts)\n                        \n                        \n                            PROVIDERS   (src/.../stepcounter.component.ts)\n                        \n                        \n                            PROVIDERS   (src/.../temperature.component.ts)\n                        \n                        \n                            require   (src/.../polyfills.ts)\n                        \n                        \n                            require   (src/.../battery-level.component.ts)\n                        \n                        \n                            scanner   (src/.../battery-level.component.ts)\n                        \n                        \n                            TI_SENSORAG_SERVICES   (projects/.../ti-sensortag2.ts)\n                        \n                        \n                            TiTag   (projects/.../ti-sensortag2.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/thingy52/battery-level.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BeaconScanner\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('node-beacon-scanner')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bleCore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bleService\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (b: BluetoothCore) => new BleService(b)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PROVIDERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scanner\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BeaconScanner()\n                        \n                    \n\n\n            \n        \n\n    src/app/thingy52/humidity.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bleCore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bleService\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (b: BluetoothCore) => new BleService(b)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PROVIDERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}]\n                        \n                    \n\n\n            \n        \n\n    src/app/thingy52/stepcounter.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bleCore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bleService\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (b: BluetoothCore) => new BleService(b)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PROVIDERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}]\n                        \n                    \n\n\n            \n        \n\n    src/app/thingy52/temperature.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bleCore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (b: BrowserWebBluetooth, l: ConsoleLoggerService) => new BluetoothCore(b, l)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bleService\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (b: BluetoothCore) => new BleService(b)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PROVIDERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n  provide: BluetoothCore,\n  useFactory: bleCore,\n  deps: [BrowserWebBluetooth, ConsoleLoggerService]\n}, {\n  provide: BleService,\n  useFactory: bleService,\n  deps: [BluetoothCore]\n}]\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/polyfills.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            global\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    projects/manekinekko/angular-web-bluetooth/src/lib/lang/uuids/ti-sensortag2.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TI_SENSORAG_SERVICES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.keys(TiTag).map(key => TiTag[key].SERVICE)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TiTag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\n  DEVICE_INFORMATION : {\n    SERVICE :                 'f000180a-0451-4000-b000-000000000000',\n    SYSTEM_ID :               'f0002a23-0451-4000-b000-000000000000',\n    MODEL_NUMBER :            'f0002a24-0451-4000-b000-000000000000',\n    SERIAL_NUMBER :           'f0002a25-0451-4000-b000-000000000000',\n    FIRMWARE_REV :            'f0002a26-0451-4000-b000-000000000000',\n    HARDWARE_REV :            'f0002a27-0451-4000-b000-000000000000',\n    SOFTWARE_REV :            'f0002a28-0451-4000-b000-000000000000',\n    MANIFACTURER :            'f0002a29-0451-4000-b000-000000000000',\n    IEEE11073 :               'f0002a2a-0451-4000-b000-000000000000',\n    PNP_ID :                  'f0002a50-0451-4000-b000-000000000000'\n  },\n\n  BATTERY : {\n    SERVICE :                 'f000180f-0451-4000-b000-000000000000',\n    LEVEL :                   'f0002a19-0451-4000-b000-000000000000'\n  },\n\n  TEMPERATURE : {\n    SERVICE :                 'f000aa00-0451-4000-b000-000000000000',\n    DATA :                    'f000aa01-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa02-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa03-0451-4000-b000-000000000000'\n  },\n\n  HUMIDITY : {\n    SERVICE :                 'f000aa20-0451-4000-b000-000000000000',\n    DATA :                    'f000aa21-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa22-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa23-0451-4000-b000-000000000000'\n  },\n\n  BAROMETER : {\n    SERVICE :                 'f000aa40-0451-4000-b000-000000000000',\n    DATA :                    'f000aa41-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa42-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa44-0451-4000-b000-000000000000'\n  },\n\n  // service not available in model CC2650\n  // ACCELEROMETER : {\n  //   SERVICE :                 'f000aa10-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa11-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa12-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa13-0451-4000-b000-000000000000'\n  // },\n\n  // service not available in model CC2650\n  // MAGNETOMETER : {\n  //   SERVICE :                 'f000aa30-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa31-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa32-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa33-0451-4000-b000-000000000000'\n  // },\n\n  // service not available in model CC2650\n  // GYROSCOPE : {\n  //   SERVICE :                 'f000aa50-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa51-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa52-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa53-0451-4000-b000-000000000000'\n  // },\n\n  MOVEMENT : {\n    SERVICE :                 'f000aa80-0451-4000-b000-000000000000',\n    DATA :                    'f000aa81-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa82-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa83-0451-4000-b000-000000000000'\n  },\n\n  LIGHT : {\n    SERVICE :                 'f000aa70-0451-4000-b000-000000000000',\n    DATA :                    'f000aa71-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa72-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa73-0451-4000-b000-000000000000'\n  },\n\n  KEYPRESS : {\n    SERVICE :                 'f000ffe0-0451-4000-b000-000000000000',\n    STATE :                   'f000ffe1-0451-4000-b000-000000000000'\n  },\n\n  __REGISTER__ : {\n    SERVICE :                 'f000ac00-0451-4000-b000-000000000000',\n    DATA :                    'f000ac01-0451-4000-b000-000000000000',\n    ADDRESS :                 'f000ac02-0451-4000-b000-000000000000',\n    DEVICE_ID :               'f000ac03-0451-4000-b000-000000000000'\n  },\n\n  CONTROL : {\n    SERVICE :                 'f000ccc0-0451-4000-b000-000000000000',\n    CURRENT_USED_PARAMETERS : 'f000ccc1-0451-4000-b000-000000000000',\n    REQUEST_NEW_PARAMETERS :  'f000ccc2-0451-4000-b000-000000000000',\n    DISCONNECT_REQUEST :      'f000ccc3-0451-4000-b000-000000000000'\n  },\n\n  OAD : {\n    SERVICE :                 'f000ffc0-0451-4000-b000-000000000000',\n    IMAGE_NOTIFY :            'f000ffc1-0451-4000-b000-000000000000',\n    IMAGE_BLOCK_REQUEST :     'f000ffc2-0451-4000-b000-000000000000',\n    IMAGE_COUNT :             'f000ffc3-0451-4000-b000-000000000000',\n    IMAGE_STATUS :            'f000ffc4-0451-4000-b000-000000000000'\n  },\n\n  IO : {\n    SERVICE :                 'f000aa64-0451-4000-b000-000000000000',\n    DATA :                    'f000aa65-0451-4000-b000-000000000000',\n    CONFIG :                  'f000aa66-0451-4000-b000-000000000000'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
