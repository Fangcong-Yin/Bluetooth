var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.654,1,0.654]],["body/components/AppComponent.html",[0,1.185,1,1.151,2,1.277,3,1.277,4,2.043,5,2.043,6,0.612,7,2.043,8,2.043,9,2.944,10,1.841,11,2.016,12,2.566,13,1.016,14,0.089,15,0.798,16,0.798,17,1.016,18,1.277,19,2.566,20,2.566,21,2.566,22,2.944,23,2.043,24,2.016,25,2.043,26,0.798,27,1.016,28,1.277,29,2.043,30,0.07,31,0.07]],["title/modules/AppModule.html",[32,0.654,33,0.833]],["body/modules/AppModule.html",[1,1.256,2,1.144,3,1.144,6,0.548,13,1.495,14,0.09,15,0.715,16,0.934,17,0.91,18,1.144,26,1.214,27,0.91,30,0.065,31,0.065,32,0.934,33,1.562,34,1.144,35,2.663,36,2.663,37,0.715,38,1.829,39,1.829,40,1.829,41,2.391,42,1.829,43,1.144,44,2.424,45,3.169,46,3.169,47,1.829,48,0.91,49,2.391,50,1.829,51,0.91,52,0.91,53,0.91,54,2.424,55,1.144,56,2.424,57,1.829,58,1.829,59,1.144]],["title/components/BatteryLevelComponent.html",[0,0.654,26,0.654]],["body/components/BatteryLevelComponent.html",[0,0.807,1,0.309,2,0.495,3,0.495,4,0.792,5,0.792,6,0.237,8,0.792,9,1.876,10,1.173,12,1.288,13,0.81,14,0.09,15,0.309,16,0.309,17,0.394,18,0.495,19,1.288,20,1.288,21,1.288,22,1.876,23,0.792,24,1.473,25,0.792,26,0.733,27,1.209,28,1.458,29,0.792,30,0.035,31,0.035,37,0.503,51,0.394,52,0.394,53,0.394,55,1.686,60,2.158,61,2.118,62,0.792,63,1.707,64,2.158,65,1.209,66,2.933,67,2.933,68,2.933,69,2.158,70,2.933,71,2.158,72,2.158,73,2.158,74,2.158,75,3.331,76,2.158,77,2.158,78,2.158,79,2.158,80,2.158,81,2.158,82,2.158,83,2.158,84,2.158,85,2.158,86,2.158,87,2.158,88,2.158,89,2.933,90,2.933,91,3.855,92,2.933,93,2.158,94,2.158,95,2.158,96,2.158,97,2.158,98,2.158,99,2.158,100,2.158,101,2.158,102,2.158,103,2.158,104,2.158,105,2.158,106,2.158,107,2.933,108,2.158,109,2.933,110,2.158,111,2.158,112,3.091,113,2.158,114,0.495,115,1.288,116,2.064,117,2.933,118,2.736,119,1.832,120,1.012,121,1.473,122,2.487,123,1.473,124,2.487,125,1.707,126,1.473,127,0.792,128,1.049,129,2.933,130,2.644,131,1.707,132,1.288,133,1.383,134,1.288,135,1.049,136,1.832,137,1.049,138,2.064,139,1.049,140,1.049,141,1.707,142,2.158,143,1.049,144,1.291,145,1.049,146,1.707,147,1.628,148,1.012,149,1.049,150,1.049,151,0.622,152,0.622,153,1.049,154,1.049,155,1.049,156,1.049,157,1.707,158,0.495,159,1.049,160,1.049,161,1.707,162,1.049,163,1.049,164,1.049,165,1.049,166,1.049,167,1.049,168,1.049,169,1.049]],["title/injectables/BatteryLevelService.html",[65,0.833,170,0.833]],["body/injectables/BatteryLevelService.html",[2,0.692,3,0.692,6,0.332,10,1.516,11,0.87,13,1.006,14,0.091,15,0.433,16,0.433,17,0.551,24,0.87,27,1.006,28,1.048,30,0.045,31,0.045,37,0.655,48,0.551,51,0.551,52,0.551,53,0.551,55,1.747,59,0.692,61,2.194,65,0.834,114,0.692,115,1.676,116,1.676,119,1.772,120,1.904,121,1.772,123,1.772,126,1.772,127,1.107,130,2.729,132,1.107,133,1.411,134,1.107,136,2.304,138,1.107,144,1.781,147,2.256,148,1.317,151,2.004,152,0.87,158,0.692,170,1.006,171,1.107,172,2.551,173,2.256,174,2.256,175,2.256,176,1.467,177,2.222,178,1.467,179,1.676,180,2.551,181,1.676,182,2.023,183,2.794,184,1.676,185,1.676,186,1.676,187,1.676,188,1.317,189,2.023,190,1.676,191,2.023,192,1.467,193,1.467,194,1.467,195,1.467,196,1.676,197,1.467,198,1.676,199,1.107,200,1.107,201,1.107,202,1.107,203,1.107,204,2.023,205,1.107,206,1.107,207,1.107,208,2.256,209,1.676,210,1.107,211,1.107,212,1.107,213,0.87,214,1.676,215,1.107,216,1.107,217,1.107,218,1.107,219,1.107,220,1.676,221,1.107,222,0.87,223,1.107,224,1.107,225,1.107,226,1.107,227,1.107,228,1.107,229,1.107,230,1.107,231,1.107,232,1.107,233,1.107,234,1.107,235,1.107,236,1.107,237,0.87,238,1.107,239,1.107,240,1.107,241,1.107,242,1.107]],["title/coverage.html",[243,2.254]],["body/coverage.html",[0,1.02,1,0.82,6,0.629,7,2.099,14,0.087,26,0.82,30,0.071,31,0.071,55,1.632,61,2.05,62,2.099,65,1.044,133,1.312,170,1.044,171,2.099,243,2.099,244,1.649,245,2.782,246,2.782,247,4.131,248,4.053,249,2.782,250,2.782,251,2.782,252,2.099,253,2.335,254,2.61,255,2.099,256,2.61,257,2.099,258,2.099,259,2.782,260,2.782,261,2.782]],["title/dependencies.html",[34,1.254,262,1.873]],["body/dependencies.html",[14,0.09,15,0.846,30,0.072,31,0.072,34,1.354,47,2.661,48,1.324,51,1.077,52,1.077,53,1.077,263,2.871,264,4.292,265,2.871,266,2.871,267,2.871,268,2.871,269,2.871,270,2.871,271,2.871,272,2.871,273,2.871,274,2.871,275,2.871,276,2.871,277,2.871,278,2.871]],["title/index.html",[114,0.884,279,1.413,280,1.11]],["body/index.html",[6,0.297,10,0.619,11,0.778,13,1.267,14,0.09,15,0.602,16,0.602,17,0.765,27,0.765,28,0.619,30,0.042,31,0.042,32,0.602,33,0.493,37,0.602,43,0.619,48,0.493,49,1.539,50,1.539,51,1.059,52,1.214,53,1.345,57,0.99,58,0.99,59,0.962,65,0.493,119,1.483,120,1.483,121,0.778,123,0.778,126,0.778,136,2.068,144,1.526,151,1.483,152,0.778,158,0.962,170,0.765,172,1.539,173,0.99,174,0.99,175,0.99,179,0.99,180,2.129,181,0.99,182,1.539,183,2.547,184,0.99,185,0.99,186,0.99,187,0.99,188,1.209,189,1.539,190,0.99,191,1.539,196,0.99,198,0.99,199,0.99,200,0.99,201,0.99,202,0.99,203,0.99,204,1.888,205,0.99,206,0.99,207,0.99,208,2.129,209,1.539,210,0.99,211,0.99,212,0.99,213,1.209,214,1.539,215,0.99,216,0.99,217,0.99,218,0.99,219,0.99,220,1.539,221,0.99,222,1.209,223,0.99,224,0.99,225,0.99,226,0.99,227,0.99,228,0.99,229,0.99,230,0.99,231,0.99,232,0.99,233,0.99,234,0.99,235,0.99,236,0.99,237,1.209,238,0.99,239,0.99,240,0.99,241,0.99,242,1.539,244,1.209,280,0.778,281,1.313,282,1.313,283,2.04,284,1.313,285,2.502,286,2.502,287,1.313,288,1.313,289,1.313,290,1.313,291,1.313,292,2.44,293,0.99,294,1.313,295,1.313,296,1.313,297,2.04,298,1.313,299,1.313,300,1.313,301,2.502,302,1.313,303,1.313,304,1.313,305,1.313,306,1.313,307,1.313,308,1.313,309,1.313,310,1.313,311,1.539,312,1.313,313,1.313,314,2.04,315,1.313,316,1.313,317,1.313,318,1.313,319,1.313,320,1.209,321,1.539,322,1.888,323,0.99,324,0.99,325,0.99,326,0.99,327,1.539,328,0.99,329,0.99,330,0.99,331,1.539,332,0.99,333,2.129,334,2.704,335,0.99,336,1.539,337,1.888,338,0.99,339,1.888,340,1.539,341,0.99,342,0.99,343,0.99,344,0.99,345,0.99,346,0.99,347,0.99,348,0.99,349,0.99,350,0.99,351,0.99,352,0.99,353,1.539,354,1.539,355,0.99,356,0.99,357,1.539,358,0.99,359,0.99,360,0.99,361,0.99,362,0.99,363,0.99,364,0.99,365,0.99,366,0.99,367,0.99,368,0.99,369,0.99,370,0.99,371,0.99,372,0.99,373,0.99,374,0.99,375,0.99,376,0.99,377,0.99,378,0.99]],["title/license.html",[279,1.413,280,1.11,320,1.11]],["body/license.html",[6,0.555,14,0.065,30,0.065,31,0.065,37,0.723,43,1.157,158,1.157,188,1.454,237,1.454,244,1.454,292,2.41,311,1.851,320,1.454,321,2.41,322,2.679,323,1.851,324,1.851,325,1.851,326,1.851,327,2.41,328,1.851,329,1.851,330,1.851,331,2.41,332,1.851,333,2.838,334,3.149,335,1.851,336,2.41,337,2.679,338,1.851,339,2.679,340,2.41,341,1.851,342,1.851,343,1.851,344,1.851,345,1.851,346,1.851,347,1.851,348,1.851,349,1.851,350,1.851,351,1.851,352,1.851,353,2.41,354,2.41,355,1.851,356,1.851,357,2.41,358,1.851,359,1.851,360,1.851,361,1.851,362,1.851,363,1.851,364,1.851,365,1.851,366,1.851,367,1.851,368,1.851,369,1.851,370,1.851,371,1.851,372,1.851,373,1.851,374,1.851,375,1.851,376,1.851,377,1.851,378,1.851]],["title/modules.html",[32,0.881]],["body/modules.html",[14,0.079,30,0.079,31,0.079,32,0.986,33,1.255,48,1.255,379,3.345,380,3.345,381,3.345]],["title/overview.html",[382,2.254]],["body/overview.html",[0,0.862,1,1.248,14,0.084,16,0.862,18,1.379,26,1.135,30,0.073,31,0.073,32,1.052,33,1.588,34,1.379,35,2.205,36,2.205,37,0.862,38,2.205,39,2.205,40,2.205,41,2.691,42,2.205,43,1.379,170,1.097,213,2.113,222,1.732,382,2.205]],["title/miscellaneous/variables.html",[253,1.575,383,1.413]],["body/miscellaneous/variables.html",[14,0.089,30,0.071,31,0.071,59,1.643,114,1.326,133,1.785,144,1.785,148,2.242,252,2.121,253,1.666,254,3.124,255,2.121,256,2.121,257,2.854,258,2.854,293,2.121,383,2.121,384,3.482,385,2.811,386,2.811,387,2.811,388,2.811,389,3.955,390,3.482]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":247,"title":{},"body":{"coverage.html":{}}}],["0.8.26",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":248,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":249,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":91,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["1",{"_index":213,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{},"overview.html":{}}}],["1/9",{"_index":251,"title":{},"body":{"coverage.html":{}}}],["100px",{"_index":97,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["11",{"_index":250,"title":{},"body":{"coverage.html":{}}}],["1s",{"_index":104,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["2",{"_index":222,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{},"overview.html":{}}}],["2.5.7",{"_index":274,"title":{},"body":{"dependencies.html":{}}}],["2017",{"_index":324,"title":{},"body":{"index.html":{},"license.html":{}}}],["25px",{"_index":94,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["3",{"_index":226,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["3em",{"_index":81,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["3px",{"_index":107,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["4",{"_index":231,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["410px",{"_index":100,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["4px",{"_index":85,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["5",{"_index":236,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["6.3.3",{"_index":276,"title":{},"body":{"dependencies.html":{}}}],["6px",{"_index":109,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["7.0.1",{"_index":264,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":79,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["8px",{"_index":88,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["9px",{"_index":92,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["_batterylevelservic",{"_index":117,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["_zone",{"_index":118,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["a:act",{"_index":106,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["abov",{"_index":352,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":185,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["acceptalldevic",{"_index":218,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["action",{"_index":374,"title":{},"body":{"index.html":{},"license.html":{}}}],["actual_compon",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{}}}],["add",{"_index":284,"title":{},"body":{"index.html":{}}}],["align",{"_index":101,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["and/or",{"_index":346,"title":{},"body":{"index.html":{},"license.html":{}}}],["angular",{"_index":282,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":263,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":265,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":266,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/form",{"_index":267,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":268,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":270,"title":{},"body":{"dependencies.html":{}}}],["annot",{"_index":298,"title":{},"body":{"index.html":{}}}],["api",{"_index":304,"title":{},"body":{"index.html":{}}}],["app.compon",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":33,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["aris",{"_index":378,"title":{},"body":{"index.html":{},"license.html":{}}}],["ask",{"_index":232,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["associ",{"_index":335,"title":{},"body":{"index.html":{},"license.html":{}}}],["author",{"_index":367,"title":{},"body":{"index.html":{},"license.html":{}}}],["auto",{"_index":98,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["b52231",{"_index":93,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["background",{"_index":73,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["batteri",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{}}}],["battery_level",{"_index":196,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["battery_servic",{"_index":198,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["batterylevel",{"_index":112,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["batterylevelcompon",{"_index":26,"title":{"components/BatteryLevelComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["batterylevelservic",{"_index":65,"title":{"injectables/BatteryLevelService.html":{}},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"coverage.html":{},"index.html":{}}}],["batterylevelservice.gatt_characteristic_battery_level",{"_index":230,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["batterylevelservice.gatt_primary_servic",{"_index":220,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["ble",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{}}}],["block",{"_index":83,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["blog",{"_index":313,"title":{},"body":{"index.html":{}}}],["bluetooth",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"dependencies.html":{},"index.html":{}}}],["bluetoothcor",{"_index":151,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{}}}],["bluetoothremotegattcharacterist",{"_index":234,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["bluetoothremotegattserv",{"_index":224,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["bluetoothremotegattservic",{"_index":228,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["bootstrap",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":86,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["box",{"_index":89,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["brows",{"_index":381,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"injectables/BatteryLevelService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browsermodul",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["c",{"_index":323,"title":{},"body":{"index.html":{},"license.html":{}}}],["call",{"_index":204,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["can't",{"_index":184,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["case",{"_index":303,"title":{},"body":{"index.html":{}}}],["catch",{"_index":239,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["cd2834",{"_index":74,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["center",{"_index":102,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["chang",{"_index":165,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["characterist",{"_index":180,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["charg",{"_index":330,"title":{},"body":{"index.html":{},"license.html":{}}}],["checkout",{"_index":315,"title":{},"body":{"index.html":{}}}],["chegham",{"_index":326,"title":{},"body":{"index.html":{},"license.html":{}}}],["claim",{"_index":370,"title":{},"body":{"index.html":{},"license.html":{}}}],["class",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{}}}],["cluster_appmodul",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["color",{"_index":68,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["command",{"_index":312,"title":{},"body":{"index.html":{}}}],["complet",{"_index":302,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{}}}],["condit",{"_index":351,"title":{},"body":{"index.html":{},"license.html":{}}}],["connect",{"_index":158,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{},"license.html":{}}}],["console.error('oop",{"_index":241,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["console.log('get",{"_index":210,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["console.log('read",{"_index":168,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["constructor",{"_index":127,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{}}}],["constructor(_zon",{"_index":128,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["constructor(bl",{"_index":176,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["constructor(publ",{"_index":152,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{}}}],["context",{"_index":257,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":375,"title":{},"body":{"index.html":{},"license.html":{}}}],["contribut",{"_index":318,"title":{},"body":{"index.html":{}}}],["copi",{"_index":333,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":322,"title":{},"body":{"index.html":{},"license.html":{}}}],["core",{"_index":272,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":243,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["d",{"_index":169,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["damag",{"_index":371,"title":{},"body":{"index.html":{},"license.html":{}}}],["dataview",{"_index":208,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["deal",{"_index":336,"title":{},"body":{"index.html":{},"license.html":{}}}],["declar",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decor",{"_index":71,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["default",{"_index":148,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":130,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{}}}],["depend",{"_index":34,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["detect",{"_index":166,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["develop",{"_index":187,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["devic",{"_index":119,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{}}}],["direct",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{}}}],["disconnect",{"_index":159,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["discov",{"_index":214,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["discoveri",{"_index":216,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["display",{"_index":82,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["distribut",{"_index":344,"title":{},"body":{"index.html":{},"license.html":{}}}],["document",{"_index":244,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{}}}],["dynam",{"_index":269,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":240,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["eas",{"_index":105,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["element",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{}}}],["elsewher",{"_index":186,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["emit",{"_index":189,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["enabl",{"_index":294,"title":{},"body":{"index.html":{}}}],["enabletrac",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["entrycompon",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":254,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":366,"title":{},"body":{"index.html":{},"license.html":{}}}],["exampl",{"_index":299,"title":{},"body":{"index.html":{}}}],["export",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":359,"title":{},"body":{"index.html":{},"license.html":{}}}],["fals",{"_index":293,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["famili",{"_index":76,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["file",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["file:dist/lib",{"_index":271,"title":{},"body":{"dependencies.html":{}}}],["fit",{"_index":362,"title":{},"body":{"index.html":{},"license.html":{}}}],["follow",{"_index":311,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":75,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["forc",{"_index":164,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["free",{"_index":188,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{},"license.html":{}}}],["furnish",{"_index":349,"title":{},"body":{"index.html":{},"license.html":{}}}],["gatt",{"_index":179,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["gatt_characteristic_battery_level",{"_index":173,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["gatt_primary_servic",{"_index":174,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["get",{"_index":279,"title":{"index.html":{},"license.html":{}},"body":{}}],["getbatterylevel",{"_index":121,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{}}}],["getdevic",{"_index":175,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["getdevicestatu",{"_index":122,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["getfakevalu",{"_index":123,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{}}}],["grant",{"_index":329,"title":{},"body":{"index.html":{},"license.html":{}}}],["here",{"_index":297,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":328,"title":{},"body":{"index.html":{},"license.html":{}}}],["holder",{"_index":368,"title":{},"body":{"index.html":{},"license.html":{}}}],["html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{}}}],["https://manekinekko.github.io/angular",{"_index":306,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":245,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":63,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["impli",{"_index":360,"title":{},"body":{"index.html":{},"license.html":{}}}],["import",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{}}}],["includ",{"_index":339,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":114,"title":{"index.html":{}},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{}}}],["inject",{"_index":170,"title":{"injectables/BatteryLevelService.html":{}},"body":{"injectables/BatteryLevelService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["instal",{"_index":290,"title":{},"body":{"index.html":{}}}],["js",{"_index":273,"title":{},"body":{"dependencies.html":{}}}],["kind",{"_index":358,"title":{},"body":{"index.html":{},"license.html":{}}}],["legend",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"overview.html":{}}}],["level",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{}}}],["level.compon",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["level.component.t",{"_index":62,"title":{},"body":{"components/BatteryLevelComponent.html":{},"coverage.html":{}}}],["level.component.ts:40",{"_index":149,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:41",{"_index":131,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:43",{"_index":146,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:45",{"_index":140,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:50",{"_index":145,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:54",{"_index":137,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:66",{"_index":139,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:70",{"_index":135,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.component.ts:74",{"_index":143,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.servic",{"_index":150,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["level.service.t",{"_index":171,"title":{},"body":{"injectables/BatteryLevelService.html":{},"coverage.html":{}}}],["level.service.ts:10",{"_index":177,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["level.service.ts:12",{"_index":195,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["level.service.ts:14",{"_index":193,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["level.service.ts:18",{"_index":192,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["level.service.ts:23",{"_index":194,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["level.service.ts:35",{"_index":178,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["level.service.ts:9",{"_index":197,"title":{},"body":{"injectables/BatteryLevelService.html":{}}}],["level/batteri",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"coverage.html":{}}}],["liabil",{"_index":372,"title":{},"body":{"index.html":{},"license.html":{}}}],["liabl",{"_index":369,"title":{},"body":{"index.html":{},"license.html":{}}}],["licens",{"_index":320,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":340,"title":{},"body":{"index.html":{},"license.html":{}}}],["log",{"_index":295,"title":{},"body":{"index.html":{}}}],["logic",{"_index":181,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["make",{"_index":288,"title":{},"body":{"index.html":{}}}],["manekinekko/angular",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"dependencies.html":{},"index.html":{}}}],["map",{"_index":199,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["map((valu",{"_index":238,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["margin",{"_index":96,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["match",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":316,"title":{},"body":{"index.html":{}}}],["merchant",{"_index":361,"title":{},"body":{"index.html":{},"license.html":{}}}],["merg",{"_index":342,"title":{},"body":{"index.html":{},"license.html":{}}}],["mergemap",{"_index":200,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["mergemap((characterist",{"_index":233,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["mergemap((gatt",{"_index":223,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["mergemap((primaryservic",{"_index":227,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["metadata",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{}}}],["method",{"_index":120,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{}}}],["miscellan",{"_index":383,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["miss",{"_index":281,"title":{},"body":{"index.html":{}}}],["mit",{"_index":321,"title":{},"body":{"index.html":{},"license.html":{}}}],["modifi",{"_index":341,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":32,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["monospac",{"_index":77,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["n/a",{"_index":113,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["name",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{}}}],["need",{"_index":307,"title":{},"body":{"index.html":{}}}],["new",{"_index":259,"title":{},"body":{"coverage.html":{}}}],["ngmodul",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["ngoninit",{"_index":124,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["ngzone",{"_index":129,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["none",{"_index":72,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["noninfring",{"_index":365,"title":{},"body":{"index.html":{},"license.html":{}}}],["note",{"_index":287,"title":{},"body":{"index.html":{}}}],["notic",{"_index":353,"title":{},"body":{"index.html":{},"license.html":{}}}],["npm",{"_index":286,"title":{},"body":{"index.html":{}}}],["null",{"_index":160,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["number",{"_index":142,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["object",{"_index":389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obtain",{"_index":332,"title":{},"body":{"index.html":{},"license.html":{}}}],["ok",{"_index":291,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":64,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["option",{"_index":134,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{}}}],["optionalservic",{"_index":219,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["otherwis",{"_index":377,"title":{},"body":{"index.html":{},"license.html":{}}}],["out",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":382,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":262,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":84,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["paramet",{"_index":132,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{}}}],["particular",{"_index":363,"title":{},"body":{"index.html":{},"license.html":{}}}],["permiss",{"_index":327,"title":{},"body":{"index.html":{},"license.html":{}}}],["permit",{"_index":348,"title":{},"body":{"index.html":{},"license.html":{}}}],["person",{"_index":331,"title":{},"body":{"index.html":{},"license.html":{}}}],["pipe",{"_index":221,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["portion",{"_index":356,"title":{},"body":{"index.html":{},"license.html":{}}}],["posit",{"_index":66,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["post",{"_index":314,"title":{},"body":{"index.html":{}}}],["pr",{"_index":317,"title":{},"body":{"index.html":{}}}],["process",{"_index":217,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["product",{"_index":390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":308,"title":{},"body":{"index.html":{}}}],["properti",{"_index":115,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{}}}],["provid",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":202,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["public",{"_index":116,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{}}}],["publish",{"_index":343,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpos",{"_index":364,"title":{},"body":{"index.html":{},"license.html":{}}}],["radiu",{"_index":87,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["read",{"_index":191,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["rel",{"_index":67,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["request",{"_index":190,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["requir",{"_index":258,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["restrict",{"_index":338,"title":{},"body":{"index.html":{},"license.html":{}}}],["result",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":136,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{}}}],["rgba(0,0,0,.7",{"_index":95,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["rgba(0,0,0,.9",{"_index":110,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["rgba(219,31,5,1",{"_index":108,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["rgba(255,255,255,1",{"_index":69,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["right",{"_index":237,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{},"license.html":{}}}],["root",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{}}}],["root'},{'nam",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{}}}],["run",{"_index":310,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":275,"title":{},"body":{"dependencies.html":{}}}],["rxjs/oper",{"_index":201,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["s",{"_index":242,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["see",{"_index":300,"title":{},"body":{"index.html":{}}}],["selector",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{}}}],["sell",{"_index":347,"title":{},"body":{"index.html":{},"license.html":{}}}],["serv",{"_index":309,"title":{},"body":{"index.html":{}}}],["servic",{"_index":183,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["service/compon",{"_index":296,"title":{},"body":{"index.html":{}}}],["shadow",{"_index":90,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["shall",{"_index":354,"title":{},"body":{"index.html":{},"license.html":{}}}],["showbatterylevel",{"_index":125,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["showbatterylevel(valu",{"_index":141,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["size",{"_index":80,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["softwar",{"_index":334,"title":{},"body":{"index.html":{},"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{}}}],["spec\\.t",{"_index":388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":182,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["src/.../environment.prod.t",{"_index":385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.t",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/batteri",{"_index":61,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":252,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":255,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":256,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":280,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starter",{"_index":301,"title":{},"body":{"index.html":{}}}],["statement",{"_index":246,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":172,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["stream",{"_index":206,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["streamvalu",{"_index":126,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{}}}],["string",{"_index":147,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{}}}],["style",{"_index":60,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["subject",{"_index":350,"title":{},"body":{"index.html":{},"license.html":{}}}],["sublicens",{"_index":345,"title":{},"body":{"index.html":{},"license.html":{}}}],["substanti",{"_index":355,"title":{},"body":{"index.html":{},"license.html":{}}}],["support",{"_index":379,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":289,"title":{},"body":{"index.html":{}}}],["svg",{"_index":380,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{}}}],["text",{"_index":70,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this._batterylevelservice.getbatterylevel().subscribe(this.showbatterylevel.bind(thi",{"_index":163,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this._batterylevelservice.getdevice().subscribe(devic",{"_index":156,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this._batterylevelservice.getfakevalu",{"_index":162,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this._batterylevelservice.streamvalues().subscribe(this.showbatterylevel.bind(thi",{"_index":155,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this._zone.run",{"_index":167,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.batterylevel",{"_index":161,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.bl",{"_index":212,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["this.ble.fakenext",{"_index":203,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["this.ble.getcharacteristic$(primaryservic",{"_index":229,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["this.ble.getdevic",{"_index":205,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["this.ble.getprimaryservice$(gatt",{"_index":225,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["this.ble.readvalue$(characterist",{"_index":235,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["this.ble.streamvalues$().pipe(map((valu",{"_index":207,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["this.devic",{"_index":157,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.getdevicestatu",{"_index":153,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["this.streamvalu",{"_index":154,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["top",{"_index":111,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["tort",{"_index":376,"title":{},"body":{"index.html":{},"license.html":{}}}],["transit",{"_index":103,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["tree",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{}}}],["tri",{"_index":211,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["trigger",{"_index":215,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["true",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"injectables/BatteryLevelService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":133,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/web",{"_index":285,"title":{},"body":{"index.html":{}}}],["us",{"_index":292,"title":{},"body":{"index.html":{},"license.html":{}}}],["valu",{"_index":144,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value.getuint8(0",{"_index":209,"title":{},"body":{"injectables/BatteryLevelService.html":{},"index.html":{}}}],["var",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryLevelComponent.html":{}}}],["variabl",{"_index":253,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":138,"title":{},"body":{"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{}}}],["warranti",{"_index":357,"title":{},"body":{"index.html":{},"license.html":{}}}],["wassim",{"_index":325,"title":{},"body":{"index.html":{},"license.html":{}}}],["web",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryLevelComponent.html":{},"injectables/BatteryLevelService.html":{},"dependencies.html":{},"index.html":{}}}],["webbluetoothmodul",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["webbluetoothmodule.forroot",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["weight",{"_index":78,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["welcom",{"_index":319,"title":{},"body":{"index.html":{}}}],["whether",{"_index":373,"title":{},"body":{"index.html":{},"license.html":{}}}],["width",{"_index":99,"title":{},"body":{"components/BatteryLevelComponent.html":{}}}],["without",{"_index":337,"title":{},"body":{"index.html":{},"license.html":{}}}],["x1f449",{"_index":305,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":283,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":277,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ble-root\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ble-root',\n  template: `\n   \n  `\n})\nexport class AppComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBatteryLevelComponent\n\nBatteryLevelComponent\n\nAppModule -->\n\nBatteryLevelComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                BatteryLevelComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                BatteryLevelComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { WebBluetoothModule } from '@manekinekko/angular-web-bluetooth';\n\nimport { AppComponent } from './app.component';\nimport { BatteryLevelComponent } from './battery-level/battery-level.component';\n\n@NgModule({\n  declarations: [AppComponent, BatteryLevelComponent],\n  entryComponents: [BatteryLevelComponent],\n  imports: [\n    BrowserModule,\n    WebBluetoothModule.forRoot({\n      enableTracing: true\n    })\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BatteryLevelComponent.html":{"url":"components/BatteryLevelComponent.html","title":"component - BatteryLevelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BatteryLevelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/battery-level/battery-level.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            BatteryLevelService\n                \n            \n\n\n            \n                selector\n                ble-battery-level\n            \n\n\n            \n                styles\n                \n    a {\n      position: relative;\n      color: rgba(255,255,255,1);\n      text-decoration: none;\n      background-color: #CD2834;\n      font-family: monospace;\n      font-weight: 700;\n      font-size: 3em;\n      display: block;\n      padding: 4px;\n      border-radius: 8px;\n      box-shadow: 0px 9px 0px #B52231, 0px 9px 25px rgba(0,0,0,.7);\n      margin: 100px auto;\n      width: 410px;\n      text-align: center;\n      transition: all .1s ease;\n    }\n\n    a:active {\n      box-shadow: 0px 3px 0px rgba(219,31,5,1), 0px 3px 6px rgba(0,0,0,.9);\n      position: relative;\n      top: 6px;\n    }\n  \n            \n\n            \n                template\n                Get Battery Level ({{batteryLevel || 'N/A'}}%)\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _batteryLevelService\n                            \n                            \n                                    Public\n                                _zone\n                            \n                            \n                                batteryLevel\n                            \n                            \n                                device\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBatteryLevel\n                            \n                            \n                                getDeviceStatus\n                            \n                            \n                                getFakeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showBatteryLevel\n                            \n                            \n                                streamValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_zone: NgZone, _batteryLevelService: BatteryLevelService)\n                    \n                \n                        \n                            \n                                Defined in src/app/battery-level/battery-level.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _batteryLevelService\n                                                  \n                                                        \n                                                                    BatteryLevelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBatteryLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBatteryLevel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDeviceStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDeviceStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFakeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFakeValue()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showBatteryLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowBatteryLevel(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.component.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            streamValues\n                            \n                            \n                        \n                    \n                \n                \n                    \nstreamValues()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _batteryLevelService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _batteryLevelService:     BatteryLevelService\n\n                    \n                \n                    \n                        \n                            Type :     BatteryLevelService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            batteryLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        batteryLevel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '--'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            device\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        device:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, NgZone } from '@angular/core';\nimport { BatteryLevelService } from './battery-level.service';\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\n\n@Component({\n  selector: 'ble-battery-level',\n  template: `\n    Get Battery Level ({{batteryLevel || 'N/A'}}%)\n  `,\n  styles: [\n    `\n    a {\n      position: relative;\n      color: rgba(255,255,255,1);\n      text-decoration: none;\n      background-color: #CD2834;\n      font-family: monospace;\n      font-weight: 700;\n      font-size: 3em;\n      display: block;\n      padding: 4px;\n      border-radius: 8px;\n      box-shadow: 0px 9px 0px #B52231, 0px 9px 25px rgba(0,0,0,.7);\n      margin: 100px auto;\n      width: 410px;\n      text-align: center;\n      transition: all .1s ease;\n    }\n\n    a:active {\n      box-shadow: 0px 3px 0px rgba(219,31,5,1), 0px 3px 6px rgba(0,0,0,.9);\n      position: relative;\n      top: 6px;\n    }\n  `\n  ],\n  providers: [BatteryLevelService]\n})\nexport class BatteryLevelComponent implements OnInit {\n  batteryLevel: string = '--';\n  device: any = {};\n\n  constructor(public _zone: NgZone, public _batteryLevelService: BatteryLevelService) {}\n\n  ngOnInit() {\n    this.getDeviceStatus();\n    this.streamValues();\n  }\n\n  streamValues() {\n    this._batteryLevelService.streamValues().subscribe(this.showBatteryLevel.bind(this));\n  }\n\n  getDeviceStatus() {\n    this._batteryLevelService.getDevice().subscribe(device => {\n      if (device) {\n        this.device = device;\n      } else {\n        // device not connected or disconnected\n        this.device = null;\n        this.batteryLevel = '--';\n      }\n    });\n  }\n\n  getFakeValue() {\n    this._batteryLevelService.getFakeValue();\n  }\n\n  getBatteryLevel() {\n    return this._batteryLevelService.getBatteryLevel().subscribe(this.showBatteryLevel.bind(this));\n  }\n\n  showBatteryLevel(value: number) {\n    // force change detection\n    this._zone.run(() => {\n      console.log('Reading battery level %d', value);\n      this.batteryLevel = '' + value;\n    });\n  }\n}\n\n    \n\n\n    \n            \n    a {\n      position: relative;\n      color: rgba(255,255,255,1);\n      text-decoration: none;\n      background-color: #CD2834;\n      font-family: monospace;\n      font-weight: 700;\n      font-size: 3em;\n      display: block;\n      padding: 4px;\n      border-radius: 8px;\n      box-shadow: 0px 9px 0px #B52231, 0px 9px 25px rgba(0,0,0,.7);\n      margin: 100px auto;\n      width: 410px;\n      text-align: center;\n      transition: all .1s ease;\n    }\n\n    a:active {\n      box-shadow: 0px 3px 0px rgba(219,31,5,1), 0px 3px 6px rgba(0,0,0,.9);\n      position: relative;\n      top: 6px;\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Get Battery Level ({{batteryLevel || \\'N/A\\'}}%)'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ble-root'},{'name': 'BatteryLevelComponent', 'selector': 'ble-battery-level'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BatteryLevelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BatteryLevelService.html":{"url":"injectables/BatteryLevelService.html","title":"injectable - BatteryLevelService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BatteryLevelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/battery-level/battery-level.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ble\n                            \n                            \n                                    Static\n                                GATT_CHARACTERISTIC_BATTERY_LEVEL\n                            \n                            \n                                    Static\n                                GATT_PRIMARY_SERVICE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBatteryLevel\n                            \n                            \n                                getDevice\n                            \n                            \n                                getFakeValue\n                            \n                            \n                                streamValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ble: BluetoothCore)\n                    \n                \n                        \n                            \n                                Defined in src/app/battery-level/battery-level.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ble\n                                                  \n                                                        \n                                                                    BluetoothCore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBatteryLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBatteryLevel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            Get Battery Level GATT Characteristic value.\nThis logic is specific to this service, this is why we can't abstract it elsewhere.\nThe developer is free to provide any service, and characteristics she wants.\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Emites the value of the requested service read from the device\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDevice\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDevice()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFakeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFakeValue()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            streamValues\n                            \n                            \n                        \n                    \n                \n                \n                    \nstreamValues()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ble\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ble:     BluetoothCore\n\n                    \n                \n                    \n                        \n                            Type :     BluetoothCore\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GATT_CHARACTERISTIC_BATTERY_LEVEL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        GATT_CHARACTERISTIC_BATTERY_LEVEL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'battery_level'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GATT_PRIMARY_SERVICE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        GATT_PRIMARY_SERVICE:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'battery_service'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/battery-level/battery-level.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatteryLevelService {\n  static GATT_CHARACTERISTIC_BATTERY_LEVEL = 'battery_level';\n  static GATT_PRIMARY_SERVICE = 'battery_service';\n\n  constructor(public ble: BluetoothCore) {}\n\n  getFakeValue() {\n    this.ble.fakeNext();\n  }\n\n  getDevice() {\n    // call this method to get the connected device\n    return this.ble.getDevice$();\n  }\n\n  streamValues() {\n    // call this method to get a stream of values emitted by the device\n    return this.ble.streamValues$().pipe(map((value: DataView) => value.getUint8(0)));\n  }\n\n  /**\n   * Get Battery Level GATT Characteristic value.\n   * This logic is specific to this service, this is why we can't abstract it elsewhere.\n   * The developer is free to provide any service, and characteristics she wants.\n   *\n   * @return Emites the value of the requested service read from the device\n   */\n  getBatteryLevel() {\n    console.log('Getting Battery Service...');\n\n    try {\n      return (\n        this.ble\n\n          // 1) call the discover method will trigger the discovery process (by the browser)\n          .discover$({\n            acceptAllDevices: true,\n            optionalServices: [BatteryLevelService.GATT_PRIMARY_SERVICE]\n          })\n          .pipe(\n            // 2) get that service\n            mergeMap((gatt: BluetoothRemoteGATTServer) => {\n              return this.ble.getPrimaryService$(gatt, BatteryLevelService.GATT_PRIMARY_SERVICE);\n            }),\n            // 3) get a specific characteristic on that service\n            mergeMap((primaryService: BluetoothRemoteGATTService) => {\n              return this.ble.getCharacteristic$(primaryService, BatteryLevelService.GATT_CHARACTERISTIC_BATTERY_LEVEL);\n            }),\n            // 4) ask for the value of that characteristic (will return a DataView)\n            mergeMap((characteristic: BluetoothRemoteGATTCharacteristic) => {\n              return this.ble.readValue$(characteristic);\n            }),\n            // 5) on that DataView, get the right value\n            map((value: DataView) => value.getUint8(0))\n          )\n      );\n    } catch (e) {\n      console.error('Oops! can not read value from %s');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/battery-level/battery-level.component.ts\n            \n            \n                component\n            \n            \n                BatteryLevelComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/battery-level/battery-level.service.ts\n            \n            \n                injectable\n            \n            \n                BatteryLevelService\n            \n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.0.1\n        \n            @angular/common : ^7.0.1\n        \n            @angular/compiler : ^7.0.1\n        \n            @angular/core : ^7.0.1\n        \n            @angular/forms : ^7.0.1\n        \n            @angular/http : ^7.0.1\n        \n            @angular/platform-browser : ^7.0.1\n        \n            @angular/platform-browser-dynamic : ^7.0.1\n        \n            @angular/router : ^7.0.1\n        \n            @manekinekko/angular-web-bluetooth : file:dist/lib\n        \n            core-js : ^2.5.7\n        \n            rxjs : ^6.3.3\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\nThe missing Web Bluetooth module for Angular\n \n\nYarn it\nyarn add @manekinekko/angular-web-bluetooth @types/web-bluetooth\nor NPM it\nnpm i -S @manekinekko/angular-web-bluetooth @types/web-bluetooth\nNote: Make also sure the @types/web-bluetooth is installed OK.\nUse it\n1) import the WebBluetoothModule module\nimport { NgModule } from '@angular/core';\nimport { WebBluetoothModule } from '@manekinekko/angular-web-bluetooth';\n\n@NgModule({\n  imports: [\n    //...,\n    WebBluetoothModule.forRoot({\n      enableTracing: true / false // enable logs\n    })\n  ]\n  //...\n})\nexport class AppModule {}2) use it in your service/component\nHere is an annotated example using the BluetoothCore service:\nimport { Injectable } from '@angular/core';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatteryLevelService {\n  static GATT_CHARACTERISTIC_BATTERY_LEVEL = 'battery_level';\n  static GATT_PRIMARY_SERVICE = 'battery_service';\n\n  constructor(public ble: BluetoothCore) {}\n\n  getFakeValue() {\n    this.ble.fakeNext();\n  }\n\n  getDevice() {\n    // call this method to get the connected device\n    return this.ble.getDevice$();\n  }\n\n  streamValues() {\n    // call this method to get a stream of values emitted by the device\n    return this.ble.streamValues$().pipe(map((value: DataView) => value.getUint8(0)));\n  }\n\n  /**\n   * Get Battery Level GATT Characteristic value.\n   * This logic is specific to this service, this is why we can't abstract it elsewhere.\n   * The developer is free to provide any service, and characteristics she wants.\n   *\n   * @return Emites the value of the requested service read from the device\n   */\n  getBatteryLevel() {\n    console.log('Getting Battery Service...');\n\n    try {\n      return (\n        this.ble\n\n          // 1) call the discover method will trigger the discovery process (by the browser)\n          .discover$({\n            acceptAllDevices: true,\n            optionalServices: [BatteryLevelService.GATT_PRIMARY_SERVICE]\n          })\n          .pipe(\n            // 2) get that service\n            mergeMap((gatt: BluetoothRemoteGATTServer) => {\n              return this.ble.getPrimaryService$(gatt, BatteryLevelService.GATT_PRIMARY_SERVICE);\n            }),\n            // 3) get a specific characteristic on that service\n            mergeMap((primaryService: BluetoothRemoteGATTService) => {\n              return this.ble.getCharacteristic$(primaryService, BatteryLevelService.GATT_CHARACTERISTIC_BATTERY_LEVEL);\n            }),\n            // 4) ask for the value of that characteristic (will return a DataView)\n            mergeMap((characteristic: BluetoothRemoteGATTCharacteristic) => {\n              return this.ble.readValue$(characteristic);\n            }),\n            // 5) on that DataView, get the right value\n            map((value: DataView) => value.getUint8(0))\n          )\n      );\n    } catch (e) {\n      console.error('Oops! can not read value from %s');\n    }\n  }\n}See the starter for a complete use case.\nAPI documentation\nHere &#x1F449; https://manekinekko.github.io/angular-web-bluetooth/\nNeed a starter?\n\n\nThis project serves also as a starter. Run the following command:\nnpm start\nBlog post\nCheckout my post on medium.\n\n  \n    \n  \n\n\nHave a PR?\nAll contributions are welcome ;)\nLicense\nThe MIT License (MIT) Copyright (c) 2017 - Wassim CHEGHAM\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT) Copyright (c) 2017 - Wassim CHEGHAM\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBatteryLevelComponent\n\nBatteryLevelComponent\n\nAppModule -->\n\nBatteryLevelComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
